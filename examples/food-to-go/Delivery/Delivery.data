import datatypes from "../Common/Common.data" as Common
import datatypes from "DeliveryAPI.data" as DeliveryAPI

context Delivery {
    structure Courier<aggregate, entity> {
        long id<identifier>,
        Plan plan<part>,
        boolean available,
        function ActionList actionsForDelivery(long deliveryId),
        procedure noteAvailable(),
        procedure addAction(Action action),
        procedure cancelDelivery(long deliveryId),
        function Courier create(long courierId)  //STATIC
    }

    structure Action<valueObject> {
      DeliveryAPI::Web.DeliveryActionType type,
      Common::Common.Address address,
      date time,
      long deliveryId,
      function boolean actionFor(long deliveryId),
      function Action makePickup(long deliveryId, Common::Common.Address pickupAddress, date pickupTime),
      function Action makeDropoff(long deliveryId, Common::Common.Address deliveryAddress, date deliveryTime)
    }

    list ActionList {Action action}

    structure Plan<valueObject> {
        hide ActionList actions,
        procedure add(Action action),
        procedure removeDelivery(long deliveryId),
        function ActionList actionsForDelivery(long deliveryId)
    }

    structure Delivery<entity> {
        long id<identifier>,
        Common::Common.Address pickupAddress,
        DeliveryAPI::Web.DeliveryState state,
        long restaurantId,
        date pickUpTime,
        Common::Common.Address deliveryAddress,
        date deliveryTime,
        long assignedCourier,
        date readyBy,
        function Delivery create(long orderId, long restaurantId, Common::Common.Address pickupAddress, Common::Common.Address deliveryAddress), //static
        procedure schedule(date readyBy, long assignedCourier),
        procedure cancel()
    }
    structure Restaurant<entity> {
        long id<identifier>,
        string restaurantName,
        Common::Common.Address address,
        function Restaurant create(long restaurantId, string restaurantName, Common::Common.Address address)//static
    }

    structure DeliveryService<service> {
        procedure createRestaurant(long restaurantId, string restaurantName, Common::Common.Address address),
        procedure createDelivery(long orderId, long restaurantId, Common::Common.Address deliveryAddress),
        procedure scheduleDelivery(long orderId, date readyBy),
        procedure cancelDelivery(long orderId),
        procedure noteAvailable(long courierId),
        procedure noteUnavailable(long courierId),
        function Courier findOrCreateCourier(long courierId),
        procedure updateAvailability(long courierId, boolean available),
        function DeliveryAPI::Web.DeliveryStatus getDeliveryInfo(long deliveryId),
        function DeliveryAPI::Web.DeliveryStatus makeDeliveryStatus(Delivery delivery, long assignedCourier, ActionList courierActions),
        function DeliveryAPI::Web.DeliveryInfo makeDeliveryInfo(Delivery delivery),
        function DeliveryAPI::Web.ActionInfo makeActionInfo(Action action)
    }
}
