import datatypes from "Common.data" as Common

context Order {
    structure Order<aggregate, entity> {
        long id<identifier>,
        immutable long ^version,
        immutable OrderState state,
        immutable long consumerId = -1,
        immutable long restaurantId = -1,

        immutable OrderLineItems orderLineItems<part>,

        hide immutable DeliveryInformation deliveryInformation<part>,

        hide immutable Common::SharedDomainConcepts.Money orderMinimum<part>,

        function Common::SharedDomainConcepts.Money getOrderTotal()
    }

    enum OrderState {
        APPROVED,
        APPROVAL_PENDING,
        REJECTED,
        REVISION_PENDING
    }

    structure OrderLineItem<valueObject> {
        immutable int quantity,
        immutable string menuItemId,
        immutable string name,
        immutable Common::SharedDomainConcepts.Money price,

        function Common::SharedDomainConcepts.Money deltaForChangedQuantity(
            int newQuantity
        )<sideEffectFree>,

        function Common::SharedDomainConcepts.Money getTotal<sideEffectFree>
    }

    structure OrderLineItems<valueObject> {
        immutable OrderLineItemsType lineItems,

        function OrderLineItem findOrderLineItem(string id)<sideEffectFree>,

        function Common::SharedDomainConcepts.Money orderTotal<sideEffectFree>
    }

    collection OrderLineItemsType { OrderLineItem i }

    structure DeliveryInformation<valueObject> {
        immutable date deliveryTime,
        immutable Address deliveryAddress
    }

    structure Address<valueObject> {
        immutable string street1,
        immutable string street2,
        immutable string city,
        immutable string state,
        immutable string zip
    }

    structure OrderService<service> {
        function Order createOrder(long consumerId, long restaurantId,
            MenuItemIdAndQuantityList lineItems),
        function Order updateOrder(long orderId, Order order),
        function Order cancel(long orderId),
        procedure approveOrder(long orderId),
        procedure rejectOrder(long orderId)
    }

    structure MenuItemIdAndQuantity {
        string menuItemId,
        immutable int quantity
    }

    collection MenuItemIdAndQuantityList { MenuItemIdAndQuantity itemQuantity }
}

context API {
    structure CreateOrderRequest<valueObject> {
        immutable long consumerId,
        immutable long restaurantId,
        immutable LineItems lineItems
    }

    structure LineItem {
        immutable string menuItemId,
        immutable int quantity
    }

    collection LineItems { LineItem i }

    structure CreateOrderResponse<valueObject> {
        immutable long orderId
    }

    structure GetOrderResponse<valueObject> {
        immutable long orderId,
        immutable string state,
        immutable Common::SharedDomainConcepts.Money orderTotal
    }

    structure CancelOrderResponse<valueObject> {
        immutable long orderId,
        immutable string state,
        immutable Common::SharedDomainConcepts.Money orderTotal
    }
}