<?xml version="1.0" encoding="ASCII"?>
<intermediate:IntermediateServiceModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:intermediate="http://www.fhdo.de/lemma/service/intermediate" xmlns:intermediate_1="http://www.fhdo.de/lemma/data/intermediate" sourceModelUri="file://../../microservices/Order.services">
  <imports name="OrderDomain" importUri="file://../data models/Order.xmi" importTypeName="DATATYPES"/>
  <imports name="Common" importUri="file://../data models/Common.xmi" importTypeName="DATATYPES"/>
  <imports name="Java" importUri="file://../../technology/JavaSpring.technology" importTypeName="TECHNOLOGY"/>
  <imports name="Eureka" importUri="file://../../technology/Eureka.technology" importTypeName="TECHNOLOGY"/>
  <imports name="Kafka" importUri="file://../../technology/Kafka.technology" importTypeName="TECHNOLOGY"/>
  <imports name="Protocols" importUri="file://../../technology/Protocols.technology" importTypeName="TECHNOLOGY"/>
  <microservices sourceModelUri="file://../../microservices/Order.services" name="org.example.OrderService" qualifiedName="org.example.OrderService" type="FUNCTIONAL" visibility="PUBLIC" effectivelyImplemented="true">
    <technologies name="Java" import="//@imports.2"/>
    <technologies name="Eureka" import="//@imports.3"/>
    <technologies name="Kafka" import="//@imports.4"/>
    <technologies name="Protocols" import="//@imports.5"/>
    <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
    <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
    <interfaces name="Orders" qualifiedName="org.example.OrderService.Orders" visibility="PUBLIC" hasImplementedOperations="true">
      <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json" technology="//@microservices.0/@technologies.3">
        <addresses>/orders</addresses>
      </endpoints>
      <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="xml">
        <addresses>/orders</addresses>
      </endpoints>
      <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
      <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
      <operations name="create" qualifiedName="org.example.OrderService.Orders.create" visibility="PUBLIC">
        <apiOperationComment comment="Create order">
          <parameterComments comment="Request" required="true" parameter="//@microservices.0/@interfaces.0/@operations.0/@parameters.0"/>
        </apiOperationComment>
        <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
        <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
        <aspects name="PostMapping" qualifiedName="java.PostMapping" import="//@imports.2">
          <featureNames>SINGLE_VALUED</featureNames>
        </aspects>
        <parameters name="request" qualifiedName="org.example.OrderService.Orders.create.request" exchangePattern="IN" communicationType="SYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedComplexType" name="CreateOrderRequest" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.CreateOrderRequest" import="//@imports.0"/>
          <originalType xsi:type="intermediate_1:IntermediateImportedComplexType" name="CreateOrderRequest" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.CreateOrderRequest" import="//@imports.0"/>
        </parameters>
        <parameters name="response" qualifiedName="org.example.OrderService.Orders.create.response" exchangePattern="OUT" communicationType="SYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedComplexType" name="CreateOrderResponse" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.CreateOrderResponse" import="//@imports.0"/>
          <originalType xsi:type="intermediate_1:IntermediateImportedComplexType" name="CreateOrderResponse" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.CreateOrderResponse" import="//@imports.0"/>
        </parameters>
      </operations>
      <operations name="getOrder" qualifiedName="org.example.OrderService.Orders.getOrder" visibility="PUBLIC">
        <apiOperationComment comment="Get order">
          <parameterComments comment="ID of the order to retrieve" required="true" parameter="//@microservices.0/@interfaces.0/@operations.1/@parameters.0"/>
        </apiOperationComment>
        <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json" technology="//@microservices.0/@technologies.3">
          <addresses>/{orderId}</addresses>
        </endpoints>
        <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="xml">
          <addresses>/{orderId}</addresses>
        </endpoints>
        <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
        <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
        <aspects name="GetMapping" qualifiedName="java.GetMapping" import="//@imports.2">
          <featureNames>SINGLE_VALUED</featureNames>
        </aspects>
        <parameters name="orderId" qualifiedName="org.example.OrderService.Orders.getOrder.orderId" exchangePattern="IN" communicationType="SYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedTechnologySpecificType" name="Long" origin="TECHNOLOGY" kind="PRIMITIVE" qualifiedName="java._types.Long" import="//@imports.2"/>
          <originalType xsi:type="intermediate_1:IntermediatePrimitiveType" name="long" origin="BUILTIN" kind="PRIMITIVE" size="64"/>
          <aspects name="PathVariable" qualifiedName="java.PathVariable" import="//@imports.2"/>
        </parameters>
        <parameters name="response" qualifiedName="org.example.OrderService.Orders.getOrder.response" exchangePattern="OUT" communicationType="SYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedComplexType" name="GetOrderResponse" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.GetOrderResponse" import="//@imports.0"/>
          <originalType xsi:type="intermediate_1:IntermediateImportedComplexType" name="GetOrderResponse" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.GetOrderResponse" import="//@imports.0"/>
          <aspects name="ResponseEntity" qualifiedName="java.ResponseEntity" import="//@imports.2"/>
        </parameters>
      </operations>
      <operations name="cancel" qualifiedName="org.example.OrderService.Orders.cancel" visibility="PUBLIC">
        <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json" technology="//@microservices.0/@technologies.3">
          <addresses>/{orderId}/cancel</addresses>
        </endpoints>
        <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="xml">
          <addresses>/{orderId}/cancel</addresses>
        </endpoints>
        <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
        <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
        <parameters name="orderId" qualifiedName="org.example.OrderService.Orders.cancel.orderId" exchangePattern="IN" communicationType="SYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedTechnologySpecificType" name="Long" origin="TECHNOLOGY" kind="PRIMITIVE" qualifiedName="java._types.Long" import="//@imports.2"/>
          <originalType xsi:type="intermediate_1:IntermediatePrimitiveType" name="long" origin="BUILTIN" kind="PRIMITIVE" size="64"/>
          <aspects name="PathVariable" qualifiedName="java.PathVariable" import="//@imports.2"/>
        </parameters>
        <parameters name="response" qualifiedName="org.example.OrderService.Orders.cancel.response" exchangePattern="OUT" communicationType="SYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedComplexType" name="CancelOrderResponse" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.CancelOrderResponse" import="//@imports.0"/>
          <originalType xsi:type="intermediate_1:IntermediateImportedComplexType" name="CancelOrderResponse" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="API.CancelOrderResponse" import="//@imports.0"/>
          <aspects name="ResponseEntity" qualifiedName="java.ResponseEntity" import="//@imports.2"/>
        </parameters>
        <parameters name="error" qualifiedName="org.example.OrderService.Orders.cancel.error" exchangePattern="OUT" communicationType="SYNCHRONOUS" communicatesFault="true">
          <type xsi:type="intermediate_1:IntermediateImportedTechnologySpecificType" name="Integer" origin="TECHNOLOGY" kind="PRIMITIVE" qualifiedName="java._types.Integer" import="//@imports.2"/>
          <originalType xsi:type="intermediate_1:IntermediatePrimitiveType" name="int" origin="BUILTIN" kind="PRIMITIVE" size="32"/>
          <aspects name="HttpNotFound" qualifiedName="java.HttpNotFound" import="//@imports.2">
            <featureNames>SINGLE_VALUED</featureNames>
          </aspects>
        </parameters>
      </operations>
    </interfaces>
    <interfaces name="OrderEventConsumer" qualifiedName="org.example.OrderService.OrderEventConsumer" visibility="PUBLIC" hasImplementedOperations="true">
      <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
      <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
      <operations name="listenCreateMenu" qualifiedName="org.example.OrderService.OrderEventConsumer.listenCreateMenu" visibility="PUBLIC">
        <protocols communicationType="SYNCHRONOUS" protocol="rest" dataFormat="json"/>
        <protocols communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary"/>
        <aspects name="KafkaListener" qualifiedName="Kafka.KafkaListener" import="//@imports.4">
          <featureNames>SINGLE_VALUED</featureNames>
          <properties name="group" type="string"/>
          <properties name="topic" type="string"/>
          <propertyValues value="ftgo" property="//@microservices.0/@interfaces.1/@operations.0/@aspects.0/@properties.0"/>
          <propertyValues value="ftgoTopic" property="//@microservices.0/@interfaces.1/@operations.0/@aspects.0/@properties.1"/>
        </aspects>
        <parameters name="menuCreated" qualifiedName="org.example.OrderService.OrderEventConsumer.listenCreateMenu.menuCreated" exchangePattern="IN" communicationType="ASYNCHRONOUS">
          <type xsi:type="intermediate_1:IntermediateImportedComplexType" name="RestaurantCreated" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="DomainEvents.RestaurantCreated" import="//@imports.1"/>
          <originalType xsi:type="intermediate_1:IntermediateImportedComplexType" name="RestaurantCreated" origin="DATA_MODEL" kind="STRUCTURE" qualifiedName="DomainEvents.RestaurantCreated" import="//@imports.1"/>
        </parameters>
      </operations>
    </interfaces>
    <aspects name="EnableEurekaClient" qualifiedName="eureka.EnableEurekaClient" import="//@imports.3"/>
  </microservices>
</intermediate:IntermediateServiceModel>
