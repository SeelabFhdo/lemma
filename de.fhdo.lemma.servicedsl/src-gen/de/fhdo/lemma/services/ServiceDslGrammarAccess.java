/*
 * generated by Xtext 2.25.0
 */
package de.fhdo.lemma.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fhdo.lemma.data.services.DataDslGrammarAccess;
import de.fhdo.lemma.technology.services.TechnologyDslGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ServiceDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ServiceModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ServiceModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cMicroservicesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMicroservicesMicroserviceParserRuleCall_1_0 = (RuleCall)cMicroservicesAssignment_1.eContents().get(0);
		
		//ServiceModel returns ServiceModel:
		//    imports+=Import*
		//    microservices+=Microservice+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=Import*
		//microservices+=Microservice+
		public Group getGroup() { return cGroup; }
		
		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }
		
		//microservices+=Microservice+
		public Assignment getMicroservicesAssignment_1() { return cMicroservicesAssignment_1; }
		
		//Microservice
		public RuleCall getMicroservicesMicroserviceParserRuleCall_1_0() { return cMicroservicesMicroserviceParserRuleCall_1_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportTypeImportTypeEnumRuleCall_1_0 = (RuleCall)cImportTypeAssignment_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportURIAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportURISTRINGTerminalRuleCall_3_0 = (RuleCall)cImportURIAssignment_3.eContents().get(0);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		
		//Import returns Import:
		//    'import' importType=ImportType 'from' importURI=STRING 'as' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importType=ImportType 'from' importURI=STRING 'as' name=ID
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importType=ImportType
		public Assignment getImportTypeAssignment_1() { return cImportTypeAssignment_1; }
		
		//ImportType
		public RuleCall getImportTypeImportTypeEnumRuleCall_1_0() { return cImportTypeImportTypeEnumRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_3() { return cImportURIAssignment_3; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_3_0() { return cImportURISTRINGTerminalRuleCall_3_0; }
		
		//'as'
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
	}
	public class MicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Microservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTechnologyReferencesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTechnologyReferencesTechnologyReferenceParserRuleCall_0_0 = (RuleCall)cTechnologyReferencesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cProtocolsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_1_0_0 = (RuleCall)cProtocolsAssignment_1_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEndpointsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cEndpointsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_2_3_0 = (RuleCall)cEndpointsAssignment_2_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommercialAtKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEndpointsKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftParenthesisLeftCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cEndpointsAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_3_3_0 = (RuleCall)cEndpointsAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cAspectsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_4_0 = (RuleCall)cAspectsAssignment_4.eContents().get(0);
		private final Assignment cVisibilityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_5_0 = (RuleCall)cVisibilityAssignment_5.eContents().get(0);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeMicroserviceTypeEnumRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cMicroserviceKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cNameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cNameQualifiedNameWithAtLeastOneLevelParserRuleCall_8_0 = (RuleCall)cNameAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cVersionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cVersionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cVersionIDTerminalRuleCall_9_1_0 = (RuleCall)cVersionAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cRequiredKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cMicroservicesKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cRequiredMicroservicesAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_3_0 = (RuleCall)cRequiredMicroservicesAssignment_11_3.eContents().get(0);
		private final Group cGroup_11_4 = (Group)cGroup_11.eContents().get(4);
		private final Keyword cCommaKeyword_11_4_0 = (Keyword)cGroup_11_4.eContents().get(0);
		private final Assignment cRequiredMicroservicesAssignment_11_4_1 = (Assignment)cGroup_11_4.eContents().get(1);
		private final RuleCall cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_4_1_0 = (RuleCall)cRequiredMicroservicesAssignment_11_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_5 = (Keyword)cGroup_11.eContents().get(5);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cRequiredKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cInterfacesKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Assignment cRequiredInterfacesAssignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_3_0 = (RuleCall)cRequiredInterfacesAssignment_12_3.eContents().get(0);
		private final Group cGroup_12_4 = (Group)cGroup_12.eContents().get(4);
		private final Keyword cCommaKeyword_12_4_0 = (Keyword)cGroup_12_4.eContents().get(0);
		private final Assignment cRequiredInterfacesAssignment_12_4_1 = (Assignment)cGroup_12_4.eContents().get(1);
		private final RuleCall cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_4_1_0 = (RuleCall)cRequiredInterfacesAssignment_12_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_5 = (Keyword)cGroup_12.eContents().get(5);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cRequiredKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cOperationsKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final Assignment cRequiredOperationsAssignment_13_3 = (Assignment)cGroup_13.eContents().get(3);
		private final RuleCall cRequiredOperationsPossiblyImportedOperationParserRuleCall_13_3_0 = (RuleCall)cRequiredOperationsAssignment_13_3.eContents().get(0);
		private final Group cGroup_13_4 = (Group)cGroup_13.eContents().get(4);
		private final Keyword cCommaKeyword_13_4_0 = (Keyword)cGroup_13_4.eContents().get(0);
		private final Assignment cRequiredOperationsAssignment_13_4_1 = (Assignment)cGroup_13_4.eContents().get(1);
		private final RuleCall cRequiredOperationsPossiblyImportedOperationParserRuleCall_13_4_1_0 = (RuleCall)cRequiredOperationsAssignment_13_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_5 = (Keyword)cGroup_13.eContents().get(5);
		private final Assignment cInterfacesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cInterfacesInterfaceParserRuleCall_14_0 = (RuleCall)cInterfacesAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Microservice returns Microservice:
		//    (technologyReferences+=TechnologyReference)*
		//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//    aspects+=ImportedServiceAspect*
		//    visibility=Visibility?
		//    type=MicroserviceType
		//    'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
		//    // TODO: Inheritance of microservices
		//    //('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
		//    '{'
		//        ('required' 'microservices' '{'
		//            requiredMicroservices+=PossiblyImportedMicroservice
		//            (',' requiredMicroservices+=PossiblyImportedMicroservice)*
		//        '}')?
		//        ('required' 'interfaces' '{'
		//            requiredInterfaces+=PossiblyImportedInterface
		//            (',' requiredInterfaces+=PossiblyImportedInterface)*
		//        '}')?
		//        ('required' 'operations' '{'
		//            requiredOperations+=PossiblyImportedOperation
		//            (',' requiredOperations+=PossiblyImportedOperation)*
		//        '}')?
		//        interfaces+=Interface+
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(technologyReferences+=TechnologyReference)*
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//aspects+=ImportedServiceAspect*
		//visibility=Visibility?
		//type=MicroserviceType
		//'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
		//// TODO: Inheritance of microservices
		////('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
		//'{'
		//    ('required' 'microservices' '{'
		//        requiredMicroservices+=PossiblyImportedMicroservice
		//        (',' requiredMicroservices+=PossiblyImportedMicroservice)*
		//    '}')?
		//    ('required' 'interfaces' '{'
		//        requiredInterfaces+=PossiblyImportedInterface
		//        (',' requiredInterfaces+=PossiblyImportedInterface)*
		//    '}')?
		//    ('required' 'operations' '{'
		//        requiredOperations+=PossiblyImportedOperation
		//        (',' requiredOperations+=PossiblyImportedOperation)*
		//    '}')?
		//    interfaces+=Interface+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(technologyReferences+=TechnologyReference)*
		public Assignment getTechnologyReferencesAssignment_0() { return cTechnologyReferencesAssignment_0; }
		
		//TechnologyReference
		public RuleCall getTechnologyReferencesTechnologyReferenceParserRuleCall_0_0() { return cTechnologyReferencesTechnologyReferenceParserRuleCall_0_0; }
		
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		public Group getGroup_1() { return cGroup_1; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_1_0() { return cProtocolsAssignment_1_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_1_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_1_0_0; }
		
		//(protocols+=ProtocolSpecification)?
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_1_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_1_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_2_1() { return cEndpointsKeyword_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_2() { return cLeftParenthesisKeyword_2_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_2_3() { return cEndpointsAssignment_2_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_2_3_0() { return cEndpointsEndpointParserRuleCall_2_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'@'
		public Keyword getCommercialAtKeyword_3_0() { return cCommercialAtKeyword_3_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_3_1() { return cEndpointsKeyword_3_1; }
		
		//'({'
		public Keyword getLeftParenthesisLeftCurlyBracketKeyword_3_2() { return cLeftParenthesisLeftCurlyBracketKeyword_3_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_3_3() { return cEndpointsAssignment_3_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_3_3_0() { return cEndpointsEndpointParserRuleCall_3_3_0; }
		
		//'})'
		public Keyword getRightCurlyBracketRightParenthesisKeyword_3_4() { return cRightCurlyBracketRightParenthesisKeyword_3_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_4() { return cAspectsAssignment_4; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_4_0() { return cAspectsImportedServiceAspectParserRuleCall_4_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_5() { return cVisibilityAssignment_5; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_5_0() { return cVisibilityVisibilityEnumRuleCall_5_0; }
		
		//type=MicroserviceType
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//MicroserviceType
		public RuleCall getTypeMicroserviceTypeEnumRuleCall_6_0() { return cTypeMicroserviceTypeEnumRuleCall_6_0; }
		
		//'microservice'
		public Keyword getMicroserviceKeyword_7() { return cMicroserviceKeyword_7; }
		
		//name=QualifiedNameWithAtLeastOneLevel
		public Assignment getNameAssignment_8() { return cNameAssignment_8; }
		
		//QualifiedNameWithAtLeastOneLevel
		public RuleCall getNameQualifiedNameWithAtLeastOneLevelParserRuleCall_8_0() { return cNameQualifiedNameWithAtLeastOneLevelParserRuleCall_8_0; }
		
		//('version' version=ID)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'version'
		public Keyword getVersionKeyword_9_0() { return cVersionKeyword_9_0; }
		
		//version=ID
		public Assignment getVersionAssignment_9_1() { return cVersionAssignment_9_1; }
		
		//ID
		public RuleCall getVersionIDTerminalRuleCall_9_1_0() { return cVersionIDTerminalRuleCall_9_1_0; }
		
		//// TODO: Inheritance of microservices
		////('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//('required' 'microservices' '{'
		//    requiredMicroservices+=PossiblyImportedMicroservice
		//    (',' requiredMicroservices+=PossiblyImportedMicroservice)*
		//'}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'required'
		public Keyword getRequiredKeyword_11_0() { return cRequiredKeyword_11_0; }
		
		//'microservices'
		public Keyword getMicroservicesKeyword_11_1() { return cMicroservicesKeyword_11_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_2() { return cLeftCurlyBracketKeyword_11_2; }
		
		//requiredMicroservices+=PossiblyImportedMicroservice
		public Assignment getRequiredMicroservicesAssignment_11_3() { return cRequiredMicroservicesAssignment_11_3; }
		
		//PossiblyImportedMicroservice
		public RuleCall getRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_3_0() { return cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_3_0; }
		
		//(',' requiredMicroservices+=PossiblyImportedMicroservice)*
		public Group getGroup_11_4() { return cGroup_11_4; }
		
		//','
		public Keyword getCommaKeyword_11_4_0() { return cCommaKeyword_11_4_0; }
		
		//requiredMicroservices+=PossiblyImportedMicroservice
		public Assignment getRequiredMicroservicesAssignment_11_4_1() { return cRequiredMicroservicesAssignment_11_4_1; }
		
		//PossiblyImportedMicroservice
		public RuleCall getRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_4_1_0() { return cRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_5() { return cRightCurlyBracketKeyword_11_5; }
		
		//('required' 'interfaces' '{'
		//    requiredInterfaces+=PossiblyImportedInterface
		//    (',' requiredInterfaces+=PossiblyImportedInterface)*
		//'}')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'required'
		public Keyword getRequiredKeyword_12_0() { return cRequiredKeyword_12_0; }
		
		//'interfaces'
		public Keyword getInterfacesKeyword_12_1() { return cInterfacesKeyword_12_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_2() { return cLeftCurlyBracketKeyword_12_2; }
		
		//requiredInterfaces+=PossiblyImportedInterface
		public Assignment getRequiredInterfacesAssignment_12_3() { return cRequiredInterfacesAssignment_12_3; }
		
		//PossiblyImportedInterface
		public RuleCall getRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_3_0() { return cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_3_0; }
		
		//(',' requiredInterfaces+=PossiblyImportedInterface)*
		public Group getGroup_12_4() { return cGroup_12_4; }
		
		//','
		public Keyword getCommaKeyword_12_4_0() { return cCommaKeyword_12_4_0; }
		
		//requiredInterfaces+=PossiblyImportedInterface
		public Assignment getRequiredInterfacesAssignment_12_4_1() { return cRequiredInterfacesAssignment_12_4_1; }
		
		//PossiblyImportedInterface
		public RuleCall getRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_4_1_0() { return cRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_5() { return cRightCurlyBracketKeyword_12_5; }
		
		//('required' 'operations' '{'
		//    requiredOperations+=PossiblyImportedOperation
		//    (',' requiredOperations+=PossiblyImportedOperation)*
		//'}')?
		public Group getGroup_13() { return cGroup_13; }
		
		//'required'
		public Keyword getRequiredKeyword_13_0() { return cRequiredKeyword_13_0; }
		
		//'operations'
		public Keyword getOperationsKeyword_13_1() { return cOperationsKeyword_13_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_2() { return cLeftCurlyBracketKeyword_13_2; }
		
		//requiredOperations+=PossiblyImportedOperation
		public Assignment getRequiredOperationsAssignment_13_3() { return cRequiredOperationsAssignment_13_3; }
		
		//PossiblyImportedOperation
		public RuleCall getRequiredOperationsPossiblyImportedOperationParserRuleCall_13_3_0() { return cRequiredOperationsPossiblyImportedOperationParserRuleCall_13_3_0; }
		
		//(',' requiredOperations+=PossiblyImportedOperation)*
		public Group getGroup_13_4() { return cGroup_13_4; }
		
		//','
		public Keyword getCommaKeyword_13_4_0() { return cCommaKeyword_13_4_0; }
		
		//requiredOperations+=PossiblyImportedOperation
		public Assignment getRequiredOperationsAssignment_13_4_1() { return cRequiredOperationsAssignment_13_4_1; }
		
		//PossiblyImportedOperation
		public RuleCall getRequiredOperationsPossiblyImportedOperationParserRuleCall_13_4_1_0() { return cRequiredOperationsPossiblyImportedOperationParserRuleCall_13_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_5() { return cRightCurlyBracketKeyword_13_5; }
		
		//interfaces+=Interface+
		public Assignment getInterfacesAssignment_14() { return cInterfacesAssignment_14; }
		
		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_14_0() { return cInterfacesInterfaceParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class TechnologyReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.TechnologyReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTechnologyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTechnologyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTechnologyImportCrossReference_3_0 = (CrossReference)cTechnologyAssignment_3.eContents().get(0);
		private final RuleCall cTechnologyImportIDTerminalRuleCall_3_0_1 = (RuleCall)cTechnologyImportCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cTypedefKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cEqualsSignKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cIsTypeDefinitionTechnologyAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cIsTypeDefinitionTechnologyBOOLEANTerminalRuleCall_4_3_0 = (RuleCall)cIsTypeDefinitionTechnologyAssignment_4_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TechnologyReference returns TechnologyReference:
		//    '@' 'technology'
		//        '('
		//            technology=[Import]
		//            (',' 'typedef' '=' isTypeDefinitionTechnology=BOOLEAN)?
		//        ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' 'technology'
		//    '('
		//        technology=[Import]
		//        (',' 'typedef' '=' isTypeDefinitionTechnology=BOOLEAN)?
		//    ')'
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_1() { return cTechnologyKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//technology=[Import]
		public Assignment getTechnologyAssignment_3() { return cTechnologyAssignment_3; }
		
		//[Import]
		public CrossReference getTechnologyImportCrossReference_3_0() { return cTechnologyImportCrossReference_3_0; }
		
		//ID
		public RuleCall getTechnologyImportIDTerminalRuleCall_3_0_1() { return cTechnologyImportIDTerminalRuleCall_3_0_1; }
		
		//(',' 'typedef' '=' isTypeDefinitionTechnology=BOOLEAN)?
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//'typedef'
		public Keyword getTypedefKeyword_4_1() { return cTypedefKeyword_4_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_2() { return cEqualsSignKeyword_4_2; }
		
		//isTypeDefinitionTechnology=BOOLEAN
		public Assignment getIsTypeDefinitionTechnologyAssignment_4_3() { return cIsTypeDefinitionTechnologyAssignment_4_3; }
		
		//BOOLEAN
		public RuleCall getIsTypeDefinitionTechnologyBOOLEANTerminalRuleCall_4_3_0() { return cIsTypeDefinitionTechnologyBOOLEANTerminalRuleCall_4_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class PossiblyImportedMicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.PossiblyImportedMicroservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cMicroserviceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMicroserviceMicroserviceCrossReference_1_0 = (CrossReference)cMicroserviceAssignment_1.eContents().get(0);
		private final RuleCall cMicroserviceMicroserviceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cMicroserviceMicroserviceCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedMicroservice returns PossiblyImportedMicroservice:
		//    (^import=[Import] '::')? microservice=[Microservice|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[Import] '::')? microservice=[Microservice|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//microservice=[Microservice|QualifiedName]
		public Assignment getMicroserviceAssignment_1() { return cMicroserviceAssignment_1; }
		
		//[Microservice|QualifiedName]
		public CrossReference getMicroserviceMicroserviceCrossReference_1_0() { return cMicroserviceMicroserviceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getMicroserviceMicroserviceQualifiedNameParserRuleCall_1_0_1() { return cMicroserviceMicroserviceQualifiedNameParserRuleCall_1_0_1; }
	}
	public class PossiblyImportedInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.PossiblyImportedInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cInterfaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cInterfaceInterfaceCrossReference_1_0 = (CrossReference)cInterfaceAssignment_1.eContents().get(0);
		private final RuleCall cInterfaceInterfaceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cInterfaceInterfaceCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedInterface returns PossiblyImportedInterface:
		//    (^import=[Import] '::')? interface=[Interface|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[Import] '::')? interface=[Interface|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//interface=[Interface|QualifiedName]
		public Assignment getInterfaceAssignment_1() { return cInterfaceAssignment_1; }
		
		//[Interface|QualifiedName]
		public CrossReference getInterfaceInterfaceCrossReference_1_0() { return cInterfaceInterfaceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getInterfaceInterfaceQualifiedNameParserRuleCall_1_0_1() { return cInterfaceInterfaceQualifiedNameParserRuleCall_1_0_1; }
	}
	public class PossiblyImportedOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.PossiblyImportedOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOperationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOperationOperationCrossReference_1_0 = (CrossReference)cOperationAssignment_1.eContents().get(0);
		private final RuleCall cOperationOperationQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cOperationOperationCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedOperation returns PossiblyImportedOperation:
		//    (^import=[Import] '::')? operation=[Operation|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[Import] '::')? operation=[Operation|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//operation=[Operation|QualifiedName]
		public Assignment getOperationAssignment_1() { return cOperationAssignment_1; }
		
		//[Operation|QualifiedName]
		public CrossReference getOperationOperationCrossReference_1_0() { return cOperationOperationCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getOperationOperationQualifiedNameParserRuleCall_1_0_1() { return cOperationOperationQualifiedNameParserRuleCall_1_0_1; }
	}
	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_0_0 = (RuleCall)cProtocolsAssignment_0_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_1_0 = (RuleCall)cProtocolsAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommercialAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEndpointsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_1_3_0 = (RuleCall)cEndpointsAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEndpointsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisLeftCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cEndpointsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_2_3_0 = (RuleCall)cEndpointsAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cAspectsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_3_0 = (RuleCall)cAspectsAssignment_3.eContents().get(0);
		private final Assignment cNotImplementedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cNotImplementedNoimplKeyword_4_0 = (Keyword)cNotImplementedAssignment_4.eContents().get(0);
		private final Assignment cVisibilityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_5_0 = (RuleCall)cVisibilityAssignment_5.eContents().get(0);
		private final Keyword cInterfaceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameIDTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVersionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cVersionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cVersionIDTerminalRuleCall_8_1_0 = (RuleCall)cVersionAssignment_8_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cReferredOperationsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cReferredOperationsReferredOperationParserRuleCall_10_0 = (RuleCall)cReferredOperationsAssignment_10.eContents().get(0);
		private final Assignment cOperationsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOperationsOperationParserRuleCall_11_0 = (RuleCall)cOperationsAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Interface returns Interface:
		//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//    aspects+=ImportedServiceAspect*
		//    (notImplemented?='noimpl')? visibility=Visibility? 'interface' name=ID ('version' version=ID)?
		//    '{'
		//        referredOperations+=ReferredOperation*
		//        operations+=Operation*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//aspects+=ImportedServiceAspect*
		//(notImplemented?='noimpl')? visibility=Visibility? 'interface' name=ID ('version' version=ID)?
		//'{'
		//    referredOperations+=ReferredOperation*
		//    operations+=Operation*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_0_0() { return cProtocolsAssignment_0_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_0_0; }
		
		//(protocols+=ProtocolSpecification)?
		public Assignment getProtocolsAssignment_0_1() { return cProtocolsAssignment_0_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1_0() { return cCommercialAtKeyword_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_1_1() { return cEndpointsKeyword_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_1_3() { return cEndpointsAssignment_1_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_1_3_0() { return cEndpointsEndpointParserRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_2_1() { return cEndpointsKeyword_2_1; }
		
		//'({'
		public Keyword getLeftParenthesisLeftCurlyBracketKeyword_2_2() { return cLeftParenthesisLeftCurlyBracketKeyword_2_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_2_3() { return cEndpointsAssignment_2_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_2_3_0() { return cEndpointsEndpointParserRuleCall_2_3_0; }
		
		//'})'
		public Keyword getRightCurlyBracketRightParenthesisKeyword_2_4() { return cRightCurlyBracketRightParenthesisKeyword_2_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_3() { return cAspectsAssignment_3; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_3_0() { return cAspectsImportedServiceAspectParserRuleCall_3_0; }
		
		//(notImplemented?='noimpl')?
		public Assignment getNotImplementedAssignment_4() { return cNotImplementedAssignment_4; }
		
		//'noimpl'
		public Keyword getNotImplementedNoimplKeyword_4_0() { return cNotImplementedNoimplKeyword_4_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_5() { return cVisibilityAssignment_5; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_5_0() { return cVisibilityVisibilityEnumRuleCall_5_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_6() { return cInterfaceKeyword_6; }
		
		//name=ID
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_7_0() { return cNameIDTerminalRuleCall_7_0; }
		
		//('version' version=ID)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'version'
		public Keyword getVersionKeyword_8_0() { return cVersionKeyword_8_0; }
		
		//version=ID
		public Assignment getVersionAssignment_8_1() { return cVersionAssignment_8_1; }
		
		//ID
		public RuleCall getVersionIDTerminalRuleCall_8_1_0() { return cVersionIDTerminalRuleCall_8_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//referredOperations+=ReferredOperation*
		public Assignment getReferredOperationsAssignment_10() { return cReferredOperationsAssignment_10; }
		
		//ReferredOperation
		public RuleCall getReferredOperationsReferredOperationParserRuleCall_10_0() { return cReferredOperationsReferredOperationParserRuleCall_10_0; }
		
		//operations+=Operation*
		public Assignment getOperationsAssignment_11() { return cOperationsAssignment_11; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_11_0() { return cOperationsOperationParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ApiOperationCommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ApiOperationComment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusHyphenMinusHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCommentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommentAnythingParserRuleCall_1_0 = (RuleCall)cCommentAssignment_1.eContents().get(0);
		private final Assignment cParameterCommentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParameterCommentsApiParameterCommentParserRuleCall_2_0 = (RuleCall)cParameterCommentsAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusHyphenMinusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ApiOperationComment returns ApiOperationComment:
		//    '---'
		//        comment=Anything
		//        parameterComments+=ApiParameterComment*
		//    '---'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'---'
		//    comment=Anything
		//    parameterComments+=ApiParameterComment*
		//'---'
		public Group getGroup() { return cGroup; }
		
		//'---'
		public Keyword getHyphenMinusHyphenMinusHyphenMinusKeyword_0() { return cHyphenMinusHyphenMinusHyphenMinusKeyword_0; }
		
		//comment=Anything
		public Assignment getCommentAssignment_1() { return cCommentAssignment_1; }
		
		//Anything
		public RuleCall getCommentAnythingParserRuleCall_1_0() { return cCommentAnythingParserRuleCall_1_0; }
		
		//parameterComments+=ApiParameterComment*
		public Assignment getParameterCommentsAssignment_2() { return cParameterCommentsAssignment_2; }
		
		//ApiParameterComment
		public RuleCall getParameterCommentsApiParameterCommentParserRuleCall_2_0() { return cParameterCommentsApiParameterCommentParserRuleCall_2_0; }
		
		//'---'
		public Keyword getHyphenMinusHyphenMinusHyphenMinusKeyword_3() { return cHyphenMinusHyphenMinusHyphenMinusKeyword_3; }
	}
	public class ApiParameterCommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ApiParameterComment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cParamKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Assignment cRequiredAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cRequiredRequiredKeyword_0_1_0 = (Keyword)cRequiredAssignment_0_1.eContents().get(0);
		private final Assignment cRequiredAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final Keyword cRequiredRequiresKeyword_0_2_0 = (Keyword)cRequiredAssignment_0_2.eContents().get(0);
		private final Assignment cReturnedAssignment_0_3 = (Assignment)cAlternatives_0.eContents().get(3);
		private final Keyword cReturnedReturnedKeyword_0_3_0 = (Keyword)cReturnedAssignment_0_3.eContents().get(0);
		private final Assignment cReturnedAssignment_0_4 = (Assignment)cAlternatives_0.eContents().get(4);
		private final Keyword cReturnedReturnsKeyword_0_4_0 = (Keyword)cReturnedAssignment_0_4.eContents().get(0);
		private final Assignment cParameterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cParameterParameterCrossReference_1_0 = (CrossReference)cParameterAssignment_1.eContents().get(0);
		private final RuleCall cParameterParameterIDTerminalRuleCall_1_0_1 = (RuleCall)cParameterParameterCrossReference_1_0.eContents().get(1);
		private final Assignment cCommentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCommentAnythingParserRuleCall_2_0 = (RuleCall)cCommentAssignment_2.eContents().get(0);
		
		//ApiParameterComment returns ApiParameterComment:
		//    (
		//        '@param' |
		//        required?='@required' |
		//        required?='@requires' |
		//        ^returned?='@returned' |
		//        ^returned?='@returns'
		//    )
		//    parameter=[Parameter]
		//    comment=Anything
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(
		//    '@param' |
		//    required?='@required' |
		//    required?='@requires' |
		//    ^returned?='@returned' |
		//    ^returned?='@returns'
		//)
		//parameter=[Parameter]
		//comment=Anything
		public Group getGroup() { return cGroup; }
		
		//(
		//    '@param' |
		//    required?='@required' |
		//    required?='@requires' |
		//    ^returned?='@returned' |
		//    ^returned?='@returns'
		//)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'@param'
		public Keyword getParamKeyword_0_0() { return cParamKeyword_0_0; }
		
		//required?='@required'
		public Assignment getRequiredAssignment_0_1() { return cRequiredAssignment_0_1; }
		
		//'@required'
		public Keyword getRequiredRequiredKeyword_0_1_0() { return cRequiredRequiredKeyword_0_1_0; }
		
		//required?='@requires'
		public Assignment getRequiredAssignment_0_2() { return cRequiredAssignment_0_2; }
		
		//'@requires'
		public Keyword getRequiredRequiresKeyword_0_2_0() { return cRequiredRequiresKeyword_0_2_0; }
		
		//^returned?='@returned'
		public Assignment getReturnedAssignment_0_3() { return cReturnedAssignment_0_3; }
		
		//'@returned'
		public Keyword getReturnedReturnedKeyword_0_3_0() { return cReturnedReturnedKeyword_0_3_0; }
		
		//^returned?='@returns'
		public Assignment getReturnedAssignment_0_4() { return cReturnedAssignment_0_4; }
		
		//'@returns'
		public Keyword getReturnedReturnsKeyword_0_4_0() { return cReturnedReturnsKeyword_0_4_0; }
		
		//parameter=[Parameter]
		public Assignment getParameterAssignment_1() { return cParameterAssignment_1; }
		
		//[Parameter]
		public CrossReference getParameterParameterCrossReference_1_0() { return cParameterParameterCrossReference_1_0; }
		
		//ID
		public RuleCall getParameterParameterIDTerminalRuleCall_1_0_1() { return cParameterParameterIDTerminalRuleCall_1_0_1; }
		
		//comment=Anything
		public Assignment getCommentAssignment_2() { return cCommentAssignment_2; }
		
		//Anything
		public RuleCall getCommentAnythingParserRuleCall_2_0() { return cCommentAnythingParserRuleCall_2_0; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cApiOperationCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cApiOperationCommentApiOperationCommentParserRuleCall_0_0 = (RuleCall)cApiOperationCommentAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cProtocolsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_1_0_0 = (RuleCall)cProtocolsAssignment_1_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEndpointsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cEndpointsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_2_3_0 = (RuleCall)cEndpointsAssignment_2_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommercialAtKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEndpointsKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftParenthesisLeftCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cEndpointsAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_3_3_0 = (RuleCall)cEndpointsAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cAspectsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_4_0 = (RuleCall)cAspectsAssignment_4.eContents().get(0);
		private final Assignment cNotImplementedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cNotImplementedNoimplKeyword_5_0 = (Keyword)cNotImplementedAssignment_5.eContents().get(0);
		private final Assignment cVisibilityAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_6_0 = (RuleCall)cVisibilityAssignment_6.eContents().get(0);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameIDTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cParametersAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cParametersParameterParserRuleCall_9_0 = (RuleCall)cParametersAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cParametersAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_10_1_0 = (RuleCall)cParametersAssignment_10_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Operation returns Operation:
		//    (apiOperationComment=ApiOperationComment)?
		//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//    aspects+=ImportedServiceAspect*
		//    (notImplemented?='noimpl')? visibility=Visibility? name=ID '('
		//        parameters+=Parameter? (',' parameters+=Parameter)*
		//    ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(apiOperationComment=ApiOperationComment)?
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//aspects+=ImportedServiceAspect*
		//(notImplemented?='noimpl')? visibility=Visibility? name=ID '('
		//    parameters+=Parameter? (',' parameters+=Parameter)*
		//')' ';'
		public Group getGroup() { return cGroup; }
		
		//(apiOperationComment=ApiOperationComment)?
		public Assignment getApiOperationCommentAssignment_0() { return cApiOperationCommentAssignment_0; }
		
		//ApiOperationComment
		public RuleCall getApiOperationCommentApiOperationCommentParserRuleCall_0_0() { return cApiOperationCommentApiOperationCommentParserRuleCall_0_0; }
		
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		public Group getGroup_1() { return cGroup_1; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_1_0() { return cProtocolsAssignment_1_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_1_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_1_0_0; }
		
		//(protocols+=ProtocolSpecification)?
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_1_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_1_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_2_1() { return cEndpointsKeyword_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_2() { return cLeftParenthesisKeyword_2_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_2_3() { return cEndpointsAssignment_2_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_2_3_0() { return cEndpointsEndpointParserRuleCall_2_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'@'
		public Keyword getCommercialAtKeyword_3_0() { return cCommercialAtKeyword_3_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_3_1() { return cEndpointsKeyword_3_1; }
		
		//'({'
		public Keyword getLeftParenthesisLeftCurlyBracketKeyword_3_2() { return cLeftParenthesisLeftCurlyBracketKeyword_3_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_3_3() { return cEndpointsAssignment_3_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_3_3_0() { return cEndpointsEndpointParserRuleCall_3_3_0; }
		
		//'})'
		public Keyword getRightCurlyBracketRightParenthesisKeyword_3_4() { return cRightCurlyBracketRightParenthesisKeyword_3_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_4() { return cAspectsAssignment_4; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_4_0() { return cAspectsImportedServiceAspectParserRuleCall_4_0; }
		
		//(notImplemented?='noimpl')?
		public Assignment getNotImplementedAssignment_5() { return cNotImplementedAssignment_5; }
		
		//'noimpl'
		public Keyword getNotImplementedNoimplKeyword_5_0() { return cNotImplementedNoimplKeyword_5_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_6() { return cVisibilityAssignment_6; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_6_0() { return cVisibilityVisibilityEnumRuleCall_6_0; }
		
		//name=ID
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_7_0() { return cNameIDTerminalRuleCall_7_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }
		
		//parameters+=Parameter?
		public Assignment getParametersAssignment_9() { return cParametersAssignment_9; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_9_0() { return cParametersParameterParserRuleCall_9_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_10() { return cGroup_10; }
		
		//','
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_10_1() { return cParametersAssignment_10_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_10_1_0() { return cParametersParameterParserRuleCall_10_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }
		
		//';'
		public Keyword getSemicolonKeyword_12() { return cSemicolonKeyword_12; }
	}
	public class ReferredOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ReferredOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_0_0 = (RuleCall)cProtocolsAssignment_0_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cProtocolsProtocolSpecificationParserRuleCall_0_1_0 = (RuleCall)cProtocolsAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommercialAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEndpointsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_1_3_0 = (RuleCall)cEndpointsAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEndpointsKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisLeftCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cEndpointsAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cEndpointsEndpointParserRuleCall_2_3_0 = (RuleCall)cEndpointsAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cAspectsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_3_0 = (RuleCall)cAspectsAssignment_3.eContents().get(0);
		private final Keyword cRefersKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cOperationOperationCrossReference_5_0 = (CrossReference)cOperationAssignment_5.eContents().get(0);
		private final RuleCall cOperationOperationQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cOperationOperationCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ReferredOperation returns ReferredOperation:
		//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//    aspects+=ImportedServiceAspect*
		//    'refers' operation=[Operation|QualifiedName] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		//aspects+=ImportedServiceAspect*
		//'refers' operation=[Operation|QualifiedName] ';'
		public Group getGroup() { return cGroup; }
		
		//(protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//protocols+=ProtocolSpecification
		public Assignment getProtocolsAssignment_0_0() { return cProtocolsAssignment_0_0; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_0_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_0_0; }
		
		//(protocols+=ProtocolSpecification)?
		public Assignment getProtocolsAssignment_0_1() { return cProtocolsAssignment_0_1; }
		
		//ProtocolSpecification
		public RuleCall getProtocolsProtocolSpecificationParserRuleCall_0_1_0() { return cProtocolsProtocolSpecificationParserRuleCall_0_1_0; }
		
		//('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1_0() { return cCommercialAtKeyword_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_1_1() { return cEndpointsKeyword_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_1_3() { return cEndpointsAssignment_1_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_1_3_0() { return cEndpointsEndpointParserRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_2_1() { return cEndpointsKeyword_2_1; }
		
		//'({'
		public Keyword getLeftParenthesisLeftCurlyBracketKeyword_2_2() { return cLeftParenthesisLeftCurlyBracketKeyword_2_2; }
		
		//endpoints+=Endpoint+
		public Assignment getEndpointsAssignment_2_3() { return cEndpointsAssignment_2_3; }
		
		//Endpoint
		public RuleCall getEndpointsEndpointParserRuleCall_2_3_0() { return cEndpointsEndpointParserRuleCall_2_3_0; }
		
		//'})'
		public Keyword getRightCurlyBracketRightParenthesisKeyword_2_4() { return cRightCurlyBracketRightParenthesisKeyword_2_4; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_3() { return cAspectsAssignment_3; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_3_0() { return cAspectsImportedServiceAspectParserRuleCall_3_0; }
		
		//'refers'
		public Keyword getRefersKeyword_4() { return cRefersKeyword_4; }
		
		//operation=[Operation|QualifiedName]
		public Assignment getOperationAssignment_5() { return cOperationAssignment_5; }
		
		//[Operation|QualifiedName]
		public CrossReference getOperationOperationCrossReference_5_0() { return cOperationOperationCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getOperationOperationQualifiedNameParserRuleCall_5_0_1() { return cOperationOperationQualifiedNameParserRuleCall_5_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAspectsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAspectsImportedServiceAspectParserRuleCall_0_0 = (RuleCall)cAspectsAssignment_0.eContents().get(0);
		private final Assignment cCommunicationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommunicationTypeCommunicationTypeEnumRuleCall_1_0 = (RuleCall)cCommunicationTypeAssignment_1.eContents().get(0);
		private final Assignment cExchangePatternAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExchangePatternExchangePatternEnumRuleCall_2_0 = (RuleCall)cExchangePatternAssignment_2.eContents().get(0);
		private final Assignment cCommunicatesFaultAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cCommunicatesFaultFaultKeyword_3_0 = (Keyword)cCommunicatesFaultAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cOptionalAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cOptionalQuestionMarkKeyword_5_0 = (Keyword)cOptionalAssignment_5.eContents().get(0);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cPrimitiveTypeAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0 = (RuleCall)cPrimitiveTypeAssignment_7_0.eContents().get(0);
		private final Assignment cImportedTypeAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cImportedTypeImportedTypeParserRuleCall_7_1_0 = (RuleCall)cImportedTypeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cInitializedByOperationAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0 = (RuleCall)cInitializedByOperationAssignment_8_1.eContents().get(0);
		
		//Parameter returns Parameter:
		//    aspects+=ImportedServiceAspect*
		//    communicationType=CommunicationType
		//    exchangePattern=ExchangePattern?
		//    (communicatesFault?='fault')?
		//    name=ID
		//    (optional?='?')?
		//    ':'
		//    (primitiveType=PrimitiveType | importedType=ImportedType)
		//    ('=' initializedByOperation=PossiblyImportedOperation)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//aspects+=ImportedServiceAspect*
		//communicationType=CommunicationType
		//exchangePattern=ExchangePattern?
		//(communicatesFault?='fault')?
		//name=ID
		//(optional?='?')?
		//':'
		//(primitiveType=PrimitiveType | importedType=ImportedType)
		//('=' initializedByOperation=PossiblyImportedOperation)?
		public Group getGroup() { return cGroup; }
		
		//aspects+=ImportedServiceAspect*
		public Assignment getAspectsAssignment_0() { return cAspectsAssignment_0; }
		
		//ImportedServiceAspect
		public RuleCall getAspectsImportedServiceAspectParserRuleCall_0_0() { return cAspectsImportedServiceAspectParserRuleCall_0_0; }
		
		//communicationType=CommunicationType
		public Assignment getCommunicationTypeAssignment_1() { return cCommunicationTypeAssignment_1; }
		
		//CommunicationType
		public RuleCall getCommunicationTypeCommunicationTypeEnumRuleCall_1_0() { return cCommunicationTypeCommunicationTypeEnumRuleCall_1_0; }
		
		//exchangePattern=ExchangePattern?
		public Assignment getExchangePatternAssignment_2() { return cExchangePatternAssignment_2; }
		
		//ExchangePattern
		public RuleCall getExchangePatternExchangePatternEnumRuleCall_2_0() { return cExchangePatternExchangePatternEnumRuleCall_2_0; }
		
		//(communicatesFault?='fault')?
		public Assignment getCommunicatesFaultAssignment_3() { return cCommunicatesFaultAssignment_3; }
		
		//'fault'
		public Keyword getCommunicatesFaultFaultKeyword_3_0() { return cCommunicatesFaultFaultKeyword_3_0; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//(optional?='?')?
		public Assignment getOptionalAssignment_5() { return cOptionalAssignment_5; }
		
		//'?'
		public Keyword getOptionalQuestionMarkKeyword_5_0() { return cOptionalQuestionMarkKeyword_5_0; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//(primitiveType=PrimitiveType | importedType=ImportedType)
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//primitiveType=PrimitiveType
		public Assignment getPrimitiveTypeAssignment_7_0() { return cPrimitiveTypeAssignment_7_0; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0() { return cPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0; }
		
		//importedType=ImportedType
		public Assignment getImportedTypeAssignment_7_1() { return cImportedTypeAssignment_7_1; }
		
		//ImportedType
		public RuleCall getImportedTypeImportedTypeParserRuleCall_7_1_0() { return cImportedTypeImportedTypeParserRuleCall_7_1_0; }
		
		//('=' initializedByOperation=PossiblyImportedOperation)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_0() { return cEqualsSignKeyword_8_0; }
		
		//initializedByOperation=PossiblyImportedOperation
		public Assignment getInitializedByOperationAssignment_8_1() { return cInitializedByOperationAssignment_8_1; }
		
		//PossiblyImportedOperation
		public RuleCall getInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0() { return cInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0; }
	}
	public class ImportedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ImportedType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		
		//ImportedType returns ImportedType:
		//    ^import=[Import] '::' type=[data::Type|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[Import] '::' type=[data::Type|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//type=[data::Type|QualifiedName]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[data::Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_2_0_1() { return cTypeTypeQualifiedNameParserRuleCall_2_0_1; }
	}
	public class ProtocolSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCommunicationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCommunicationTypeCommunicationTypeEnumRuleCall_1_0 = (RuleCall)cCommunicationTypeAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProtocolImportedProtocolAndDataFormatParserRuleCall_3_0 = (RuleCall)cProtocolAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProtocolSpecification returns ProtocolSpecification:
		//    '@' communicationType=CommunicationType '('
		//        protocol=ImportedProtocolAndDataFormat
		//    ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' communicationType=CommunicationType '('
		//    protocol=ImportedProtocolAndDataFormat
		//')'
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//communicationType=CommunicationType
		public Assignment getCommunicationTypeAssignment_1() { return cCommunicationTypeAssignment_1; }
		
		//CommunicationType
		public RuleCall getCommunicationTypeCommunicationTypeEnumRuleCall_1_0() { return cCommunicationTypeCommunicationTypeEnumRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//protocol=ImportedProtocolAndDataFormat
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }
		
		//ImportedProtocolAndDataFormat
		public RuleCall getProtocolImportedProtocolAndDataFormatParserRuleCall_3_0() { return cProtocolImportedProtocolAndDataFormatParserRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ImportedProtocolAndDataFormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ImportedProtocolAndDataFormat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedProtocolAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cImportedProtocolProtocolCrossReference_2_0 = (CrossReference)cImportedProtocolAssignment_2.eContents().get(0);
		private final RuleCall cImportedProtocolProtocolQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cImportedProtocolProtocolCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDataFormatAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cDataFormatDataFormatCrossReference_3_1_0 = (CrossReference)cDataFormatAssignment_3_1.eContents().get(0);
		private final RuleCall cDataFormatDataFormatSTRINGTerminalRuleCall_3_1_0_1 = (RuleCall)cDataFormatDataFormatCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ImportedProtocolAndDataFormat returns ImportedProtocolAndDataFormat:
		//    ^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName]
		//    ('(' dataFormat=[technology::DataFormat|STRING] ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName]
		//('(' dataFormat=[technology::DataFormat|STRING] ')')?
		public Group getGroup() { return cGroup; }
		
		//^import=[Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//importedProtocol=[technology::Protocol|QualifiedName]
		public Assignment getImportedProtocolAssignment_2() { return cImportedProtocolAssignment_2; }
		
		//[technology::Protocol|QualifiedName]
		public CrossReference getImportedProtocolProtocolCrossReference_2_0() { return cImportedProtocolProtocolCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getImportedProtocolProtocolQualifiedNameParserRuleCall_2_0_1() { return cImportedProtocolProtocolQualifiedNameParserRuleCall_2_0_1; }
		
		//('(' dataFormat=[technology::DataFormat|STRING] ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//dataFormat=[technology::DataFormat|STRING]
		public Assignment getDataFormatAssignment_3_1() { return cDataFormatAssignment_3_1; }
		
		//[technology::DataFormat|STRING]
		public CrossReference getDataFormatDataFormatCrossReference_3_1_0() { return cDataFormatDataFormatCrossReference_3_1_0; }
		
		//STRING
		public RuleCall getDataFormatDataFormatSTRINGTerminalRuleCall_3_1_0_1() { return cDataFormatDataFormatSTRINGTerminalRuleCall_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}
	public class EndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Endpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProtocolsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0 = (RuleCall)cProtocolsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAddressesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_3_0 = (RuleCall)cAddressesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAddressesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cAddressesAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Endpoint returns Endpoint:
		//    protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
		//    addresses+=STRING (',' addresses+=STRING)* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
		//addresses+=STRING (',' addresses+=STRING)* ';'
		public Group getGroup() { return cGroup; }
		
		//protocols+=ImportedProtocolAndDataFormat
		public Assignment getProtocolsAssignment_0() { return cProtocolsAssignment_0; }
		
		//ImportedProtocolAndDataFormat
		public RuleCall getProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0() { return cProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0; }
		
		//(',' protocols+=ImportedProtocolAndDataFormat)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//protocols+=ImportedProtocolAndDataFormat
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ImportedProtocolAndDataFormat
		public RuleCall getProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0() { return cProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_3() { return cAddressesAssignment_3; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_3_0() { return cAddressesSTRINGTerminalRuleCall_3_0; }
		
		//(',' addresses+=STRING)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_4_1() { return cAddressesAssignment_4_1; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_4_1_0() { return cAddressesSTRINGTerminalRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ImportedServiceAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ImportedServiceAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cImportImportCrossReference_1_0 = (CrossReference)cImportAssignment_1.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_1_0_1 = (RuleCall)cImportImportCrossReference_1_0.eContents().get(1);
		private final Keyword cColonColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportedAspectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cImportedAspectServiceAspectCrossReference_3_0 = (CrossReference)cImportedAspectAssignment_3.eContents().get(0);
		private final RuleCall cImportedAspectServiceAspectQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cImportedAspectServiceAspectCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cSinglePropertyValueAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0 = (RuleCall)cSinglePropertyValueAssignment_4_1_0.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cAlternatives_4_1.eContents().get(1);
		private final Assignment cValuesAssignment_4_1_1_0 = (Assignment)cGroup_4_1_1.eContents().get(0);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0 = (RuleCall)cValuesAssignment_4_1_1_0.eContents().get(0);
		private final Group cGroup_4_1_1_1 = (Group)cGroup_4_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_1_0 = (Keyword)cGroup_4_1_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_4_1_1_1_1 = (Assignment)cGroup_4_1_1_1.eContents().get(1);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0 = (RuleCall)cValuesAssignment_4_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ImportedServiceAspect returns ImportedServiceAspect:
		//    '@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName]
		//    ('('
		//        (singlePropertyValue=PrimitiveValue
		//            |
		//         (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//        )
		//    ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName]
		//('('
		//    (singlePropertyValue=PrimitiveValue
		//        |
		//     (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//    )
		//')')?
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//^import=[Import]
		public Assignment getImportAssignment_1() { return cImportAssignment_1; }
		
		//[Import]
		public CrossReference getImportImportCrossReference_1_0() { return cImportImportCrossReference_1_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_1_0_1() { return cImportImportIDTerminalRuleCall_1_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_2() { return cColonColonKeyword_2; }
		
		//importedAspect=[technology::ServiceAspect|QualifiedName]
		public Assignment getImportedAspectAssignment_3() { return cImportedAspectAssignment_3; }
		
		//[technology::ServiceAspect|QualifiedName]
		public CrossReference getImportedAspectServiceAspectCrossReference_3_0() { return cImportedAspectServiceAspectCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getImportedAspectServiceAspectQualifiedNameParserRuleCall_3_0_1() { return cImportedAspectServiceAspectQualifiedNameParserRuleCall_3_0_1; }
		
		//('('
		//    (singlePropertyValue=PrimitiveValue
		//        |
		//     (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//    )
		//')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }
		
		//(singlePropertyValue=PrimitiveValue
		//    |
		// (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//)
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//singlePropertyValue=PrimitiveValue
		public Assignment getSinglePropertyValueAssignment_4_1_0() { return cSinglePropertyValueAssignment_4_1_0; }
		
		//PrimitiveValue
		public RuleCall getSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0() { return cSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0; }
		
		//(values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_4_1_1_0() { return cValuesAssignment_4_1_1_0; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0() { return cValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0; }
		
		//(',' values+=PropertyValueAssignment)*
		public Group getGroup_4_1_1_1() { return cGroup_4_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_4_1_1_1_0() { return cCommaKeyword_4_1_1_1_0; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_4_1_1_1_1() { return cValuesAssignment_4_1_1_1_1; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0() { return cValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}
	public class PropertyValueAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.PropertyValueAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cPropertyAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cPropertyTechnologySpecificPropertyCrossReference_0_0_0 = (CrossReference)cPropertyAssignment_0_0.eContents().get(0);
		private final RuleCall cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_0_1 = (RuleCall)cPropertyTechnologySpecificPropertyCrossReference_0_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_0_2_0 = (RuleCall)cValueAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cPropertyAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cPropertyTechnologySpecificPropertyCrossReference_1_0_0 = (CrossReference)cPropertyAssignment_1_0.eContents().get(0);
		private final RuleCall cPropertyTechnologySpecificPropertyIDTerminalRuleCall_1_0_0_1 = (RuleCall)cPropertyTechnologySpecificPropertyCrossReference_1_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_1_2_0 = (RuleCall)cValueAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//PropertyValueAssignment returns technology::TechnologySpecificPropertyValueAssignment:
		//    (property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue) |
		//    (property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue) |
		//(property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue)
		public Group getGroup_0() { return cGroup_0; }
		
		//property=[technology::TechnologySpecificProperty]
		public Assignment getPropertyAssignment_0_0() { return cPropertyAssignment_0_0; }
		
		//[technology::TechnologySpecificProperty]
		public CrossReference getPropertyTechnologySpecificPropertyCrossReference_0_0_0() { return cPropertyTechnologySpecificPropertyCrossReference_0_0_0; }
		
		//ID
		public RuleCall getPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_0_1() { return cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_0_2() { return cValueAssignment_0_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_0_2_0() { return cValuePrimitiveValueParserRuleCall_0_2_0; }
		
		//(property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
		public Group getGroup_1() { return cGroup_1; }
		
		//property=[technology::TechnologySpecificProperty]
		public Assignment getPropertyAssignment_1_0() { return cPropertyAssignment_1_0; }
		
		//[technology::TechnologySpecificProperty]
		public CrossReference getPropertyTechnologySpecificPropertyCrossReference_1_0_0() { return cPropertyTechnologySpecificPropertyCrossReference_1_0_0; }
		
		//ID
		public RuleCall getPropertyTechnologySpecificPropertyIDTerminalRuleCall_1_0_0_1() { return cPropertyTechnologySpecificPropertyIDTerminalRuleCall_1_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_1_2() { return cValueAssignment_1_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_1_2_0() { return cValuePrimitiveValueParserRuleCall_1_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}
	public class QualifiedNameWithAtLeastOneLevelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.QualifiedNameWithAtLeastOneLevel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//QualifiedNameWithAtLeastOneLevel:
		//    ID '.' QualifiedName
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID '.' QualifiedName
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_2() { return cQualifiedNameParserRuleCall_2; }
	}
	public class AnythingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Anything");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cColonColonKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cFullStopKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cHyphenMinusKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cHyphenMinusHyphenMinusKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cSolidusKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cQuestionMarkKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cCommercialAtKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cEqualsSignKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cSemicolonKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cTechnologyKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cTypesKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cCompatibilityKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cMatrixKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cProtocolsKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cServiceKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cAspectsKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cDeploymentKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cTechnologiesKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cInfrastructureKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cOperationKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cImportKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cFromKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cAsKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cDataKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cFormatsKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cDefaultKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cWithKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cFormatKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cInKeyword_36 = (Keyword)cAlternatives.eContents().get(36);
		private final Keyword cOutKeyword_37 = (Keyword)cAlternatives.eContents().get(37);
		private final Keyword cInoutKeyword_38 = (Keyword)cAlternatives.eContents().get(38);
		private final Keyword cSyncKeyword_39 = (Keyword)cAlternatives.eContents().get(39);
		private final Keyword cAsyncKeyword_40 = (Keyword)cAlternatives.eContents().get(40);
		private final Keyword cPrimitiveKeyword_41 = (Keyword)cAlternatives.eContents().get(41);
		private final Keyword cTypeKeyword_42 = (Keyword)cAlternatives.eContents().get(42);
		private final Keyword cBasedKeyword_43 = (Keyword)cAlternatives.eContents().get(43);
		private final Keyword cOnKeyword_44 = (Keyword)cAlternatives.eContents().get(44);
		private final Keyword cCollectionKeyword_45 = (Keyword)cAlternatives.eContents().get(45);
		private final Keyword cStructureKeyword_46 = (Keyword)cAlternatives.eContents().get(46);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_47 = (Keyword)cAlternatives.eContents().get(47);
		private final Keyword cLessThanSignHyphenMinusKeyword_48 = (Keyword)cAlternatives.eContents().get(48);
		private final Keyword cLessThanSignHyphenMinusGreaterThanSignKeyword_49 = (Keyword)cAlternatives.eContents().get(49);
		private final Keyword cEnvironmentsKeyword_50 = (Keyword)cAlternatives.eContents().get(50);
		private final Keyword cPropertiesKeyword_51 = (Keyword)cAlternatives.eContents().get(51);
		private final Keyword cMandatoryKeyword_52 = (Keyword)cAlternatives.eContents().get(52);
		private final Keyword cSinglevalKeyword_53 = (Keyword)cAlternatives.eContents().get(53);
		private final Keyword cMicroservicesKeyword_54 = (Keyword)cAlternatives.eContents().get(54);
		private final Keyword cInterfacesKeyword_55 = (Keyword)cAlternatives.eContents().get(55);
		private final Keyword cOperationsKeyword_56 = (Keyword)cAlternatives.eContents().get(56);
		private final Keyword cParametersKeyword_57 = (Keyword)cAlternatives.eContents().get(57);
		private final Keyword cFieldsKeyword_58 = (Keyword)cAlternatives.eContents().get(58);
		private final Keyword cExchange_patternKeyword_59 = (Keyword)cAlternatives.eContents().get(59);
		private final Keyword cCommunication_typeKeyword_60 = (Keyword)cAlternatives.eContents().get(60);
		private final Keyword cProtocolKeyword_61 = (Keyword)cAlternatives.eContents().get(61);
		private final Keyword cData_formatKeyword_62 = (Keyword)cAlternatives.eContents().get(62);
		private final Keyword cAspectKeyword_63 = (Keyword)cAlternatives.eContents().get(63);
		private final Keyword cForKeyword_64 = (Keyword)cAlternatives.eContents().get(64);
		private final Keyword cContainersKeyword_65 = (Keyword)cAlternatives.eContents().get(65);
		private final Group cGroup_66 = (Group)cAlternatives.eContents().get(66);
		private final Keyword cSelectorKeyword_66_0 = (Keyword)cGroup_66.eContents().get(0);
		private final Keyword cDatatypesKeyword_66_1 = (Keyword)cGroup_66.eContents().get(1);
		private final Keyword cVersionKeyword_67 = (Keyword)cAlternatives.eContents().get(67);
		private final Keyword cContextKeyword_68 = (Keyword)cAlternatives.eContents().get(68);
		private final Keyword cAggregateKeyword_69 = (Keyword)cAlternatives.eContents().get(69);
		private final Keyword cApplicationServiceKeyword_70 = (Keyword)cAlternatives.eContents().get(70);
		private final Keyword cDomainEventKeyword_71 = (Keyword)cAlternatives.eContents().get(71);
		private final Keyword cDomainServiceKeyword_72 = (Keyword)cAlternatives.eContents().get(72);
		private final Keyword cEntityKeyword_73 = (Keyword)cAlternatives.eContents().get(73);
		private final Keyword cFactoryKeyword_74 = (Keyword)cAlternatives.eContents().get(74);
		private final Keyword cInfrastructureServiceKeyword_75 = (Keyword)cAlternatives.eContents().get(75);
		private final Keyword cRepositoryKeyword_76 = (Keyword)cAlternatives.eContents().get(76);
		private final Keyword cSpecificationKeyword_77 = (Keyword)cAlternatives.eContents().get(77);
		private final Keyword cValueObjectKeyword_78 = (Keyword)cAlternatives.eContents().get(78);
		private final Keyword cExtendsKeyword_79 = (Keyword)cAlternatives.eContents().get(79);
		private final Keyword cIdentifierKeyword_80 = (Keyword)cAlternatives.eContents().get(80);
		private final Keyword cNeverEmptyKeyword_81 = (Keyword)cAlternatives.eContents().get(81);
		private final Keyword cPartKeyword_82 = (Keyword)cAlternatives.eContents().get(82);
		private final Keyword cHideKeyword_83 = (Keyword)cAlternatives.eContents().get(83);
		private final Keyword cImmutableKeyword_84 = (Keyword)cAlternatives.eContents().get(84);
		private final Keyword cEnumKeyword_85 = (Keyword)cAlternatives.eContents().get(85);
		private final Keyword cClosureKeyword_86 = (Keyword)cAlternatives.eContents().get(86);
		private final Keyword cSideEffectFreeKeyword_87 = (Keyword)cAlternatives.eContents().get(87);
		private final Keyword cValidatorKeyword_88 = (Keyword)cAlternatives.eContents().get(88);
		private final Keyword cFunctionKeyword_89 = (Keyword)cAlternatives.eContents().get(89);
		private final Keyword cProcedureKeyword_90 = (Keyword)cAlternatives.eContents().get(90);
		private final Keyword cBooleanKeyword_91 = (Keyword)cAlternatives.eContents().get(91);
		private final Keyword cByteKeyword_92 = (Keyword)cAlternatives.eContents().get(92);
		private final Keyword cCharKeyword_93 = (Keyword)cAlternatives.eContents().get(93);
		private final Keyword cDateKeyword_94 = (Keyword)cAlternatives.eContents().get(94);
		private final Keyword cDoubleKeyword_95 = (Keyword)cAlternatives.eContents().get(95);
		private final Keyword cFloatKeyword_96 = (Keyword)cAlternatives.eContents().get(96);
		private final Keyword cIntKeyword_97 = (Keyword)cAlternatives.eContents().get(97);
		private final Keyword cLongKeyword_98 = (Keyword)cAlternatives.eContents().get(98);
		private final Keyword cShortKeyword_99 = (Keyword)cAlternatives.eContents().get(99);
		private final Keyword cStringKeyword_100 = (Keyword)cAlternatives.eContents().get(100);
		private final Keyword cInternalKeyword_101 = (Keyword)cAlternatives.eContents().get(101);
		private final Keyword cArchitectureKeyword_102 = (Keyword)cAlternatives.eContents().get(102);
		private final Keyword cPublicKeyword_103 = (Keyword)cAlternatives.eContents().get(103);
		private final Keyword cEndpointsKeyword_104 = (Keyword)cAlternatives.eContents().get(104);
		private final Keyword cMicroserviceKeyword_105 = (Keyword)cAlternatives.eContents().get(105);
		private final Keyword cRequiredKeyword_106 = (Keyword)cAlternatives.eContents().get(106);
		private final Keyword cRequiresKeyword_107 = (Keyword)cAlternatives.eContents().get(107);
		private final Keyword cReturnedKeyword_108 = (Keyword)cAlternatives.eContents().get(108);
		private final Keyword cReturnsKeyword_109 = (Keyword)cAlternatives.eContents().get(109);
		private final Keyword cTypedefKeyword_110 = (Keyword)cAlternatives.eContents().get(110);
		private final Keyword cNoimplKeyword_111 = (Keyword)cAlternatives.eContents().get(111);
		private final Keyword cInterfaceKeyword_112 = (Keyword)cAlternatives.eContents().get(112);
		private final Keyword cParamKeyword_113 = (Keyword)cAlternatives.eContents().get(113);
		private final Keyword cRefersKeyword_114 = (Keyword)cAlternatives.eContents().get(114);
		private final Keyword cFaultKeyword_115 = (Keyword)cAlternatives.eContents().get(115);
		private final Keyword cFunctionalKeyword_116 = (Keyword)cAlternatives.eContents().get(116);
		private final Keyword cUtilityKeyword_117 = (Keyword)cAlternatives.eContents().get(117);
		private final RuleCall cBOOLEANTerminalRuleCall_118 = (RuleCall)cAlternatives.eContents().get(118);
		private final RuleCall cNUMBER_WITH_TRAILING_PERIODTerminalRuleCall_119 = (RuleCall)cAlternatives.eContents().get(119);
		private final RuleCall cBIG_DECIMALTerminalRuleCall_120 = (RuleCall)cAlternatives.eContents().get(120);
		private final RuleCall cIDTerminalRuleCall_121 = (RuleCall)cAlternatives.eContents().get(121);
		private final RuleCall cSTRINGTerminalRuleCall_122 = (RuleCall)cAlternatives.eContents().get(122);
		private final RuleCall cANY_OTHERTerminalRuleCall_123 = (RuleCall)cAlternatives.eContents().get(123);
		
		//// Rule to consume any character
		//Anything:
		//    (
		//        // All keyword characters of the Service, Technology, and Data DSLs (the Service DSL
		//        // inherits from the latter ones). If we don't specify them here, they will be recognized as
		//        // regular grammar tokens in the Anything string.
		//        '{' | '}' | '<' | '>' | ',' | '(' | ')' | '::' | '.' | '-' | '--' | '/' | '?' | ':' | '@' |
		//        '=' | ';' |
		//        // All keywords of the Technology DSL (from which the Service DSL inherits). If we don't
		//        // specify them here, they will be recognized as regular grammar tokens in the Anything
		//        // string.
		//        'technology' | 'types' | 'compatibility' | 'matrix' | 'protocols' | 'service' | 'aspects' |
		//        'deployment' | 'technologies' | 'infrastructure' | 'operation' | 'import' | 'from' | 'as' |
		//        'data' | 'formats' | 'default' | 'with' | 'format' | 'in' | 'out' | 'inout' | 'sync' |
		//        'async' | 'primitive' | 'type' | 'based' | 'on' | 'collection' | 'structure'| '->' | '<-' |
		//        '<->' | 'environments' | 'properties' | 'mandatory' | 'singleval' | 'microservices' |
		//        'interfaces' | 'operations' | 'parameters' | 'fields' | 'exchange_pattern' |
		//        'communication_type' | 'protocol' | 'data_format' | 'aspect' | 'for' | 'containers' |
		//        'selector'
		//        // All keywords of the Data DSL (from which the Service DSL inherits). If we don't specify
		//        // them here, they will be recognized as regular grammar tokens in the Anything string.
		//        'datatypes' |  'version' | 'context' | 'aggregate'  | 'applicationService' | 'domainEvent' |
		//        'domainService' | 'entity' | 'factory' | 'infrastructureService' | 'repository' |
		//        'specification' | 'valueObject' | 'extends' | 'identifier' | 'neverEmpty' | 'part' |
		//        'hide' | 'immutable' | 'enum' | 'closure' | 'sideEffectFree' | 'validator' | 'function' |
		//        'procedure' | 'boolean' | 'byte' | 'char' | 'date' | 'double' | 'float' | 'int' | 'long' |
		//        'short' | 'string' |
		//        // All keywords of the Service DSL. If we don't specify them here, they will be recognized
		//        // as regular grammar tokens in the Anything string.
		//        'internal' | 'architecture' | 'public' | 'endpoints' | 'microservice' | 'required' |
		//        'requires' | 'returned' | 'returns' | 'typedef' | 'noimpl' | 'interface' | 'param' |
		//        'refers' | 'fault' | 'functional' | 'utility' |
		//        // All other terminal rules of the Service and the Data DSL (from which the Service DSL
		//        // inherits). If we don't specify them here, they will be recognized as regular grammar
		//        // tokens in the Anything string.
		//        BOOLEAN | NUMBER_WITH_TRAILING_PERIOD | BIG_DECIMAL | ID | STRING | ANY_OTHER
		//    )+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(
		//    // All keyword characters of the Service, Technology, and Data DSLs (the Service DSL
		//    // inherits from the latter ones). If we don't specify them here, they will be recognized as
		//    // regular grammar tokens in the Anything string.
		//    '{' | '}' | '<' | '>' | ',' | '(' | ')' | '::' | '.' | '-' | '--' | '/' | '?' | ':' | '@' |
		//    '=' | ';' |
		//    // All keywords of the Technology DSL (from which the Service DSL inherits). If we don't
		//    // specify them here, they will be recognized as regular grammar tokens in the Anything
		//    // string.
		//    'technology' | 'types' | 'compatibility' | 'matrix' | 'protocols' | 'service' | 'aspects' |
		//    'deployment' | 'technologies' | 'infrastructure' | 'operation' | 'import' | 'from' | 'as' |
		//    'data' | 'formats' | 'default' | 'with' | 'format' | 'in' | 'out' | 'inout' | 'sync' |
		//    'async' | 'primitive' | 'type' | 'based' | 'on' | 'collection' | 'structure'| '->' | '<-' |
		//    '<->' | 'environments' | 'properties' | 'mandatory' | 'singleval' | 'microservices' |
		//    'interfaces' | 'operations' | 'parameters' | 'fields' | 'exchange_pattern' |
		//    'communication_type' | 'protocol' | 'data_format' | 'aspect' | 'for' | 'containers' |
		//    'selector'
		//    // All keywords of the Data DSL (from which the Service DSL inherits). If we don't specify
		//    // them here, they will be recognized as regular grammar tokens in the Anything string.
		//    'datatypes' |  'version' | 'context' | 'aggregate'  | 'applicationService' | 'domainEvent' |
		//    'domainService' | 'entity' | 'factory' | 'infrastructureService' | 'repository' |
		//    'specification' | 'valueObject' | 'extends' | 'identifier' | 'neverEmpty' | 'part' |
		//    'hide' | 'immutable' | 'enum' | 'closure' | 'sideEffectFree' | 'validator' | 'function' |
		//    'procedure' | 'boolean' | 'byte' | 'char' | 'date' | 'double' | 'float' | 'int' | 'long' |
		//    'short' | 'string' |
		//    // All keywords of the Service DSL. If we don't specify them here, they will be recognized
		//    // as regular grammar tokens in the Anything string.
		//    'internal' | 'architecture' | 'public' | 'endpoints' | 'microservice' | 'required' |
		//    'requires' | 'returned' | 'returns' | 'typedef' | 'noimpl' | 'interface' | 'param' |
		//    'refers' | 'fault' | 'functional' | 'utility' |
		//    // All other terminal rules of the Service and the Data DSL (from which the Service DSL
		//    // inherits). If we don't specify them here, they will be recognized as regular grammar
		//    // tokens in the Anything string.
		//    BOOLEAN | NUMBER_WITH_TRAILING_PERIOD | BIG_DECIMAL | ID | STRING | ANY_OTHER
		//)+
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//// All keyword characters of the Service, Technology, and Data DSLs (the Service DSL
		//// inherits from the latter ones). If we don't specify them here, they will be recognized as
		//// regular grammar tokens in the Anything string.
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1() { return cRightCurlyBracketKeyword_1; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'::'
		public Keyword getColonColonKeyword_7() { return cColonColonKeyword_7; }
		
		//'.'
		public Keyword getFullStopKeyword_8() { return cFullStopKeyword_8; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_9() { return cHyphenMinusKeyword_9; }
		
		//'--'
		public Keyword getHyphenMinusHyphenMinusKeyword_10() { return cHyphenMinusHyphenMinusKeyword_10; }
		
		//'/'
		public Keyword getSolidusKeyword_11() { return cSolidusKeyword_11; }
		
		//'?'
		public Keyword getQuestionMarkKeyword_12() { return cQuestionMarkKeyword_12; }
		
		//':'
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }
		
		//'@'
		public Keyword getCommercialAtKeyword_14() { return cCommercialAtKeyword_14; }
		
		//'='
		public Keyword getEqualsSignKeyword_15() { return cEqualsSignKeyword_15; }
		
		//';'
		public Keyword getSemicolonKeyword_16() { return cSemicolonKeyword_16; }
		
		//// All keywords of the Technology DSL (from which the Service DSL inherits). If we don't
		//// specify them here, they will be recognized as regular grammar tokens in the Anything
		//// string.
		//'technology'
		public Keyword getTechnologyKeyword_17() { return cTechnologyKeyword_17; }
		
		//'types'
		public Keyword getTypesKeyword_18() { return cTypesKeyword_18; }
		
		//'compatibility'
		public Keyword getCompatibilityKeyword_19() { return cCompatibilityKeyword_19; }
		
		//'matrix'
		public Keyword getMatrixKeyword_20() { return cMatrixKeyword_20; }
		
		//'protocols'
		public Keyword getProtocolsKeyword_21() { return cProtocolsKeyword_21; }
		
		//'service'
		public Keyword getServiceKeyword_22() { return cServiceKeyword_22; }
		
		//'aspects'
		public Keyword getAspectsKeyword_23() { return cAspectsKeyword_23; }
		
		//'deployment'
		public Keyword getDeploymentKeyword_24() { return cDeploymentKeyword_24; }
		
		//'technologies'
		public Keyword getTechnologiesKeyword_25() { return cTechnologiesKeyword_25; }
		
		//'infrastructure'
		public Keyword getInfrastructureKeyword_26() { return cInfrastructureKeyword_26; }
		
		//'operation'
		public Keyword getOperationKeyword_27() { return cOperationKeyword_27; }
		
		//'import'
		public Keyword getImportKeyword_28() { return cImportKeyword_28; }
		
		//'from'
		public Keyword getFromKeyword_29() { return cFromKeyword_29; }
		
		//'as'
		public Keyword getAsKeyword_30() { return cAsKeyword_30; }
		
		//'data'
		public Keyword getDataKeyword_31() { return cDataKeyword_31; }
		
		//'formats'
		public Keyword getFormatsKeyword_32() { return cFormatsKeyword_32; }
		
		//'default'
		public Keyword getDefaultKeyword_33() { return cDefaultKeyword_33; }
		
		//'with'
		public Keyword getWithKeyword_34() { return cWithKeyword_34; }
		
		//'format'
		public Keyword getFormatKeyword_35() { return cFormatKeyword_35; }
		
		//'in'
		public Keyword getInKeyword_36() { return cInKeyword_36; }
		
		//'out'
		public Keyword getOutKeyword_37() { return cOutKeyword_37; }
		
		//'inout'
		public Keyword getInoutKeyword_38() { return cInoutKeyword_38; }
		
		//'sync'
		public Keyword getSyncKeyword_39() { return cSyncKeyword_39; }
		
		//'async'
		public Keyword getAsyncKeyword_40() { return cAsyncKeyword_40; }
		
		//'primitive'
		public Keyword getPrimitiveKeyword_41() { return cPrimitiveKeyword_41; }
		
		//'type'
		public Keyword getTypeKeyword_42() { return cTypeKeyword_42; }
		
		//'based'
		public Keyword getBasedKeyword_43() { return cBasedKeyword_43; }
		
		//'on'
		public Keyword getOnKeyword_44() { return cOnKeyword_44; }
		
		//'collection'
		public Keyword getCollectionKeyword_45() { return cCollectionKeyword_45; }
		
		//'structure'
		public Keyword getStructureKeyword_46() { return cStructureKeyword_46; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_47() { return cHyphenMinusGreaterThanSignKeyword_47; }
		
		//'<-'
		public Keyword getLessThanSignHyphenMinusKeyword_48() { return cLessThanSignHyphenMinusKeyword_48; }
		
		//'<->'
		public Keyword getLessThanSignHyphenMinusGreaterThanSignKeyword_49() { return cLessThanSignHyphenMinusGreaterThanSignKeyword_49; }
		
		//'environments'
		public Keyword getEnvironmentsKeyword_50() { return cEnvironmentsKeyword_50; }
		
		//'properties'
		public Keyword getPropertiesKeyword_51() { return cPropertiesKeyword_51; }
		
		//'mandatory'
		public Keyword getMandatoryKeyword_52() { return cMandatoryKeyword_52; }
		
		//'singleval'
		public Keyword getSinglevalKeyword_53() { return cSinglevalKeyword_53; }
		
		//'microservices'
		public Keyword getMicroservicesKeyword_54() { return cMicroservicesKeyword_54; }
		
		//'interfaces'
		public Keyword getInterfacesKeyword_55() { return cInterfacesKeyword_55; }
		
		//'operations'
		public Keyword getOperationsKeyword_56() { return cOperationsKeyword_56; }
		
		//'parameters'
		public Keyword getParametersKeyword_57() { return cParametersKeyword_57; }
		
		//'fields'
		public Keyword getFieldsKeyword_58() { return cFieldsKeyword_58; }
		
		//'exchange_pattern'
		public Keyword getExchange_patternKeyword_59() { return cExchange_patternKeyword_59; }
		
		//'communication_type'
		public Keyword getCommunication_typeKeyword_60() { return cCommunication_typeKeyword_60; }
		
		//'protocol'
		public Keyword getProtocolKeyword_61() { return cProtocolKeyword_61; }
		
		//'data_format'
		public Keyword getData_formatKeyword_62() { return cData_formatKeyword_62; }
		
		//'aspect'
		public Keyword getAspectKeyword_63() { return cAspectKeyword_63; }
		
		//'for'
		public Keyword getForKeyword_64() { return cForKeyword_64; }
		
		//'containers'
		public Keyword getContainersKeyword_65() { return cContainersKeyword_65; }
		
		//'selector'
		//// All keywords of the Data DSL (from which the Service DSL inherits). If we don't specify
		//// them here, they will be recognized as regular grammar tokens in the Anything string.
		//'datatypes'
		public Group getGroup_66() { return cGroup_66; }
		
		//'selector'
		public Keyword getSelectorKeyword_66_0() { return cSelectorKeyword_66_0; }
		
		//// All keywords of the Data DSL (from which the Service DSL inherits). If we don't specify
		//// them here, they will be recognized as regular grammar tokens in the Anything string.
		//'datatypes'
		public Keyword getDatatypesKeyword_66_1() { return cDatatypesKeyword_66_1; }
		
		//'version'
		public Keyword getVersionKeyword_67() { return cVersionKeyword_67; }
		
		//'context'
		public Keyword getContextKeyword_68() { return cContextKeyword_68; }
		
		//'aggregate'
		public Keyword getAggregateKeyword_69() { return cAggregateKeyword_69; }
		
		//'applicationService'
		public Keyword getApplicationServiceKeyword_70() { return cApplicationServiceKeyword_70; }
		
		//'domainEvent'
		public Keyword getDomainEventKeyword_71() { return cDomainEventKeyword_71; }
		
		//'domainService'
		public Keyword getDomainServiceKeyword_72() { return cDomainServiceKeyword_72; }
		
		//'entity'
		public Keyword getEntityKeyword_73() { return cEntityKeyword_73; }
		
		//'factory'
		public Keyword getFactoryKeyword_74() { return cFactoryKeyword_74; }
		
		//'infrastructureService'
		public Keyword getInfrastructureServiceKeyword_75() { return cInfrastructureServiceKeyword_75; }
		
		//'repository'
		public Keyword getRepositoryKeyword_76() { return cRepositoryKeyword_76; }
		
		//'specification'
		public Keyword getSpecificationKeyword_77() { return cSpecificationKeyword_77; }
		
		//'valueObject'
		public Keyword getValueObjectKeyword_78() { return cValueObjectKeyword_78; }
		
		//'extends'
		public Keyword getExtendsKeyword_79() { return cExtendsKeyword_79; }
		
		//'identifier'
		public Keyword getIdentifierKeyword_80() { return cIdentifierKeyword_80; }
		
		//'neverEmpty'
		public Keyword getNeverEmptyKeyword_81() { return cNeverEmptyKeyword_81; }
		
		//'part'
		public Keyword getPartKeyword_82() { return cPartKeyword_82; }
		
		//'hide'
		public Keyword getHideKeyword_83() { return cHideKeyword_83; }
		
		//'immutable'
		public Keyword getImmutableKeyword_84() { return cImmutableKeyword_84; }
		
		//'enum'
		public Keyword getEnumKeyword_85() { return cEnumKeyword_85; }
		
		//'closure'
		public Keyword getClosureKeyword_86() { return cClosureKeyword_86; }
		
		//'sideEffectFree'
		public Keyword getSideEffectFreeKeyword_87() { return cSideEffectFreeKeyword_87; }
		
		//'validator'
		public Keyword getValidatorKeyword_88() { return cValidatorKeyword_88; }
		
		//'function'
		public Keyword getFunctionKeyword_89() { return cFunctionKeyword_89; }
		
		//'procedure'
		public Keyword getProcedureKeyword_90() { return cProcedureKeyword_90; }
		
		//'boolean'
		public Keyword getBooleanKeyword_91() { return cBooleanKeyword_91; }
		
		//'byte'
		public Keyword getByteKeyword_92() { return cByteKeyword_92; }
		
		//'char'
		public Keyword getCharKeyword_93() { return cCharKeyword_93; }
		
		//'date'
		public Keyword getDateKeyword_94() { return cDateKeyword_94; }
		
		//'double'
		public Keyword getDoubleKeyword_95() { return cDoubleKeyword_95; }
		
		//'float'
		public Keyword getFloatKeyword_96() { return cFloatKeyword_96; }
		
		//'int'
		public Keyword getIntKeyword_97() { return cIntKeyword_97; }
		
		//'long'
		public Keyword getLongKeyword_98() { return cLongKeyword_98; }
		
		//'short'
		public Keyword getShortKeyword_99() { return cShortKeyword_99; }
		
		//'string'
		public Keyword getStringKeyword_100() { return cStringKeyword_100; }
		
		//// All keywords of the Service DSL. If we don't specify them here, they will be recognized
		//// as regular grammar tokens in the Anything string.
		//'internal'
		public Keyword getInternalKeyword_101() { return cInternalKeyword_101; }
		
		//'architecture'
		public Keyword getArchitectureKeyword_102() { return cArchitectureKeyword_102; }
		
		//'public'
		public Keyword getPublicKeyword_103() { return cPublicKeyword_103; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_104() { return cEndpointsKeyword_104; }
		
		//'microservice'
		public Keyword getMicroserviceKeyword_105() { return cMicroserviceKeyword_105; }
		
		//'required'
		public Keyword getRequiredKeyword_106() { return cRequiredKeyword_106; }
		
		//'requires'
		public Keyword getRequiresKeyword_107() { return cRequiresKeyword_107; }
		
		//'returned'
		public Keyword getReturnedKeyword_108() { return cReturnedKeyword_108; }
		
		//'returns'
		public Keyword getReturnsKeyword_109() { return cReturnsKeyword_109; }
		
		//'typedef'
		public Keyword getTypedefKeyword_110() { return cTypedefKeyword_110; }
		
		//'noimpl'
		public Keyword getNoimplKeyword_111() { return cNoimplKeyword_111; }
		
		//'interface'
		public Keyword getInterfaceKeyword_112() { return cInterfaceKeyword_112; }
		
		//'param'
		public Keyword getParamKeyword_113() { return cParamKeyword_113; }
		
		//'refers'
		public Keyword getRefersKeyword_114() { return cRefersKeyword_114; }
		
		//'fault'
		public Keyword getFaultKeyword_115() { return cFaultKeyword_115; }
		
		//'functional'
		public Keyword getFunctionalKeyword_116() { return cFunctionalKeyword_116; }
		
		//'utility'
		public Keyword getUtilityKeyword_117() { return cUtilityKeyword_117; }
		
		//// All other terminal rules of the Service and the Data DSL (from which the Service DSL
		//// inherits). If we don't specify them here, they will be recognized as regular grammar
		//// tokens in the Anything string.
		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_118() { return cBOOLEANTerminalRuleCall_118; }
		
		//NUMBER_WITH_TRAILING_PERIOD
		public RuleCall getNUMBER_WITH_TRAILING_PERIODTerminalRuleCall_119() { return cNUMBER_WITH_TRAILING_PERIODTerminalRuleCall_119; }
		
		//BIG_DECIMAL
		public RuleCall getBIG_DECIMALTerminalRuleCall_120() { return cBIG_DECIMALTerminalRuleCall_120; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_121() { return cIDTerminalRuleCall_121; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_122() { return cSTRINGTerminalRuleCall_122; }
		
		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_123() { return cANY_OTHERTerminalRuleCall_123; }
	}
	
	public class ImportTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.ImportType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDATATYPESEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDATATYPESDatatypesKeyword_0_0 = (Keyword)cDATATYPESEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTECHNOLOGYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTECHNOLOGYTechnologyKeyword_1_0 = (Keyword)cTECHNOLOGYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMICROSERVICESEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMICROSERVICESMicroservicesKeyword_2_0 = (Keyword)cMICROSERVICESEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ImportType returns ImportType:
		//    DATATYPES='datatypes' | TECHNOLOGY='technology' | MICROSERVICES='microservices'
		//;
		public EnumRule getRule() { return rule; }
		
		//DATATYPES='datatypes' | TECHNOLOGY='technology' | MICROSERVICES='microservices'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DATATYPES='datatypes'
		public EnumLiteralDeclaration getDATATYPESEnumLiteralDeclaration_0() { return cDATATYPESEnumLiteralDeclaration_0; }
		
		//'datatypes'
		public Keyword getDATATYPESDatatypesKeyword_0_0() { return cDATATYPESDatatypesKeyword_0_0; }
		
		//TECHNOLOGY='technology'
		public EnumLiteralDeclaration getTECHNOLOGYEnumLiteralDeclaration_1() { return cTECHNOLOGYEnumLiteralDeclaration_1; }
		
		//'technology'
		public Keyword getTECHNOLOGYTechnologyKeyword_1_0() { return cTECHNOLOGYTechnologyKeyword_1_0; }
		
		//MICROSERVICES='microservices'
		public EnumLiteralDeclaration getMICROSERVICESEnumLiteralDeclaration_2() { return cMICROSERVICESEnumLiteralDeclaration_2; }
		
		//'microservices'
		public Keyword getMICROSERVICESMicroservicesKeyword_2_0() { return cMICROSERVICESMicroservicesKeyword_2_0; }
	}
	public class VisibilityElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINTERNALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINTERNALInternalKeyword_0_0 = (Keyword)cINTERNALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cARCHITECTUREEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cARCHITECTUREArchitectureKeyword_1_0 = (Keyword)cARCHITECTUREEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPUBLICEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPUBLICPublicKeyword_2_0 = (Keyword)cPUBLICEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Visibility returns Visibility:
		//    INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public'
		//;
		public EnumRule getRule() { return rule; }
		
		//INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INTERNAL='internal'
		public EnumLiteralDeclaration getINTERNALEnumLiteralDeclaration_0() { return cINTERNALEnumLiteralDeclaration_0; }
		
		//'internal'
		public Keyword getINTERNALInternalKeyword_0_0() { return cINTERNALInternalKeyword_0_0; }
		
		//ARCHITECTURE='architecture'
		public EnumLiteralDeclaration getARCHITECTUREEnumLiteralDeclaration_1() { return cARCHITECTUREEnumLiteralDeclaration_1; }
		
		//'architecture'
		public Keyword getARCHITECTUREArchitectureKeyword_1_0() { return cARCHITECTUREArchitectureKeyword_1_0; }
		
		//PUBLIC='public'
		public EnumLiteralDeclaration getPUBLICEnumLiteralDeclaration_2() { return cPUBLICEnumLiteralDeclaration_2; }
		
		//'public'
		public Keyword getPUBLICPublicKeyword_2_0() { return cPUBLICPublicKeyword_2_0; }
	}
	public class MicroserviceTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.MicroserviceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFUNCTIONALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFUNCTIONALFunctionalKeyword_0_0 = (Keyword)cFUNCTIONALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUTILITYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUTILITYUtilityKeyword_1_0 = (Keyword)cUTILITYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINFRASTRUCTUREEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINFRASTRUCTUREInfrastructureKeyword_2_0 = (Keyword)cINFRASTRUCTUREEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum MicroserviceType returns MicroserviceType:
		//    FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE = 'infrastructure'
		//;
		public EnumRule getRule() { return rule; }
		
		//FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE = 'infrastructure'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FUNCTIONAL='functional'
		public EnumLiteralDeclaration getFUNCTIONALEnumLiteralDeclaration_0() { return cFUNCTIONALEnumLiteralDeclaration_0; }
		
		//'functional'
		public Keyword getFUNCTIONALFunctionalKeyword_0_0() { return cFUNCTIONALFunctionalKeyword_0_0; }
		
		//UTILITY='utility'
		public EnumLiteralDeclaration getUTILITYEnumLiteralDeclaration_1() { return cUTILITYEnumLiteralDeclaration_1; }
		
		//'utility'
		public Keyword getUTILITYUtilityKeyword_1_0() { return cUTILITYUtilityKeyword_1_0; }
		
		//INFRASTRUCTURE = 'infrastructure'
		public EnumLiteralDeclaration getINFRASTRUCTUREEnumLiteralDeclaration_2() { return cINFRASTRUCTUREEnumLiteralDeclaration_2; }
		
		//'infrastructure'
		public Keyword getINFRASTRUCTUREInfrastructureKeyword_2_0() { return cINFRASTRUCTUREInfrastructureKeyword_2_0; }
	}
	
	private final ServiceModelElements pServiceModel;
	private final ImportElements pImport;
	private final ImportTypeElements eImportType;
	private final VisibilityElements eVisibility;
	private final MicroserviceElements pMicroservice;
	private final TechnologyReferenceElements pTechnologyReference;
	private final PossiblyImportedMicroserviceElements pPossiblyImportedMicroservice;
	private final PossiblyImportedInterfaceElements pPossiblyImportedInterface;
	private final PossiblyImportedOperationElements pPossiblyImportedOperation;
	private final InterfaceElements pInterface;
	private final ApiOperationCommentElements pApiOperationComment;
	private final ApiParameterCommentElements pApiParameterComment;
	private final OperationElements pOperation;
	private final ReferredOperationElements pReferredOperation;
	private final ParameterElements pParameter;
	private final ImportedTypeElements pImportedType;
	private final ProtocolSpecificationElements pProtocolSpecification;
	private final ImportedProtocolAndDataFormatElements pImportedProtocolAndDataFormat;
	private final EndpointElements pEndpoint;
	private final ImportedServiceAspectElements pImportedServiceAspect;
	private final PropertyValueAssignmentElements pPropertyValueAssignment;
	private final MicroserviceTypeElements eMicroserviceType;
	private final QualifiedNameWithAtLeastOneLevelElements pQualifiedNameWithAtLeastOneLevel;
	private final TerminalRule tNUMBER_WITH_TRAILING_PERIOD;
	private final AnythingElements pAnything;
	private final TerminalRule tSTRING;
	
	private final Grammar grammar;
	
	private final TechnologyDslGrammarAccess gaTechnologyDsl;
	
	private final DataDslGrammarAccess gaDataDsl;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ServiceDslGrammarAccess(GrammarProvider grammarProvider,
			TechnologyDslGrammarAccess gaTechnologyDsl,
			DataDslGrammarAccess gaDataDsl,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTechnologyDsl = gaTechnologyDsl;
		this.gaDataDsl = gaDataDsl;
		this.gaTerminals = gaTerminals;
		this.pServiceModel = new ServiceModelElements();
		this.pImport = new ImportElements();
		this.eImportType = new ImportTypeElements();
		this.eVisibility = new VisibilityElements();
		this.pMicroservice = new MicroserviceElements();
		this.pTechnologyReference = new TechnologyReferenceElements();
		this.pPossiblyImportedMicroservice = new PossiblyImportedMicroserviceElements();
		this.pPossiblyImportedInterface = new PossiblyImportedInterfaceElements();
		this.pPossiblyImportedOperation = new PossiblyImportedOperationElements();
		this.pInterface = new InterfaceElements();
		this.pApiOperationComment = new ApiOperationCommentElements();
		this.pApiParameterComment = new ApiParameterCommentElements();
		this.pOperation = new OperationElements();
		this.pReferredOperation = new ReferredOperationElements();
		this.pParameter = new ParameterElements();
		this.pImportedType = new ImportedTypeElements();
		this.pProtocolSpecification = new ProtocolSpecificationElements();
		this.pImportedProtocolAndDataFormat = new ImportedProtocolAndDataFormatElements();
		this.pEndpoint = new EndpointElements();
		this.pImportedServiceAspect = new ImportedServiceAspectElements();
		this.pPropertyValueAssignment = new PropertyValueAssignmentElements();
		this.eMicroserviceType = new MicroserviceTypeElements();
		this.pQualifiedNameWithAtLeastOneLevel = new QualifiedNameWithAtLeastOneLevelElements();
		this.tNUMBER_WITH_TRAILING_PERIOD = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.NUMBER_WITH_TRAILING_PERIOD");
		this.pAnything = new AnythingElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.ServiceDsl.STRING");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fhdo.lemma.ServiceDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TechnologyDslGrammarAccess getTechnologyDslGrammarAccess() {
		return gaTechnologyDsl;
	}
	
	public DataDslGrammarAccess getDataDslGrammarAccess() {
		return gaDataDsl;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ServiceModel returns ServiceModel:
	//    imports+=Import*
	//    microservices+=Microservice+
	//;
	public ServiceModelElements getServiceModelAccess() {
		return pServiceModel;
	}
	
	public ParserRule getServiceModelRule() {
		return getServiceModelAccess().getRule();
	}
	
	//Import returns Import:
	//    'import' importType=ImportType 'from' importURI=STRING 'as' name=ID
	//;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//enum ImportType returns ImportType:
	//    DATATYPES='datatypes' | TECHNOLOGY='technology' | MICROSERVICES='microservices'
	//;
	public ImportTypeElements getImportTypeAccess() {
		return eImportType;
	}
	
	public EnumRule getImportTypeRule() {
		return getImportTypeAccess().getRule();
	}
	
	//enum Visibility returns Visibility:
	//    INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public'
	//;
	public VisibilityElements getVisibilityAccess() {
		return eVisibility;
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//Microservice returns Microservice:
	//    (technologyReferences+=TechnologyReference)*
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    visibility=Visibility?
	//    type=MicroserviceType
	//    'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
	//    // TODO: Inheritance of microservices
	//    //('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
	//    '{'
	//        ('required' 'microservices' '{'
	//            requiredMicroservices+=PossiblyImportedMicroservice
	//            (',' requiredMicroservices+=PossiblyImportedMicroservice)*
	//        '}')?
	//        ('required' 'interfaces' '{'
	//            requiredInterfaces+=PossiblyImportedInterface
	//            (',' requiredInterfaces+=PossiblyImportedInterface)*
	//        '}')?
	//        ('required' 'operations' '{'
	//            requiredOperations+=PossiblyImportedOperation
	//            (',' requiredOperations+=PossiblyImportedOperation)*
	//        '}')?
	//        interfaces+=Interface+
	//    '}'
	//;
	public MicroserviceElements getMicroserviceAccess() {
		return pMicroservice;
	}
	
	public ParserRule getMicroserviceRule() {
		return getMicroserviceAccess().getRule();
	}
	
	//TechnologyReference returns TechnologyReference:
	//    '@' 'technology'
	//        '('
	//            technology=[Import]
	//            (',' 'typedef' '=' isTypeDefinitionTechnology=BOOLEAN)?
	//        ')'
	//;
	public TechnologyReferenceElements getTechnologyReferenceAccess() {
		return pTechnologyReference;
	}
	
	public ParserRule getTechnologyReferenceRule() {
		return getTechnologyReferenceAccess().getRule();
	}
	
	//PossiblyImportedMicroservice returns PossiblyImportedMicroservice:
	//    (^import=[Import] '::')? microservice=[Microservice|QualifiedName]
	//;
	public PossiblyImportedMicroserviceElements getPossiblyImportedMicroserviceAccess() {
		return pPossiblyImportedMicroservice;
	}
	
	public ParserRule getPossiblyImportedMicroserviceRule() {
		return getPossiblyImportedMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedInterface returns PossiblyImportedInterface:
	//    (^import=[Import] '::')? interface=[Interface|QualifiedName]
	//;
	public PossiblyImportedInterfaceElements getPossiblyImportedInterfaceAccess() {
		return pPossiblyImportedInterface;
	}
	
	public ParserRule getPossiblyImportedInterfaceRule() {
		return getPossiblyImportedInterfaceAccess().getRule();
	}
	
	//PossiblyImportedOperation returns PossiblyImportedOperation:
	//    (^import=[Import] '::')? operation=[Operation|QualifiedName]
	//;
	public PossiblyImportedOperationElements getPossiblyImportedOperationAccess() {
		return pPossiblyImportedOperation;
	}
	
	public ParserRule getPossiblyImportedOperationRule() {
		return getPossiblyImportedOperationAccess().getRule();
	}
	
	//Interface returns Interface:
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    (notImplemented?='noimpl')? visibility=Visibility? 'interface' name=ID ('version' version=ID)?
	//    '{'
	//        referredOperations+=ReferredOperation*
	//        operations+=Operation*
	//    '}'
	//;
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//ApiOperationComment returns ApiOperationComment:
	//    '---'
	//        comment=Anything
	//        parameterComments+=ApiParameterComment*
	//    '---'
	//;
	public ApiOperationCommentElements getApiOperationCommentAccess() {
		return pApiOperationComment;
	}
	
	public ParserRule getApiOperationCommentRule() {
		return getApiOperationCommentAccess().getRule();
	}
	
	//ApiParameterComment returns ApiParameterComment:
	//    (
	//        '@param' |
	//        required?='@required' |
	//        required?='@requires' |
	//        ^returned?='@returned' |
	//        ^returned?='@returns'
	//    )
	//    parameter=[Parameter]
	//    comment=Anything
	//;
	public ApiParameterCommentElements getApiParameterCommentAccess() {
		return pApiParameterComment;
	}
	
	public ParserRule getApiParameterCommentRule() {
		return getApiParameterCommentAccess().getRule();
	}
	
	//Operation returns Operation:
	//    (apiOperationComment=ApiOperationComment)?
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    (notImplemented?='noimpl')? visibility=Visibility? name=ID '('
	//        parameters+=Parameter? (',' parameters+=Parameter)*
	//    ')' ';'
	//;
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//ReferredOperation returns ReferredOperation:
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    'refers' operation=[Operation|QualifiedName] ';'
	//;
	public ReferredOperationElements getReferredOperationAccess() {
		return pReferredOperation;
	}
	
	public ParserRule getReferredOperationRule() {
		return getReferredOperationAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    aspects+=ImportedServiceAspect*
	//    communicationType=CommunicationType
	//    exchangePattern=ExchangePattern?
	//    (communicatesFault?='fault')?
	//    name=ID
	//    (optional?='?')?
	//    ':'
	//    (primitiveType=PrimitiveType | importedType=ImportedType)
	//    ('=' initializedByOperation=PossiblyImportedOperation)?
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ImportedType returns ImportedType:
	//    ^import=[Import] '::' type=[data::Type|QualifiedName]
	//;
	public ImportedTypeElements getImportedTypeAccess() {
		return pImportedType;
	}
	
	public ParserRule getImportedTypeRule() {
		return getImportedTypeAccess().getRule();
	}
	
	//ProtocolSpecification returns ProtocolSpecification:
	//    '@' communicationType=CommunicationType '('
	//        protocol=ImportedProtocolAndDataFormat
	//    ')'
	//;
	public ProtocolSpecificationElements getProtocolSpecificationAccess() {
		return pProtocolSpecification;
	}
	
	public ParserRule getProtocolSpecificationRule() {
		return getProtocolSpecificationAccess().getRule();
	}
	
	//ImportedProtocolAndDataFormat returns ImportedProtocolAndDataFormat:
	//    ^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName]
	//    ('(' dataFormat=[technology::DataFormat|STRING] ')')?
	//;
	public ImportedProtocolAndDataFormatElements getImportedProtocolAndDataFormatAccess() {
		return pImportedProtocolAndDataFormat;
	}
	
	public ParserRule getImportedProtocolAndDataFormatRule() {
		return getImportedProtocolAndDataFormatAccess().getRule();
	}
	
	//Endpoint returns Endpoint:
	//    protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
	//    addresses+=STRING (',' addresses+=STRING)* ';'
	//;
	public EndpointElements getEndpointAccess() {
		return pEndpoint;
	}
	
	public ParserRule getEndpointRule() {
		return getEndpointAccess().getRule();
	}
	
	//ImportedServiceAspect returns ImportedServiceAspect:
	//    '@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName]
	//    ('('
	//        (singlePropertyValue=PrimitiveValue
	//            |
	//         (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
	//        )
	//    ')')?
	//;
	public ImportedServiceAspectElements getImportedServiceAspectAccess() {
		return pImportedServiceAspect;
	}
	
	public ParserRule getImportedServiceAspectRule() {
		return getImportedServiceAspectAccess().getRule();
	}
	
	//PropertyValueAssignment returns technology::TechnologySpecificPropertyValueAssignment:
	//    (property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue) |
	//    (property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
	//;
	public PropertyValueAssignmentElements getPropertyValueAssignmentAccess() {
		return pPropertyValueAssignment;
	}
	
	public ParserRule getPropertyValueAssignmentRule() {
		return getPropertyValueAssignmentAccess().getRule();
	}
	
	//enum MicroserviceType returns MicroserviceType:
	//    FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE = 'infrastructure'
	//;
	public MicroserviceTypeElements getMicroserviceTypeAccess() {
		return eMicroserviceType;
	}
	
	public EnumRule getMicroserviceTypeRule() {
		return getMicroserviceTypeAccess().getRule();
	}
	
	//QualifiedNameWithAtLeastOneLevel:
	//    ID '.' QualifiedName
	//;
	public QualifiedNameWithAtLeastOneLevelElements getQualifiedNameWithAtLeastOneLevelAccess() {
		return pQualifiedNameWithAtLeastOneLevel;
	}
	
	public ParserRule getQualifiedNameWithAtLeastOneLevelRule() {
		return getQualifiedNameWithAtLeastOneLevelAccess().getRule();
	}
	
	//terminal NUMBER_WITH_TRAILING_PERIOD: INT '.';
	public TerminalRule getNUMBER_WITH_TRAILING_PERIODRule() {
		return tNUMBER_WITH_TRAILING_PERIOD;
	}
	
	//// Rule to consume any character
	//Anything:
	//    (
	//        // All keyword characters of the Service, Technology, and Data DSLs (the Service DSL
	//        // inherits from the latter ones). If we don't specify them here, they will be recognized as
	//        // regular grammar tokens in the Anything string.
	//        '{' | '}' | '<' | '>' | ',' | '(' | ')' | '::' | '.' | '-' | '--' | '/' | '?' | ':' | '@' |
	//        '=' | ';' |
	//        // All keywords of the Technology DSL (from which the Service DSL inherits). If we don't
	//        // specify them here, they will be recognized as regular grammar tokens in the Anything
	//        // string.
	//        'technology' | 'types' | 'compatibility' | 'matrix' | 'protocols' | 'service' | 'aspects' |
	//        'deployment' | 'technologies' | 'infrastructure' | 'operation' | 'import' | 'from' | 'as' |
	//        'data' | 'formats' | 'default' | 'with' | 'format' | 'in' | 'out' | 'inout' | 'sync' |
	//        'async' | 'primitive' | 'type' | 'based' | 'on' | 'collection' | 'structure'| '->' | '<-' |
	//        '<->' | 'environments' | 'properties' | 'mandatory' | 'singleval' | 'microservices' |
	//        'interfaces' | 'operations' | 'parameters' | 'fields' | 'exchange_pattern' |
	//        'communication_type' | 'protocol' | 'data_format' | 'aspect' | 'for' | 'containers' |
	//        'selector'
	//        // All keywords of the Data DSL (from which the Service DSL inherits). If we don't specify
	//        // them here, they will be recognized as regular grammar tokens in the Anything string.
	//        'datatypes' |  'version' | 'context' | 'aggregate'  | 'applicationService' | 'domainEvent' |
	//        'domainService' | 'entity' | 'factory' | 'infrastructureService' | 'repository' |
	//        'specification' | 'valueObject' | 'extends' | 'identifier' | 'neverEmpty' | 'part' |
	//        'hide' | 'immutable' | 'enum' | 'closure' | 'sideEffectFree' | 'validator' | 'function' |
	//        'procedure' | 'boolean' | 'byte' | 'char' | 'date' | 'double' | 'float' | 'int' | 'long' |
	//        'short' | 'string' |
	//        // All keywords of the Service DSL. If we don't specify them here, they will be recognized
	//        // as regular grammar tokens in the Anything string.
	//        'internal' | 'architecture' | 'public' | 'endpoints' | 'microservice' | 'required' |
	//        'requires' | 'returned' | 'returns' | 'typedef' | 'noimpl' | 'interface' | 'param' |
	//        'refers' | 'fault' | 'functional' | 'utility' |
	//        // All other terminal rules of the Service and the Data DSL (from which the Service DSL
	//        // inherits). If we don't specify them here, they will be recognized as regular grammar
	//        // tokens in the Anything string.
	//        BOOLEAN | NUMBER_WITH_TRAILING_PERIOD | BIG_DECIMAL | ID | STRING | ANY_OTHER
	//    )+
	//;
	public AnythingElements getAnythingAccess() {
		return pAnything;
	}
	
	public ParserRule getAnythingRule() {
		return getAnythingAccess().getRule();
	}
	
	//// We override the STRING terminal rule so that only double-quotes instead of single-quotes can be
	//// used to express strings. That is, because we need to be able to use a single single-quote in the
	//// Anything rule and hence in API operation comments. Otherwise, we could not state comments such as
	//// "Change a customer_'_s address".
	//@Override
	//terminal STRING:
	//    '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
	//;
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//Technology returns Technology:
	//    imports+=TechnologyImport*
	//    'technology' name=ID '{'
	//        ('types' '{'
	//            (primitiveTypes+=TechnologySpecificPrimitiveType |
	//                collectionTypes+=TechnologySpecificCollectionType |
	//                dataStructures+=TechnologySpecificDataStructure
	//            )+
	//            ('compatibility' 'matrix' '{'
	//                compatibilityEntries+=CompatibilityMatrixEntry+
	//            '}')?
	//        '}')?
	//        ('protocols' '{'
	//            protocols+=Protocol+
	//        '}')?
	//        ('service' 'aspects' '{'
	//            serviceAspects+=ServiceAspect+
	//        '}')?
	//        ('deployment' 'technologies' '{'
	//            deploymentTechnologies+=DeploymentTechnology+
	//        '}')?
	//        ('infrastructure' 'technologies' '{'
	//            infrastructureTechnologies+=InfrastructureTechnology+
	//        '}')?
	//        ('operation' 'aspects' '{'
	//            operationAspects+=OperationAspect+
	//        '}')?
	//    '}'
	//;
	public TechnologyDslGrammarAccess.TechnologyElements getTechnologyAccess() {
		return gaTechnologyDsl.getTechnologyAccess();
	}
	
	public ParserRule getTechnologyRule() {
		return getTechnologyAccess().getRule();
	}
	
	//TechnologyImport returns TechnologyImport:
	//    'import' 'technology' 'from' importURI=STRING 'as' name=ID
	//;
	public TechnologyDslGrammarAccess.TechnologyImportElements getTechnologyImportAccess() {
		return gaTechnologyDsl.getTechnologyImportAccess();
	}
	
	public ParserRule getTechnologyImportRule() {
		return getTechnologyImportAccess().getRule();
	}
	
	//Protocol returns Protocol:
	//    communicationType=CommunicationType
	//    name=ID
	//    'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)*
	//    (default?='default' 'with' 'format' defaultFormat=[DataFormat|STRING])?
	//    ';'
	//;
	public TechnologyDslGrammarAccess.ProtocolElements getProtocolAccess() {
		return gaTechnologyDsl.getProtocolAccess();
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//enum ExchangePattern returns ExchangePattern:
	//    IN='in' | OUT='out' | INOUT='inout'
	//;
	public TechnologyDslGrammarAccess.ExchangePatternElements getExchangePatternAccess() {
		return gaTechnologyDsl.getExchangePatternAccess();
	}
	
	public EnumRule getExchangePatternRule() {
		return getExchangePatternAccess().getRule();
	}
	
	//enum CommunicationType returns CommunicationType:
	//    SYNCHRONOUS='sync' | ASYNCHRONOUS='async'
	//;
	public TechnologyDslGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
		return gaTechnologyDsl.getCommunicationTypeAccess();
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}
	
	//DataFormat returns DataFormat:
	//    formatName=STRING
	//;
	public TechnologyDslGrammarAccess.DataFormatElements getDataFormatAccess() {
		return gaTechnologyDsl.getDataFormatAccess();
	}
	
	public ParserRule getDataFormatRule() {
		return getDataFormatAccess().getRule();
	}
	
	//TechnologySpecificPrimitiveType returns TechnologySpecificPrimitiveType:
	//    'primitive' 'type' name=ID
	//    (
	//        'based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType
	//            (',' basicBuiltinPrimitiveTypes+=PrimitiveType)*
	//        (default?='default')?
	//    )? ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificPrimitiveTypeElements getTechnologySpecificPrimitiveTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificPrimitiveTypeAccess();
	}
	
	public ParserRule getTechnologySpecificPrimitiveTypeRule() {
		return getTechnologySpecificPrimitiveTypeAccess().getRule();
	}
	
	//TechnologySpecificCollectionType returns TechnologySpecificCollectionType:
	//    'collection' 'type' name=ID ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificCollectionTypeElements getTechnologySpecificCollectionTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificCollectionTypeAccess();
	}
	
	public ParserRule getTechnologySpecificCollectionTypeRule() {
		return getTechnologySpecificCollectionTypeAccess().getRule();
	}
	
	//TechnologySpecificDataStructure returns TechnologySpecificDataStructure:
	//    'structure' 'type' name=ID ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificDataStructureElements getTechnologySpecificDataStructureAccess() {
		return gaTechnologyDsl.getTechnologySpecificDataStructureAccess();
	}
	
	public ParserRule getTechnologySpecificDataStructureRule() {
		return getTechnologySpecificDataStructureAccess().getRule();
	}
	
	//PossiblyImportedTechnologySpecificType returns PossiblyImportedTechnologySpecificType:
	//    (^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName]
	//;
	public TechnologyDslGrammarAccess.PossiblyImportedTechnologySpecificTypeElements getPossiblyImportedTechnologySpecificTypeAccess() {
		return gaTechnologyDsl.getPossiblyImportedTechnologySpecificTypeAccess();
	}
	
	public ParserRule getPossiblyImportedTechnologySpecificTypeRule() {
		return getPossiblyImportedTechnologySpecificTypeAccess().getRule();
	}
	
	//enum CompatibilityDirection returns CompatibilityDirection:
	//    MAPPING_TO_COMPATIBLE_TYPES='<-' |
	//    COMPATIBLE_TYPES_TO_MAPPING='->' |
	//    BIDIRECTIONAL='<->'
	//;
	public TechnologyDslGrammarAccess.CompatibilityDirectionElements getCompatibilityDirectionAccess() {
		return gaTechnologyDsl.getCompatibilityDirectionAccess();
	}
	
	public EnumRule getCompatibilityDirectionRule() {
		return getCompatibilityDirectionAccess().getRule();
	}
	
	//CompatibilityMatrixEntry returns CompatibilityMatrixEntry:
	//    compatibleTypes+=PossiblyImportedTechnologySpecificType
	//    (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
	//    direction=CompatibilityDirection
	//    mappingType=PossiblyImportedTechnologySpecificType
	//    ';'
	//;
	public TechnologyDslGrammarAccess.CompatibilityMatrixEntryElements getCompatibilityMatrixEntryAccess() {
		return gaTechnologyDsl.getCompatibilityMatrixEntryAccess();
	}
	
	public ParserRule getCompatibilityMatrixEntryRule() {
		return getCompatibilityMatrixEntryAccess().getRule();
	}
	
	//DeploymentTechnology returns DeploymentTechnology:
	//    name=ID '{'
	//        'operation' 'environments' '=' operationEnvironments+=OperationEnvironment
	//            (',' operationEnvironments+=OperationEnvironment)*
	//            ';'
	//        ('service' 'properties' '{'
	//            serviceProperties+=TechnologySpecificProperty+
	//        '}')?
	//    '}'
	//;
	public TechnologyDslGrammarAccess.DeploymentTechnologyElements getDeploymentTechnologyAccess() {
		return gaTechnologyDsl.getDeploymentTechnologyAccess();
	}
	
	public ParserRule getDeploymentTechnologyRule() {
		return getDeploymentTechnologyAccess().getRule();
	}
	
	//InfrastructureTechnology returns InfrastructureTechnology:
	//    name=ID '{'
	//        'operation' 'environments' '=' operationEnvironments+=OperationEnvironment
	//            (',' operationEnvironments+=OperationEnvironment)*
	//            ';'
	//        ('service' 'properties' '{'
	//            serviceProperties+=TechnologySpecificProperty+
	//        '}')?
	//    '}'
	//;
	public TechnologyDslGrammarAccess.InfrastructureTechnologyElements getInfrastructureTechnologyAccess() {
		return gaTechnologyDsl.getInfrastructureTechnologyAccess();
	}
	
	public ParserRule getInfrastructureTechnologyRule() {
		return getInfrastructureTechnologyAccess().getRule();
	}
	
	//OperationEnvironment returns OperationEnvironment:
	//    environmentName=STRING (default?='default')?
	//;
	public TechnologyDslGrammarAccess.OperationEnvironmentElements getOperationEnvironmentAccess() {
		return gaTechnologyDsl.getOperationEnvironmentAccess();
	}
	
	public ParserRule getOperationEnvironmentRule() {
		return getOperationEnvironmentAccess().getRule();
	}
	
	//enum PropertyFeature returns PropertyFeature:
	//    MANDATORY = 'mandatory' |
	//    SINGLE_VALUED = 'singleval'
	//;
	public TechnologyDslGrammarAccess.PropertyFeatureElements getPropertyFeatureAccess() {
		return gaTechnologyDsl.getPropertyFeatureAccess();
	}
	
	public EnumRule getPropertyFeatureRule() {
		return getPropertyFeatureAccess().getRule();
	}
	
	//TechnologySpecificProperty returns TechnologySpecificProperty:
	//    type=PrimitiveType name=ID
	//    ('=' defaultValue=PrimitiveValue)?
	//    ('<'
	//        features+=PropertyFeature (',' features+=PropertyFeature)*
	//    '>')?
	//    ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificPropertyElements getTechnologySpecificPropertyAccess() {
		return gaTechnologyDsl.getTechnologySpecificPropertyAccess();
	}
	
	public ParserRule getTechnologySpecificPropertyRule() {
		return getTechnologySpecificPropertyAccess().getRule();
	}
	
	//enum ServiceJoinPointType returns JoinPointType:
	//    COMPLEX_TYPES = 'types' |
	//    DATA_FIELDS = 'fields' |
	//    DATA_OPERATIONS = 'domainOperations' |
	//    DATA_OPERATION_PARAMETERS = 'domainParameters' |
	//    MICROSERVICES = 'microservices' |
	//    INTERFACES = 'interfaces' |
	//    OPERATIONS = 'operations' |
	//    PARAMETERS = 'parameters'
	//;
	public TechnologyDslGrammarAccess.ServiceJoinPointTypeElements getServiceJoinPointTypeAccess() {
		return gaTechnologyDsl.getServiceJoinPointTypeAccess();
	}
	
	public EnumRule getServiceJoinPointTypeRule() {
		return getServiceJoinPointTypeAccess().getRule();
	}
	
	//ServiceAspectPointcut returns ServiceAspectPointcut:
	//    forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern |
	//    forCommunicationType?='communication_type' '=' communicationType=CommunicationType |
	//    forProtocol?='protocol' '=' protocol=[Protocol] |
	//    forDataFormat?='data_format' '=' dataFormat=[DataFormat|STRING]
	//;
	public TechnologyDslGrammarAccess.ServiceAspectPointcutElements getServiceAspectPointcutAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutAccess();
	}
	
	public ParserRule getServiceAspectPointcutRule() {
		return getServiceAspectPointcutAccess().getRule();
	}
	
	//ServiceAspectPointcutSelector returns ServiceAspectPointcutSelector:
	//    'selector' '('
	//        pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)*
	//    ')' ';'
	//;
	public TechnologyDslGrammarAccess.ServiceAspectPointcutSelectorElements getServiceAspectPointcutSelectorAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutSelectorAccess();
	}
	
	public ParserRule getServiceAspectPointcutSelectorRule() {
		return getServiceAspectPointcutSelectorAccess().getRule();
	}
	
	//enum AspectFeature returns AspectFeature:
	//    SINGLE_VALUED = 'singleval'
	//;
	public TechnologyDslGrammarAccess.AspectFeatureElements getAspectFeatureAccess() {
		return gaTechnologyDsl.getAspectFeatureAccess();
	}
	
	public EnumRule getAspectFeatureRule() {
		return getAspectFeatureAccess().getRule();
	}
	
	//ServiceAspect returns ServiceAspect:
	//    'aspect' name=ID
	//    ('<'
	//        features+=AspectFeature (',' features+=AspectFeature)*
	//    '>')?
	//    'for' joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)*
	//    (
	//        ('{'
	//            pointcutSelectors+=ServiceAspectPointcutSelector*
	//            properties+=TechnologySpecificProperty*
	//        '}')
	//        |
	//        ';'
	//    )
	//;
	public TechnologyDslGrammarAccess.ServiceAspectElements getServiceAspectAccess() {
		return gaTechnologyDsl.getServiceAspectAccess();
	}
	
	public ParserRule getServiceAspectRule() {
		return getServiceAspectAccess().getRule();
	}
	
	//enum OperationJoinPointType returns JoinPointType:
	//    CONTAINERS = 'containers' | INFRASTRUCTURE_NODES = 'infrastructure'
	//;
	public TechnologyDslGrammarAccess.OperationJoinPointTypeElements getOperationJoinPointTypeAccess() {
		return gaTechnologyDsl.getOperationJoinPointTypeAccess();
	}
	
	public EnumRule getOperationJoinPointTypeRule() {
		return getOperationJoinPointTypeAccess().getRule();
	}
	
	//OperationAspectPointcut returns OperationAspectPointcut:
	//    forTechnology?='technology' '=' technology=[ecore::EObject|ID]
	//;
	public TechnologyDslGrammarAccess.OperationAspectPointcutElements getOperationAspectPointcutAccess() {
		return gaTechnologyDsl.getOperationAspectPointcutAccess();
	}
	
	public ParserRule getOperationAspectPointcutRule() {
		return getOperationAspectPointcutAccess().getRule();
	}
	
	//OperationAspectPointcutSelector returns OperationAspectPointcutSelector:
	//    'selector' '('
	//        pointcuts+=OperationAspectPointcut (',' pointcuts+=OperationAspectPointcut)*
	//    ')' ';'
	//;
	public TechnologyDslGrammarAccess.OperationAspectPointcutSelectorElements getOperationAspectPointcutSelectorAccess() {
		return gaTechnologyDsl.getOperationAspectPointcutSelectorAccess();
	}
	
	public ParserRule getOperationAspectPointcutSelectorRule() {
		return getOperationAspectPointcutSelectorAccess().getRule();
	}
	
	//OperationAspect returns OperationAspect:
	//    'aspect' name=ID
	//    ('<'
	//        features+=AspectFeature (',' features+=AspectFeature)*
	//    '>')?
	//    'for' joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)*
	//    (
	//        ('{'
	//            pointcutSelectors+=OperationAspectPointcutSelector*
	//            properties+=TechnologySpecificProperty*
	//        '}')
	//        |
	//        ';'
	//    )
	//;
	public TechnologyDslGrammarAccess.OperationAspectElements getOperationAspectAccess() {
		return gaTechnologyDsl.getOperationAspectAccess();
	}
	
	public ParserRule getOperationAspectRule() {
		return getOperationAspectAccess().getRule();
	}
	
	//DataModel returns DataModel:
	//    complexTypeImports+=ComplexTypeImport*
	//    (versions+=Version+ | contexts+=Context+ | complexTypes+=ComplexType+)
	//;
	public DataDslGrammarAccess.DataModelElements getDataModelAccess() {
		return gaDataDsl.getDataModelAccess();
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}
	
	//ComplexTypeImport returns ComplexTypeImport:
	//    'import' 'datatypes' 'from' importURI=STRING 'as' name=ID
	//;
	public DataDslGrammarAccess.ComplexTypeImportElements getComplexTypeImportAccess() {
		return gaDataDsl.getComplexTypeImportAccess();
	}
	
	public ParserRule getComplexTypeImportRule() {
		return getComplexTypeImportAccess().getRule();
	}
	
	//Version returns Version:
	//    'version' name=ID '{'
	//         (complexTypes+=ComplexType+ | contexts+=Context+)?
	//     '}'
	//;
	public DataDslGrammarAccess.VersionElements getVersionAccess() {
		return gaDataDsl.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//Context returns Context:
	//    'context' name=ID '{'
	//        complexTypes+=ComplexType+
	//    '}'
	//;
	public DataDslGrammarAccess.ContextElements getContextAccess() {
		return gaDataDsl.getContextAccess();
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//ComplexType returns ComplexType:
	//    DataStructure | CollectionType | Enumeration
	//;
	public DataDslGrammarAccess.ComplexTypeElements getComplexTypeAccess() {
		return gaDataDsl.getComplexTypeAccess();
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//enum ComplexTypeFeature returns ComplexTypeFeature:
	//    AGGREGATE = 'aggregate' |
	//    APPLICATION_SERVICE = 'applicationService' |
	//    DOMAIN_EVENT = 'domainEvent' |
	//    DOMAIN_SERVICE = 'domainService' |
	//    ENTITY = 'entity' |
	//    FACTORY = 'factory' |
	//    INFRASTRUCTURE_SERVICE = 'infrastructureService' |
	//    REPOSITORY = 'repository' |
	//    SERVICE = 'service' |
	//    SPECIFICATION = 'specification' |
	//    VALUE_OBJECT = 'valueObject'
	//;
	public DataDslGrammarAccess.ComplexTypeFeatureElements getComplexTypeFeatureAccess() {
		return gaDataDsl.getComplexTypeFeatureAccess();
	}
	
	public EnumRule getComplexTypeFeatureRule() {
		return getComplexTypeFeatureAccess().getRule();
	}
	
	//DataStructure returns DataStructure:
	//    'structure' name=ID
	//    ('<' features+=ComplexTypeFeature (',' features+=ComplexTypeFeature)* '>')?
	//    ('extends' super=[DataStructure|QualifiedName])? '{'
	//        (
	//            (dataFields+=DataField | operations+=DataOperation)
	//            (',' (dataFields+=DataField | operations+=DataOperation))*
	//        )?
	//    '}'
	//;
	public DataDslGrammarAccess.DataStructureElements getDataStructureAccess() {
		return gaDataDsl.getDataStructureAccess();
	}
	
	public ParserRule getDataStructureRule() {
		return getDataStructureAccess().getRule();
	}
	
	//CollectionType returns CollectionType:
	//    'collection' name=ID '{'
	//        dataFields+=DataField (',' dataFields+=DataField)*
	//    '}'
	//    |
	//    'collection' name=ID '{'
	//        primitiveType=PrimitiveType
	//    '}'
	//;
	public DataDslGrammarAccess.CollectionTypeElements getCollectionTypeAccess() {
		return gaDataDsl.getCollectionTypeAccess();
	}
	
	public ParserRule getCollectionTypeRule() {
		return getCollectionTypeAccess().getRule();
	}
	
	//enum DataFieldFeature returns DataFieldFeature:
	//    IDENTIFIER = 'identifier' |
	//    NEVER_EMPTY = 'neverEmpty' |
	//    PART = 'part'
	//;
	public DataDslGrammarAccess.DataFieldFeatureElements getDataFieldFeatureAccess() {
		return gaDataDsl.getDataFieldFeatureAccess();
	}
	
	public EnumRule getDataFieldFeatureRule() {
		return getDataFieldFeatureAccess().getRule();
	}
	
	//DataField returns DataField:
	//    ^hidden?='hide'?
	//    immutable?='immutable'?
	//    (
	//        primitiveType=PrimitiveType |
	//        complexType=[ComplexType|QualifiedName] |
	//        importedComplexType=ImportedComplexType
	//    )?
	//    name=ID
	//    ('=' initializationValue=PrimitiveValue)?
	//    ('<' features+=DataFieldFeature (',' features+=DataFieldFeature)* '>')?
	//;
	public DataDslGrammarAccess.DataFieldElements getDataFieldAccess() {
		return gaDataDsl.getDataFieldAccess();
	}
	
	public ParserRule getDataFieldRule() {
		return getDataFieldAccess().getRule();
	}
	
	//Enumeration returns Enumeration:
	//    'enum' name=ID
	//    ('<' features+=ComplexTypeFeature (',' features+=ComplexTypeFeature)* '>')? '{'
	//        fields+=EnumerationField (',' fields+=EnumerationField)*
	//    '}'
	//;
	public DataDslGrammarAccess.EnumerationElements getEnumerationAccess() {
		return gaDataDsl.getEnumerationAccess();
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//EnumerationField returns EnumerationField:
	//    name=ID ('(' initializationValue=PrimitiveValue ')')?
	//;
	public DataDslGrammarAccess.EnumerationFieldElements getEnumerationFieldAccess() {
		return gaDataDsl.getEnumerationFieldAccess();
	}
	
	public ParserRule getEnumerationFieldRule() {
		return getEnumerationFieldAccess().getRule();
	}
	
	//enum DataOperationFeature returns DataOperationFeature:
	//    CLOSURE = 'closure' |
	//    IDENTIFIER = 'identifier' |
	//    SIDE_EFFECT_FREE = 'sideEffectFree' |
	//    VALIDATOR = 'validator'
	//;
	public DataDslGrammarAccess.DataOperationFeatureElements getDataOperationFeatureAccess() {
		return gaDataDsl.getDataOperationFeatureAccess();
	}
	
	public EnumRule getDataOperationFeatureRule() {
		return getDataOperationFeatureAccess().getRule();
	}
	
	//DataOperation returns DataOperation:
	//    ^hidden?='hide'?
	//    (
	//        hasNoReturnType ?= 'procedure' |
	//        'function'
	//            (
	//                primitiveReturnType=PrimitiveType |
	//                complexReturnType=[ComplexType|QualifiedName] |
	//                importedComplexReturnType=ImportedComplexType
	//            )?
	//    )
	//    name=ID
	//    ('(' parameters+=DataOperationParameter? (',' parameters+=DataOperationParameter)* ')')?
	//    ('<' features+=DataOperationFeature (',' features+=DataOperationFeature)* '>')?
	//;
	public DataDslGrammarAccess.DataOperationElements getDataOperationAccess() {
		return gaDataDsl.getDataOperationAccess();
	}
	
	public ParserRule getDataOperationRule() {
		return getDataOperationAccess().getRule();
	}
	
	//DataOperationParameter returns DataOperationParameter:
	//    (
	//        primitiveType=PrimitiveType |
	//        complexType=[ComplexType|QualifiedName] |
	//        importedComplexType=ImportedComplexType
	//    )
	//    name=ID
	//;
	public DataDslGrammarAccess.DataOperationParameterElements getDataOperationParameterAccess() {
		return gaDataDsl.getDataOperationParameterAccess();
	}
	
	public ParserRule getDataOperationParameterRule() {
		return getDataOperationParameterAccess().getRule();
	}
	
	//PrimitiveValue returns PrimitiveValue:
	//    numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING
	//;
	public DataDslGrammarAccess.PrimitiveValueElements getPrimitiveValueAccess() {
		return gaDataDsl.getPrimitiveValueAccess();
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//ImportedComplexType returns ImportedComplexType:
	//    ^import=[ComplexTypeImport] '::' importedType=[Type|QualifiedName]
	//;
	public DataDslGrammarAccess.ImportedComplexTypeElements getImportedComplexTypeAccess() {
		return gaDataDsl.getImportedComplexTypeAccess();
	}
	
	public ParserRule getImportedComplexTypeRule() {
		return getImportedComplexTypeAccess().getRule();
	}
	
	//PrimitiveType returns PrimitiveType:
	//    {PrimitiveBoolean} 'boolean' |
	//    {PrimitiveByte} 'byte' |
	//    {PrimitiveCharacter} 'char' |
	//    {PrimitiveDate} 'date' |
	//    {PrimitiveDouble} 'double' |
	//    {PrimitiveFloat} 'float' |
	//    {PrimitiveInteger} 'int' |
	//    {PrimitiveLong} 'long' |
	//    {PrimitiveShort} 'short' |
	//    {PrimitiveString} 'string' |
	//    {PrimitiveUnspecified} 'unspecified'
	//;
	public DataDslGrammarAccess.PrimitiveTypeElements getPrimitiveTypeAccess() {
		return gaDataDsl.getPrimitiveTypeAccess();
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*
	//;
	public DataDslGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaDataDsl.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal BIG_DECIMAL returns ecore::EBigDecimal: '-'?INT ('.' INT)?;
	public TerminalRule getBIG_DECIMALRule() {
		return gaDataDsl.getBIG_DECIMALRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean: 'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return gaDataDsl.getBOOLEANRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
