/*
 * generated by Xtext 2.32.0
 */
grammar InternalServiceDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fhdo.lemma.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fhdo.lemma.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fhdo.lemma.services.ServiceDslGrammarAccess;

}

@parser::members {

 	private ServiceDslGrammarAccess grammarAccess;

    public InternalServiceDslParser(TokenStream input, ServiceDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ServiceModel";
   	}

   	@Override
   	protected ServiceDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleServiceModel
entryRuleServiceModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceModelRule()); }
	iv_ruleServiceModel=ruleServiceModel
	{ $current=$iv_ruleServiceModel.current; }
	EOF;

// Rule ServiceModel
ruleServiceModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"de.fhdo.lemma.ServiceDsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceModelAccess().getMicroservicesMicroserviceParserRuleCall_1_0());
				}
				lv_microservices_1_0=ruleMicroservice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceModelRule());
					}
					add(
						$current,
						"microservices",
						lv_microservices_1_0,
						"de.fhdo.lemma.ServiceDsl.Microservice");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportTypeImportTypeEnumRuleCall_1_0());
				}
				lv_importType_1_0=ruleImportType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importType",
						lv_importType_1_0,
						"de.fhdo.lemma.ServiceDsl.ImportType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_2());
		}
		(
			(
				lv_importURI_3_0=RULE_STRING
				{
					newLeafNode(lv_importURI_3_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_3_0,
						"de.fhdo.lemma.ServiceDsl.STRING");
				}
			)
		)
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getImportAccess().getAsKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getImportAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMicroservice
entryRuleMicroservice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMicroserviceRule()); }
	iv_ruleMicroservice=ruleMicroservice
	{ $current=$iv_ruleMicroservice.current; }
	EOF;

// Rule Microservice
ruleMicroservice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroserviceAccess().getTechnologyReferencesTechnologyReferenceParserRuleCall_0_0());
				}
				lv_technologyReferences_0_0=ruleTechnologyReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
					}
					add(
						$current,
						"technologyReferences",
						lv_technologyReferences_0_0,
						"de.fhdo.lemma.ServiceDsl.TechnologyReference");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getProtocolsProtocolSpecificationParserRuleCall_1_0_0());
					}
					lv_protocols_1_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_1_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getProtocolsProtocolSpecificationParserRuleCall_1_1_0());
					}
					lv_protocols_2_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_2_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		(
			otherlv_3='@'
			{
				newLeafNode(otherlv_3, grammarAccess.getMicroserviceAccess().getCommercialAtKeyword_2_0());
			}
			otherlv_4='endpoints'
			{
				newLeafNode(otherlv_4, grammarAccess.getMicroserviceAccess().getEndpointsKeyword_2_1());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getMicroserviceAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getEndpointsEndpointParserRuleCall_2_3_0());
					}
					lv_endpoints_6_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_6_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getMicroserviceAccess().getRightParenthesisKeyword_2_4());
			}
		)?
		(
			otherlv_8='@'
			{
				newLeafNode(otherlv_8, grammarAccess.getMicroserviceAccess().getCommercialAtKeyword_3_0());
			}
			otherlv_9='endpoints'
			{
				newLeafNode(otherlv_9, grammarAccess.getMicroserviceAccess().getEndpointsKeyword_3_1());
			}
			otherlv_10='({'
			{
				newLeafNode(otherlv_10, grammarAccess.getMicroserviceAccess().getLeftParenthesisLeftCurlyBracketKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getEndpointsEndpointParserRuleCall_3_3_0());
					}
					lv_endpoints_11_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_11_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_12='})'
			{
				newLeafNode(otherlv_12, grammarAccess.getMicroserviceAccess().getRightCurlyBracketRightParenthesisKeyword_3_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroserviceAccess().getAspectsImportedServiceAspectParserRuleCall_4_0());
				}
				lv_aspects_13_0=ruleImportedServiceAspect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
					}
					add(
						$current,
						"aspects",
						lv_aspects_13_0,
						"de.fhdo.lemma.ServiceDsl.ImportedServiceAspect");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroserviceAccess().getVisibilityVisibilityEnumRuleCall_5_0());
				}
				lv_visibility_14_0=ruleVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_14_0,
						"de.fhdo.lemma.ServiceDsl.Visibility");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroserviceAccess().getTypeMicroserviceTypeEnumRuleCall_6_0());
				}
				lv_type_15_0=ruleMicroserviceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
					}
					set(
						$current,
						"type",
						lv_type_15_0,
						"de.fhdo.lemma.ServiceDsl.MicroserviceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_16='microservice'
		{
			newLeafNode(otherlv_16, grammarAccess.getMicroserviceAccess().getMicroserviceKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroserviceAccess().getNameQualifiedNameWithAtLeastOneLevelParserRuleCall_8_0());
				}
				lv_name_17_0=ruleQualifiedNameWithAtLeastOneLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
					}
					set(
						$current,
						"name",
						lv_name_17_0,
						"de.fhdo.lemma.ServiceDsl.QualifiedNameWithAtLeastOneLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_18='version'
			{
				newLeafNode(otherlv_18, grammarAccess.getMicroserviceAccess().getVersionKeyword_9_0());
			}
			(
				(
					lv_version_19_0=RULE_ID
					{
						newLeafNode(lv_version_19_0, grammarAccess.getMicroserviceAccess().getVersionIDTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMicroserviceRule());
						}
						setWithLastConsumed(
							$current,
							"version",
							lv_version_19_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_20='{'
		{
			newLeafNode(otherlv_20, grammarAccess.getMicroserviceAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			otherlv_21='required'
			{
				newLeafNode(otherlv_21, grammarAccess.getMicroserviceAccess().getRequiredKeyword_11_0());
			}
			otherlv_22='microservices'
			{
				newLeafNode(otherlv_22, grammarAccess.getMicroserviceAccess().getMicroservicesKeyword_11_1());
			}
			otherlv_23='{'
			{
				newLeafNode(otherlv_23, grammarAccess.getMicroserviceAccess().getLeftCurlyBracketKeyword_11_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_3_0());
					}
					lv_requiredMicroservices_24_0=rulePossiblyImportedMicroservice
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"requiredMicroservices",
							lv_requiredMicroservices_24_0,
							"de.fhdo.lemma.ServiceDsl.PossiblyImportedMicroservice");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_25=','
				{
					newLeafNode(otherlv_25, grammarAccess.getMicroserviceAccess().getCommaKeyword_11_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMicroserviceAccess().getRequiredMicroservicesPossiblyImportedMicroserviceParserRuleCall_11_4_1_0());
						}
						lv_requiredMicroservices_26_0=rulePossiblyImportedMicroservice
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
							}
							add(
								$current,
								"requiredMicroservices",
								lv_requiredMicroservices_26_0,
								"de.fhdo.lemma.ServiceDsl.PossiblyImportedMicroservice");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_27='}'
			{
				newLeafNode(otherlv_27, grammarAccess.getMicroserviceAccess().getRightCurlyBracketKeyword_11_5());
			}
		)?
		(
			otherlv_28='required'
			{
				newLeafNode(otherlv_28, grammarAccess.getMicroserviceAccess().getRequiredKeyword_12_0());
			}
			otherlv_29='interfaces'
			{
				newLeafNode(otherlv_29, grammarAccess.getMicroserviceAccess().getInterfacesKeyword_12_1());
			}
			otherlv_30='{'
			{
				newLeafNode(otherlv_30, grammarAccess.getMicroserviceAccess().getLeftCurlyBracketKeyword_12_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_3_0());
					}
					lv_requiredInterfaces_31_0=rulePossiblyImportedInterface
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"requiredInterfaces",
							lv_requiredInterfaces_31_0,
							"de.fhdo.lemma.ServiceDsl.PossiblyImportedInterface");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_32=','
				{
					newLeafNode(otherlv_32, grammarAccess.getMicroserviceAccess().getCommaKeyword_12_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMicroserviceAccess().getRequiredInterfacesPossiblyImportedInterfaceParserRuleCall_12_4_1_0());
						}
						lv_requiredInterfaces_33_0=rulePossiblyImportedInterface
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
							}
							add(
								$current,
								"requiredInterfaces",
								lv_requiredInterfaces_33_0,
								"de.fhdo.lemma.ServiceDsl.PossiblyImportedInterface");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_34='}'
			{
				newLeafNode(otherlv_34, grammarAccess.getMicroserviceAccess().getRightCurlyBracketKeyword_12_5());
			}
		)?
		(
			otherlv_35='required'
			{
				newLeafNode(otherlv_35, grammarAccess.getMicroserviceAccess().getRequiredKeyword_13_0());
			}
			otherlv_36='operations'
			{
				newLeafNode(otherlv_36, grammarAccess.getMicroserviceAccess().getOperationsKeyword_13_1());
			}
			otherlv_37='{'
			{
				newLeafNode(otherlv_37, grammarAccess.getMicroserviceAccess().getLeftCurlyBracketKeyword_13_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMicroserviceAccess().getRequiredOperationsPossiblyImportedOperationParserRuleCall_13_3_0());
					}
					lv_requiredOperations_38_0=rulePossiblyImportedOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
						}
						add(
							$current,
							"requiredOperations",
							lv_requiredOperations_38_0,
							"de.fhdo.lemma.ServiceDsl.PossiblyImportedOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_39=','
				{
					newLeafNode(otherlv_39, grammarAccess.getMicroserviceAccess().getCommaKeyword_13_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMicroserviceAccess().getRequiredOperationsPossiblyImportedOperationParserRuleCall_13_4_1_0());
						}
						lv_requiredOperations_40_0=rulePossiblyImportedOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
							}
							add(
								$current,
								"requiredOperations",
								lv_requiredOperations_40_0,
								"de.fhdo.lemma.ServiceDsl.PossiblyImportedOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_41='}'
			{
				newLeafNode(otherlv_41, grammarAccess.getMicroserviceAccess().getRightCurlyBracketKeyword_13_5());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroserviceAccess().getInterfacesInterfaceParserRuleCall_14_0());
				}
				lv_interfaces_42_0=ruleInterface
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroserviceRule());
					}
					add(
						$current,
						"interfaces",
						lv_interfaces_42_0,
						"de.fhdo.lemma.ServiceDsl.Interface");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_43='}'
		{
			newLeafNode(otherlv_43, grammarAccess.getMicroserviceAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleTechnologyReference
entryRuleTechnologyReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyReferenceRule()); }
	iv_ruleTechnologyReference=ruleTechnologyReference
	{ $current=$iv_ruleTechnologyReference.current; }
	EOF;

// Rule TechnologyReference
ruleTechnologyReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologyReferenceAccess().getCommercialAtKeyword_0());
		}
		otherlv_1='technology'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologyReferenceAccess().getTechnologyKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getTechnologyReferenceAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyReferenceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTechnologyReferenceAccess().getTechnologyImportCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getTechnologyReferenceAccess().getCommaKeyword_4_0());
			}
			otherlv_5='typedef'
			{
				newLeafNode(otherlv_5, grammarAccess.getTechnologyReferenceAccess().getTypedefKeyword_4_1());
			}
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getTechnologyReferenceAccess().getEqualsSignKeyword_4_2());
			}
			(
				(
					lv_isTypeDefinitionTechnology_7_0=RULE_BOOLEAN
					{
						newLeafNode(lv_isTypeDefinitionTechnology_7_0, grammarAccess.getTechnologyReferenceAccess().getIsTypeDefinitionTechnologyBOOLEANTerminalRuleCall_4_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTechnologyReferenceRule());
						}
						setWithLastConsumed(
							$current,
							"isTypeDefinitionTechnology",
							lv_isTypeDefinitionTechnology_7_0,
							"de.fhdo.lemma.data.DataDsl.BOOLEAN");
					}
				)
			)
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getTechnologyReferenceAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulePossiblyImportedMicroservice
entryRulePossiblyImportedMicroservice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPossiblyImportedMicroserviceRule()); }
	iv_rulePossiblyImportedMicroservice=rulePossiblyImportedMicroservice
	{ $current=$iv_rulePossiblyImportedMicroservice.current; }
	EOF;

// Rule PossiblyImportedMicroservice
rulePossiblyImportedMicroservice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPossiblyImportedMicroserviceRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPossiblyImportedMicroserviceAccess().getImportImportCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getPossiblyImportedMicroserviceAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPossiblyImportedMicroserviceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPossiblyImportedMicroserviceAccess().getMicroserviceMicroserviceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePossiblyImportedInterface
entryRulePossiblyImportedInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPossiblyImportedInterfaceRule()); }
	iv_rulePossiblyImportedInterface=rulePossiblyImportedInterface
	{ $current=$iv_rulePossiblyImportedInterface.current; }
	EOF;

// Rule PossiblyImportedInterface
rulePossiblyImportedInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPossiblyImportedInterfaceRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPossiblyImportedInterfaceAccess().getImportImportCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getPossiblyImportedInterfaceAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPossiblyImportedInterfaceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPossiblyImportedInterfaceAccess().getInterfaceInterfaceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePossiblyImportedOperation
entryRulePossiblyImportedOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPossiblyImportedOperationRule()); }
	iv_rulePossiblyImportedOperation=rulePossiblyImportedOperation
	{ $current=$iv_rulePossiblyImportedOperation.current; }
	EOF;

// Rule PossiblyImportedOperation
rulePossiblyImportedOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPossiblyImportedOperationRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPossiblyImportedOperationAccess().getImportImportCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getPossiblyImportedOperationAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPossiblyImportedOperationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPossiblyImportedOperationAccess().getOperationOperationCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterface
entryRuleInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceRule()); }
	iv_ruleInterface=ruleInterface
	{ $current=$iv_ruleInterface.current; }
	EOF;

// Rule Interface
ruleInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceAccess().getProtocolsProtocolSpecificationParserRuleCall_0_0_0());
					}
					lv_protocols_0_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_0_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceAccess().getProtocolsProtocolSpecificationParserRuleCall_0_1_0());
					}
					lv_protocols_1_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_1_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		(
			otherlv_2='@'
			{
				newLeafNode(otherlv_2, grammarAccess.getInterfaceAccess().getCommercialAtKeyword_1_0());
			}
			otherlv_3='endpoints'
			{
				newLeafNode(otherlv_3, grammarAccess.getInterfaceAccess().getEndpointsKeyword_1_1());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getInterfaceAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceAccess().getEndpointsEndpointParserRuleCall_1_3_0());
					}
					lv_endpoints_5_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_5_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getInterfaceAccess().getRightParenthesisKeyword_1_4());
			}
		)?
		(
			otherlv_7='@'
			{
				newLeafNode(otherlv_7, grammarAccess.getInterfaceAccess().getCommercialAtKeyword_2_0());
			}
			otherlv_8='endpoints'
			{
				newLeafNode(otherlv_8, grammarAccess.getInterfaceAccess().getEndpointsKeyword_2_1());
			}
			otherlv_9='({'
			{
				newLeafNode(otherlv_9, grammarAccess.getInterfaceAccess().getLeftParenthesisLeftCurlyBracketKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceAccess().getEndpointsEndpointParserRuleCall_2_3_0());
					}
					lv_endpoints_10_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_10_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_11='})'
			{
				newLeafNode(otherlv_11, grammarAccess.getInterfaceAccess().getRightCurlyBracketRightParenthesisKeyword_2_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceAccess().getAspectsImportedServiceAspectParserRuleCall_3_0());
				}
				lv_aspects_12_0=ruleImportedServiceAspect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceRule());
					}
					add(
						$current,
						"aspects",
						lv_aspects_12_0,
						"de.fhdo.lemma.ServiceDsl.ImportedServiceAspect");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_notImplemented_13_0='noimpl'
				{
					newLeafNode(lv_notImplemented_13_0, grammarAccess.getInterfaceAccess().getNotImplementedNoimplKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceRule());
					}
					setWithLastConsumed($current, "notImplemented", lv_notImplemented_13_0 != null, "noimpl");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceAccess().getVisibilityVisibilityEnumRuleCall_5_0());
				}
				lv_visibility_14_0=ruleVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_14_0,
						"de.fhdo.lemma.ServiceDsl.Visibility");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_15='interface'
		{
			newLeafNode(otherlv_15, grammarAccess.getInterfaceAccess().getInterfaceKeyword_6());
		}
		(
			(
				lv_name_16_0=RULE_ID
				{
					newLeafNode(lv_name_16_0, grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_16_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_17='version'
			{
				newLeafNode(otherlv_17, grammarAccess.getInterfaceAccess().getVersionKeyword_8_0());
			}
			(
				(
					lv_version_18_0=RULE_ID
					{
						newLeafNode(lv_version_18_0, grammarAccess.getInterfaceAccess().getVersionIDTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInterfaceRule());
						}
						setWithLastConsumed(
							$current,
							"version",
							lv_version_18_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_19='{'
		{
			newLeafNode(otherlv_19, grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceAccess().getReferredOperationsReferredOperationParserRuleCall_10_0());
				}
				lv_referredOperations_20_0=ruleReferredOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceRule());
					}
					add(
						$current,
						"referredOperations",
						lv_referredOperations_20_0,
						"de.fhdo.lemma.ServiceDsl.ReferredOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceAccess().getOperationsOperationParserRuleCall_11_0());
				}
				lv_operations_21_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceRule());
					}
					add(
						$current,
						"operations",
						lv_operations_21_0,
						"de.fhdo.lemma.ServiceDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleApiOperationComment
entryRuleApiOperationComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApiOperationCommentRule()); }
	iv_ruleApiOperationComment=ruleApiOperationComment
	{ $current=$iv_ruleApiOperationComment.current; }
	EOF;

// Rule ApiOperationComment
ruleApiOperationComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='---'
		{
			newLeafNode(otherlv_0, grammarAccess.getApiOperationCommentAccess().getHyphenMinusHyphenMinusHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApiOperationCommentAccess().getCommentAnythingParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnything
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApiOperationCommentRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.fhdo.lemma.ServiceDsl.Anything");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getApiOperationCommentAccess().getParameterCommentsApiParameterCommentParserRuleCall_2_0());
				}
				lv_parameterComments_2_0=ruleApiParameterComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApiOperationCommentRule());
					}
					add(
						$current,
						"parameterComments",
						lv_parameterComments_2_0,
						"de.fhdo.lemma.ServiceDsl.ApiParameterComment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='---'
		{
			newLeafNode(otherlv_3, grammarAccess.getApiOperationCommentAccess().getHyphenMinusHyphenMinusHyphenMinusKeyword_3());
		}
	)
;

// Entry rule entryRuleApiParameterComment
entryRuleApiParameterComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApiParameterCommentRule()); }
	iv_ruleApiParameterComment=ruleApiParameterComment
	{ $current=$iv_ruleApiParameterComment.current; }
	EOF;

// Rule ApiParameterComment
ruleApiParameterComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='@param'
			{
				newLeafNode(otherlv_0, grammarAccess.getApiParameterCommentAccess().getParamKeyword_0_0());
			}
			    |
			(
				(
					lv_required_1_0='@required'
					{
						newLeafNode(lv_required_1_0, grammarAccess.getApiParameterCommentAccess().getRequiredRequiredKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApiParameterCommentRule());
						}
						setWithLastConsumed($current, "required", lv_required_1_0 != null, "@required");
					}
				)
			)
			    |
			(
				(
					lv_required_2_0='@requires'
					{
						newLeafNode(lv_required_2_0, grammarAccess.getApiParameterCommentAccess().getRequiredRequiresKeyword_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApiParameterCommentRule());
						}
						setWithLastConsumed($current, "required", lv_required_2_0 != null, "@requires");
					}
				)
			)
			    |
			(
				(
					lv_returned_3_0='@returned'
					{
						newLeafNode(lv_returned_3_0, grammarAccess.getApiParameterCommentAccess().getReturnedReturnedKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApiParameterCommentRule());
						}
						setWithLastConsumed($current, "returned", lv_returned_3_0 != null, "@returned");
					}
				)
			)
			    |
			(
				(
					lv_returned_4_0='@returns'
					{
						newLeafNode(lv_returned_4_0, grammarAccess.getApiParameterCommentAccess().getReturnedReturnsKeyword_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApiParameterCommentRule());
						}
						setWithLastConsumed($current, "returned", lv_returned_4_0 != null, "@returns");
					}
				)
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getApiParameterCommentRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getApiParameterCommentAccess().getParameterParameterCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getApiParameterCommentAccess().getCommentAnythingParserRuleCall_2_0());
				}
				lv_comment_6_0=ruleAnything
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApiParameterCommentRule());
					}
					set(
						$current,
						"comment",
						lv_comment_6_0,
						"de.fhdo.lemma.ServiceDsl.Anything");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getApiOperationCommentApiOperationCommentParserRuleCall_0_0());
				}
				lv_apiOperationComment_0_0=ruleApiOperationComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"apiOperationComment",
						lv_apiOperationComment_0_0,
						"de.fhdo.lemma.ServiceDsl.ApiOperationComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getProtocolsProtocolSpecificationParserRuleCall_1_0_0());
					}
					lv_protocols_1_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_1_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getProtocolsProtocolSpecificationParserRuleCall_1_1_0());
					}
					lv_protocols_2_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_2_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		(
			otherlv_3='@'
			{
				newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getCommercialAtKeyword_2_0());
			}
			otherlv_4='endpoints'
			{
				newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getEndpointsKeyword_2_1());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getEndpointsEndpointParserRuleCall_2_3_0());
					}
					lv_endpoints_6_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_6_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getRightParenthesisKeyword_2_4());
			}
		)?
		(
			otherlv_8='@'
			{
				newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getCommercialAtKeyword_3_0());
			}
			otherlv_9='endpoints'
			{
				newLeafNode(otherlv_9, grammarAccess.getOperationAccess().getEndpointsKeyword_3_1());
			}
			otherlv_10='({'
			{
				newLeafNode(otherlv_10, grammarAccess.getOperationAccess().getLeftParenthesisLeftCurlyBracketKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getEndpointsEndpointParserRuleCall_3_3_0());
					}
					lv_endpoints_11_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_11_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_12='})'
			{
				newLeafNode(otherlv_12, grammarAccess.getOperationAccess().getRightCurlyBracketRightParenthesisKeyword_3_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getAspectsImportedServiceAspectParserRuleCall_4_0());
				}
				lv_aspects_13_0=ruleImportedServiceAspect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					add(
						$current,
						"aspects",
						lv_aspects_13_0,
						"de.fhdo.lemma.ServiceDsl.ImportedServiceAspect");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_notImplemented_14_0='noimpl'
				{
					newLeafNode(lv_notImplemented_14_0, grammarAccess.getOperationAccess().getNotImplementedNoimplKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationRule());
					}
					setWithLastConsumed($current, "notImplemented", lv_notImplemented_14_0 != null, "noimpl");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getVisibilityVisibilityEnumRuleCall_6_0());
				}
				lv_visibility_15_0=ruleVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_15_0,
						"de.fhdo.lemma.ServiceDsl.Visibility");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_16_0=RULE_ID
				{
					newLeafNode(lv_name_16_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_16_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_17='('
		{
			newLeafNode(otherlv_17, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_9_0());
				}
				lv_parameters_18_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_18_0,
						"de.fhdo.lemma.ServiceDsl.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_19=','
			{
				newLeafNode(otherlv_19, grammarAccess.getOperationAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_10_1_0());
					}
					lv_parameters_20_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_20_0,
							"de.fhdo.lemma.ServiceDsl.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_21=')'
		{
			newLeafNode(otherlv_21, grammarAccess.getOperationAccess().getRightParenthesisKeyword_11());
		}
		otherlv_22=';'
		{
			newLeafNode(otherlv_22, grammarAccess.getOperationAccess().getSemicolonKeyword_12());
		}
	)
;

// Entry rule entryRuleReferredOperation
entryRuleReferredOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferredOperationRule()); }
	iv_ruleReferredOperation=ruleReferredOperation
	{ $current=$iv_ruleReferredOperation.current; }
	EOF;

// Rule ReferredOperation
ruleReferredOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getReferredOperationAccess().getProtocolsProtocolSpecificationParserRuleCall_0_0_0());
					}
					lv_protocols_0_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferredOperationRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_0_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getReferredOperationAccess().getProtocolsProtocolSpecificationParserRuleCall_0_1_0());
					}
					lv_protocols_1_0=ruleProtocolSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferredOperationRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_1_0,
							"de.fhdo.lemma.ServiceDsl.ProtocolSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
		(
			otherlv_2='@'
			{
				newLeafNode(otherlv_2, grammarAccess.getReferredOperationAccess().getCommercialAtKeyword_1_0());
			}
			otherlv_3='endpoints'
			{
				newLeafNode(otherlv_3, grammarAccess.getReferredOperationAccess().getEndpointsKeyword_1_1());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getReferredOperationAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferredOperationAccess().getEndpointsEndpointParserRuleCall_1_3_0());
					}
					lv_endpoints_5_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferredOperationRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_5_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getReferredOperationAccess().getRightParenthesisKeyword_1_4());
			}
		)?
		(
			otherlv_7='@'
			{
				newLeafNode(otherlv_7, grammarAccess.getReferredOperationAccess().getCommercialAtKeyword_2_0());
			}
			otherlv_8='endpoints'
			{
				newLeafNode(otherlv_8, grammarAccess.getReferredOperationAccess().getEndpointsKeyword_2_1());
			}
			otherlv_9='({'
			{
				newLeafNode(otherlv_9, grammarAccess.getReferredOperationAccess().getLeftParenthesisLeftCurlyBracketKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferredOperationAccess().getEndpointsEndpointParserRuleCall_2_3_0());
					}
					lv_endpoints_10_0=ruleEndpoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferredOperationRule());
						}
						add(
							$current,
							"endpoints",
							lv_endpoints_10_0,
							"de.fhdo.lemma.ServiceDsl.Endpoint");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_11='})'
			{
				newLeafNode(otherlv_11, grammarAccess.getReferredOperationAccess().getRightCurlyBracketRightParenthesisKeyword_2_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReferredOperationAccess().getAspectsImportedServiceAspectParserRuleCall_3_0());
				}
				lv_aspects_12_0=ruleImportedServiceAspect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferredOperationRule());
					}
					add(
						$current,
						"aspects",
						lv_aspects_12_0,
						"de.fhdo.lemma.ServiceDsl.ImportedServiceAspect");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_13='refers'
		{
			newLeafNode(otherlv_13, grammarAccess.getReferredOperationAccess().getRefersKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferredOperationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferredOperationAccess().getOperationOperationCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15=';'
		{
			newLeafNode(otherlv_15, grammarAccess.getReferredOperationAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getAspectsImportedServiceAspectParserRuleCall_0_0());
				}
				lv_aspects_0_0=ruleImportedServiceAspect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					add(
						$current,
						"aspects",
						lv_aspects_0_0,
						"de.fhdo.lemma.ServiceDsl.ImportedServiceAspect");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getCommunicationTypeCommunicationTypeEnumRuleCall_1_0());
				}
				lv_communicationType_1_0=ruleCommunicationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"communicationType",
						lv_communicationType_1_0,
						"de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getExchangePatternExchangePatternEnumRuleCall_2_0());
				}
				lv_exchangePattern_2_0=ruleExchangePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"exchangePattern",
						lv_exchangePattern_2_0,
						"de.fhdo.lemma.technology.TechnologyDsl.ExchangePattern");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_communicatesFault_3_0='fault'
				{
					newLeafNode(lv_communicatesFault_3_0, grammarAccess.getParameterAccess().getCommunicatesFaultFaultKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed($current, "communicatesFault", lv_communicatesFault_3_0 != null, "fault");
				}
			)
		)?
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_optional_5_0='?'
				{
					newLeafNode(lv_optional_5_0, grammarAccess.getParameterAccess().getOptionalQuestionMarkKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_5_0 != null, "?");
				}
			)
		)?
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getColonKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_7_0_0());
					}
					lv_primitiveType_7_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_7_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getImportedTypeImportedTypeParserRuleCall_7_1_0());
					}
					lv_importedType_8_0=ruleImportedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"importedType",
							lv_importedType_8_0,
							"de.fhdo.lemma.ServiceDsl.ImportedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_9='='
			{
				newLeafNode(otherlv_9, grammarAccess.getParameterAccess().getEqualsSignKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getInitializedByOperationPossiblyImportedOperationParserRuleCall_8_1_0());
					}
					lv_initializedByOperation_10_0=rulePossiblyImportedOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"initializedByOperation",
							lv_initializedByOperation_10_0,
							"de.fhdo.lemma.ServiceDsl.PossiblyImportedOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleImportedType
entryRuleImportedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedTypeRule()); }
	iv_ruleImportedType=ruleImportedType
	{ $current=$iv_ruleImportedType.current; }
	EOF;

// Rule ImportedType
ruleImportedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedTypeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getImportedTypeAccess().getImportImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='::'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportedTypeAccess().getColonColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportedTypeAccess().getTypeTypeCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProtocolSpecification
entryRuleProtocolSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolSpecificationRule()); }
	iv_ruleProtocolSpecification=ruleProtocolSpecification
	{ $current=$iv_ruleProtocolSpecification.current; }
	EOF;

// Rule ProtocolSpecification
ruleProtocolSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getProtocolSpecificationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolSpecificationAccess().getCommunicationTypeCommunicationTypeEnumRuleCall_1_0());
				}
				lv_communicationType_1_0=ruleCommunicationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolSpecificationRule());
					}
					set(
						$current,
						"communicationType",
						lv_communicationType_1_0,
						"de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getProtocolSpecificationAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolSpecificationAccess().getProtocolImportedProtocolAndDataFormatParserRuleCall_3_0());
				}
				lv_protocol_3_0=ruleImportedProtocolAndDataFormat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolSpecificationRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_3_0,
						"de.fhdo.lemma.ServiceDsl.ImportedProtocolAndDataFormat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getProtocolSpecificationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleImportedProtocolAndDataFormat
entryRuleImportedProtocolAndDataFormat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedProtocolAndDataFormatRule()); }
	iv_ruleImportedProtocolAndDataFormat=ruleImportedProtocolAndDataFormat
	{ $current=$iv_ruleImportedProtocolAndDataFormat.current; }
	EOF;

// Rule ImportedProtocolAndDataFormat
ruleImportedProtocolAndDataFormat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedProtocolAndDataFormatRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getImportedProtocolAndDataFormatAccess().getImportImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='::'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportedProtocolAndDataFormatAccess().getColonColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedProtocolAndDataFormatRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportedProtocolAndDataFormatAccess().getImportedProtocolProtocolCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getImportedProtocolAndDataFormatAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportedProtocolAndDataFormatRule());
						}
					}
					otherlv_4=RULE_STRING
					{
						newLeafNode(otherlv_4, grammarAccess.getImportedProtocolAndDataFormatAccess().getDataFormatDataFormatCrossReference_3_1_0());
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getImportedProtocolAndDataFormatAccess().getRightParenthesisKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleEndpoint
entryRuleEndpoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndpointRule()); }
	iv_ruleEndpoint=ruleEndpoint
	{ $current=$iv_ruleEndpoint.current; }
	EOF;

// Rule Endpoint
ruleEndpoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEndpointAccess().getProtocolsImportedProtocolAndDataFormatParserRuleCall_0_0());
				}
				lv_protocols_0_0=ruleImportedProtocolAndDataFormat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEndpointRule());
					}
					add(
						$current,
						"protocols",
						lv_protocols_0_0,
						"de.fhdo.lemma.ServiceDsl.ImportedProtocolAndDataFormat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getEndpointAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEndpointAccess().getProtocolsImportedProtocolAndDataFormatParserRuleCall_1_1_0());
					}
					lv_protocols_2_0=ruleImportedProtocolAndDataFormat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEndpointRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_2_0,
							"de.fhdo.lemma.ServiceDsl.ImportedProtocolAndDataFormat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getEndpointAccess().getColonKeyword_2());
		}
		(
			(
				lv_addresses_4_0=RULE_STRING
				{
					newLeafNode(lv_addresses_4_0, grammarAccess.getEndpointAccess().getAddressesSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndpointRule());
					}
					addWithLastConsumed(
						$current,
						"addresses",
						lv_addresses_4_0,
						"de.fhdo.lemma.ServiceDsl.STRING");
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getEndpointAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_addresses_6_0=RULE_STRING
					{
						newLeafNode(lv_addresses_6_0, grammarAccess.getEndpointAccess().getAddressesSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEndpointRule());
						}
						addWithLastConsumed(
							$current,
							"addresses",
							lv_addresses_6_0,
							"de.fhdo.lemma.ServiceDsl.STRING");
					}
				)
			)
		)*
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getEndpointAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleImportedServiceAspect
entryRuleImportedServiceAspect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedServiceAspectRule()); }
	iv_ruleImportedServiceAspect=ruleImportedServiceAspect
	{ $current=$iv_ruleImportedServiceAspect.current; }
	EOF;

// Rule ImportedServiceAspect
ruleImportedServiceAspect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportedServiceAspectAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedServiceAspectRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getImportedServiceAspectAccess().getImportImportCrossReference_1_0());
				}
			)
		)
		otherlv_2='::'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportedServiceAspectAccess().getColonColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedServiceAspectRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportedServiceAspectAccess().getImportedAspectServiceAspectCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getImportedServiceAspectAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImportedServiceAspectAccess().getSinglePropertyValuePrimitiveValueParserRuleCall_4_1_0_0());
						}
						lv_singlePropertyValue_5_0=rulePrimitiveValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportedServiceAspectRule());
							}
							set(
								$current,
								"singlePropertyValue",
								lv_singlePropertyValue_5_0,
								"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getImportedServiceAspectAccess().getValuesPropertyValueAssignmentParserRuleCall_4_1_1_0_0());
							}
							lv_values_6_0=rulePropertyValueAssignment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getImportedServiceAspectRule());
								}
								add(
									$current,
									"values",
									lv_values_6_0,
									"de.fhdo.lemma.ServiceDsl.PropertyValueAssignment");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_7=','
						{
							newLeafNode(otherlv_7, grammarAccess.getImportedServiceAspectAccess().getCommaKeyword_4_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getImportedServiceAspectAccess().getValuesPropertyValueAssignmentParserRuleCall_4_1_1_1_1_0());
								}
								lv_values_8_0=rulePropertyValueAssignment
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getImportedServiceAspectRule());
									}
									add(
										$current,
										"values",
										lv_values_8_0,
										"de.fhdo.lemma.ServiceDsl.PropertyValueAssignment");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getImportedServiceAspectAccess().getRightParenthesisKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRulePropertyValueAssignment
entryRulePropertyValueAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyValueAssignmentRule()); }
	iv_rulePropertyValueAssignment=rulePropertyValueAssignment
	{ $current=$iv_rulePropertyValueAssignment.current; }
	EOF;

// Rule PropertyValueAssignment
rulePropertyValueAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyValueAssignmentRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPropertyValueAssignmentAccess().getPropertyTechnologySpecificPropertyCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getPropertyValueAssignmentAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyValueAssignmentAccess().getValuePrimitiveValueParserRuleCall_0_2_0());
					}
					lv_value_2_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyValueAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyValueAssignmentRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getPropertyValueAssignmentAccess().getPropertyTechnologySpecificPropertyCrossReference_1_0_0());
					}
				)
			)
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getPropertyValueAssignmentAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyValueAssignmentAccess().getValuePrimitiveValueParserRuleCall_1_2_0());
					}
					lv_value_5_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyValueAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getPropertyValueAssignmentAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleQualifiedNameWithAtLeastOneLevel
entryRuleQualifiedNameWithAtLeastOneLevel returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithAtLeastOneLevelRule()); }
	iv_ruleQualifiedNameWithAtLeastOneLevel=ruleQualifiedNameWithAtLeastOneLevel
	{ $current=$iv_ruleQualifiedNameWithAtLeastOneLevel.current.getText(); }
	EOF;

// Rule QualifiedNameWithAtLeastOneLevel
ruleQualifiedNameWithAtLeastOneLevel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameWithAtLeastOneLevelAccess().getIDTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameWithAtLeastOneLevelAccess().getFullStopKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithAtLeastOneLevelAccess().getQualifiedNameParserRuleCall_2());
		}
		this_QualifiedName_2=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnything
entryRuleAnything returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAnythingRule()); }
	iv_ruleAnything=ruleAnything
	{ $current=$iv_ruleAnything.current.getText(); }
	EOF;

// Rule Anything
ruleAnything returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getLeftCurlyBracketKeyword_0());
		}
		    |
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getRightCurlyBracketKeyword_1());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getLessThanSignKeyword_2());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getGreaterThanSignKeyword_3());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getCommaKeyword_4());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getLeftParenthesisKeyword_5());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getRightParenthesisKeyword_6());
		}
		    |
		kw='::'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getColonColonKeyword_7());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFullStopKeyword_8());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getHyphenMinusKeyword_9());
		}
		    |
		kw='--'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getHyphenMinusHyphenMinusKeyword_10());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getSolidusKeyword_11());
		}
		    |
		kw='?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getQuestionMarkKeyword_12());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getColonKeyword_13());
		}
		    |
		kw='@'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getCommercialAtKeyword_14());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getEqualsSignKeyword_15());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getSemicolonKeyword_16());
		}
		    |
		kw='technology'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getTechnologyKeyword_17());
		}
		    |
		kw='types'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getTypesKeyword_18());
		}
		    |
		kw='compatibility'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getCompatibilityKeyword_19());
		}
		    |
		kw='matrix'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getMatrixKeyword_20());
		}
		    |
		kw='protocols'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getProtocolsKeyword_21());
		}
		    |
		kw='service'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getServiceKeyword_22());
		}
		    |
		kw='aspects'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getAspectsKeyword_23());
		}
		    |
		kw='deployment'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDeploymentKeyword_24());
		}
		    |
		kw='technologies'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getTechnologiesKeyword_25());
		}
		    |
		kw='infrastructure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInfrastructureKeyword_26());
		}
		    |
		kw='operation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getOperationKeyword_27());
		}
		    |
		kw='import'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getImportKeyword_28());
		}
		    |
		kw='from'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFromKeyword_29());
		}
		    |
		kw='as'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getAsKeyword_30());
		}
		    |
		kw='data'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDataKeyword_31());
		}
		    |
		kw='formats'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFormatsKeyword_32());
		}
		    |
		kw='default'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDefaultKeyword_33());
		}
		    |
		kw='with'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getWithKeyword_34());
		}
		    |
		kw='format'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFormatKeyword_35());
		}
		    |
		kw='in'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInKeyword_36());
		}
		    |
		kw='out'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getOutKeyword_37());
		}
		    |
		kw='inout'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInoutKeyword_38());
		}
		    |
		kw='sync'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getSyncKeyword_39());
		}
		    |
		kw='async'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getAsyncKeyword_40());
		}
		    |
		kw='primitive'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getPrimitiveKeyword_41());
		}
		    |
		kw='type'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getTypeKeyword_42());
		}
		    |
		kw='based'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getBasedKeyword_43());
		}
		    |
		kw='on'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getOnKeyword_44());
		}
		    |
		kw='collection'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getCollectionKeyword_45());
		}
		    |
		kw='structure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getStructureKeyword_46());
		}
		    |
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getHyphenMinusGreaterThanSignKeyword_47());
		}
		    |
		kw='<-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getLessThanSignHyphenMinusKeyword_48());
		}
		    |
		kw='<->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_49());
		}
		    |
		kw='environments'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getEnvironmentsKeyword_50());
		}
		    |
		kw='properties'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getPropertiesKeyword_51());
		}
		    |
		kw='mandatory'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getMandatoryKeyword_52());
		}
		    |
		kw='singleval'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getSinglevalKeyword_53());
		}
		    |
		kw='microservices'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getMicroservicesKeyword_54());
		}
		    |
		kw='interfaces'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInterfacesKeyword_55());
		}
		    |
		kw='operations'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getOperationsKeyword_56());
		}
		    |
		kw='parameters'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getParametersKeyword_57());
		}
		    |
		kw='fields'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFieldsKeyword_58());
		}
		    |
		kw='exchange_pattern'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getExchange_patternKeyword_59());
		}
		    |
		kw='communication_type'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getCommunication_typeKeyword_60());
		}
		    |
		kw='protocol'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getProtocolKeyword_61());
		}
		    |
		kw='data_format'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getData_formatKeyword_62());
		}
		    |
		kw='aspect'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getAspectKeyword_63());
		}
		    |
		kw='for'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getForKeyword_64());
		}
		    |
		kw='containers'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getContainersKeyword_65());
		}
		    |
		(
			kw='selector'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAnythingAccess().getSelectorKeyword_66_0());
			}
			kw='datatypes'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAnythingAccess().getDatatypesKeyword_66_1());
			}
		)
		    |
		kw='version'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getVersionKeyword_67());
		}
		    |
		kw='context'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getContextKeyword_68());
		}
		    |
		kw='aggregate'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getAggregateKeyword_69());
		}
		    |
		kw='applicationService'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getApplicationServiceKeyword_70());
		}
		    |
		kw='domainEvent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDomainEventKeyword_71());
		}
		    |
		kw='domainService'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDomainServiceKeyword_72());
		}
		    |
		kw='entity'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getEntityKeyword_73());
		}
		    |
		kw='factory'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFactoryKeyword_74());
		}
		    |
		kw='infrastructureService'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInfrastructureServiceKeyword_75());
		}
		    |
		kw='repository'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getRepositoryKeyword_76());
		}
		    |
		kw='specification'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getSpecificationKeyword_77());
		}
		    |
		kw='valueObject'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getValueObjectKeyword_78());
		}
		    |
		kw='extends'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getExtendsKeyword_79());
		}
		    |
		kw='identifier'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getIdentifierKeyword_80());
		}
		    |
		kw='neverEmpty'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getNeverEmptyKeyword_81());
		}
		    |
		kw='part'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getPartKeyword_82());
		}
		    |
		kw='hide'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getHideKeyword_83());
		}
		    |
		kw='immutable'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getImmutableKeyword_84());
		}
		    |
		kw='enum'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getEnumKeyword_85());
		}
		    |
		kw='closure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getClosureKeyword_86());
		}
		    |
		kw='sideEffectFree'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getSideEffectFreeKeyword_87());
		}
		    |
		kw='validator'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getValidatorKeyword_88());
		}
		    |
		kw='function'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFunctionKeyword_89());
		}
		    |
		kw='procedure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getProcedureKeyword_90());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getBooleanKeyword_91());
		}
		    |
		kw='byte'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getByteKeyword_92());
		}
		    |
		kw='char'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getCharKeyword_93());
		}
		    |
		kw='date'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDateKeyword_94());
		}
		    |
		kw='double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getDoubleKeyword_95());
		}
		    |
		kw='float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFloatKeyword_96());
		}
		    |
		kw='int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getIntKeyword_97());
		}
		    |
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getLongKeyword_98());
		}
		    |
		kw='short'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getShortKeyword_99());
		}
		    |
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getStringKeyword_100());
		}
		    |
		kw='internal'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInternalKeyword_101());
		}
		    |
		kw='architecture'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getArchitectureKeyword_102());
		}
		    |
		kw='public'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getPublicKeyword_103());
		}
		    |
		kw='endpoints'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getEndpointsKeyword_104());
		}
		    |
		kw='microservice'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getMicroserviceKeyword_105());
		}
		    |
		kw='required'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getRequiredKeyword_106());
		}
		    |
		kw='requires'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getRequiresKeyword_107());
		}
		    |
		kw='returned'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getReturnedKeyword_108());
		}
		    |
		kw='returns'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getReturnsKeyword_109());
		}
		    |
		kw='typedef'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getTypedefKeyword_110());
		}
		    |
		kw='noimpl'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getNoimplKeyword_111());
		}
		    |
		kw='interface'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getInterfaceKeyword_112());
		}
		    |
		kw='param'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getParamKeyword_113());
		}
		    |
		kw='refers'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getRefersKeyword_114());
		}
		    |
		kw='fault'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFaultKeyword_115());
		}
		    |
		kw='functional'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getFunctionalKeyword_116());
		}
		    |
		kw='utility'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAnythingAccess().getUtilityKeyword_117());
		}
		    |
		this_BOOLEAN_119=RULE_BOOLEAN
		{
			$current.merge(this_BOOLEAN_119);
		}
		{
			newLeafNode(this_BOOLEAN_119, grammarAccess.getAnythingAccess().getBOOLEANTerminalRuleCall_118());
		}
		    |
		this_NUMBER_WITH_TRAILING_PERIOD_120=RULE_NUMBER_WITH_TRAILING_PERIOD
		{
			$current.merge(this_NUMBER_WITH_TRAILING_PERIOD_120);
		}
		{
			newLeafNode(this_NUMBER_WITH_TRAILING_PERIOD_120, grammarAccess.getAnythingAccess().getNUMBER_WITH_TRAILING_PERIODTerminalRuleCall_119());
		}
		    |
		this_BIG_DECIMAL_121=RULE_BIG_DECIMAL
		{
			$current.merge(this_BIG_DECIMAL_121);
		}
		{
			newLeafNode(this_BIG_DECIMAL_121, grammarAccess.getAnythingAccess().getBIG_DECIMALTerminalRuleCall_120());
		}
		    |
		this_ID_122=RULE_ID
		{
			$current.merge(this_ID_122);
		}
		{
			newLeafNode(this_ID_122, grammarAccess.getAnythingAccess().getIDTerminalRuleCall_121());
		}
		    |
		this_STRING_123=RULE_STRING
		{
			$current.merge(this_STRING_123);
		}
		{
			newLeafNode(this_STRING_123, grammarAccess.getAnythingAccess().getSTRINGTerminalRuleCall_122());
		}
		    |
		this_ANY_OTHER_124=RULE_ANY_OTHER
		{
			$current.merge(this_ANY_OTHER_124);
		}
		{
			newLeafNode(this_ANY_OTHER_124, grammarAccess.getAnythingAccess().getANY_OTHERTerminalRuleCall_123());
		}
	)+
;

// Entry rule entryRuleTechnologyImport
entryRuleTechnologyImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyImportRule()); }
	iv_ruleTechnologyImport=ruleTechnologyImport
	{ $current=$iv_ruleTechnologyImport.current; }
	EOF;

// Rule TechnologyImport
ruleTechnologyImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologyImportAccess().getImportKeyword_0());
		}
		otherlv_1='technology'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologyImportAccess().getTechnologyKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getTechnologyImportAccess().getFromKeyword_2());
		}
		(
			(
				lv_importURI_3_0=RULE_STRING
				{
					newLeafNode(lv_importURI_3_0, grammarAccess.getTechnologyImportAccess().getImportURISTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_3_0,
						"de.fhdo.lemma.ServiceDsl.STRING");
				}
			)
		)
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getTechnologyImportAccess().getAsKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getTechnologyImportAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	iv_ruleProtocol=ruleProtocol
	{ $current=$iv_ruleProtocol.current; }
	EOF;

// Rule Protocol
ruleProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getCommunicationTypeCommunicationTypeEnumRuleCall_0_0());
				}
				lv_communicationType_0_0=ruleCommunicationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"communicationType",
						lv_communicationType_0_0,
						"de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProtocolAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProtocolRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='data'
		{
			newLeafNode(otherlv_2, grammarAccess.getProtocolAccess().getDataKeyword_2());
		}
		otherlv_3='formats'
		{
			newLeafNode(otherlv_3, grammarAccess.getProtocolAccess().getFormatsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getDataFormatsDataFormatParserRuleCall_4_0());
				}
				lv_dataFormats_4_0=ruleDataFormat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					add(
						$current,
						"dataFormats",
						lv_dataFormats_4_0,
						"de.fhdo.lemma.technology.TechnologyDsl.DataFormat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getProtocolAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getDataFormatsDataFormatParserRuleCall_5_1_0());
					}
					lv_dataFormats_6_0=ruleDataFormat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"dataFormats",
							lv_dataFormats_6_0,
							"de.fhdo.lemma.technology.TechnologyDsl.DataFormat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(
					lv_default_7_0='default'
					{
						newLeafNode(lv_default_7_0, grammarAccess.getProtocolAccess().getDefaultDefaultKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProtocolRule());
						}
						setWithLastConsumed($current, "default", lv_default_7_0 != null, "default");
					}
				)
			)
			otherlv_8='with'
			{
				newLeafNode(otherlv_8, grammarAccess.getProtocolAccess().getWithKeyword_6_1());
			}
			otherlv_9='format'
			{
				newLeafNode(otherlv_9, grammarAccess.getProtocolAccess().getFormatKeyword_6_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProtocolRule());
						}
					}
					otherlv_10=RULE_STRING
					{
						newLeafNode(otherlv_10, grammarAccess.getProtocolAccess().getDefaultFormatDataFormatCrossReference_6_3_0());
					}
				)
			)
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getProtocolAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleDataFormat
entryRuleDataFormat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFormatRule()); }
	iv_ruleDataFormat=ruleDataFormat
	{ $current=$iv_ruleDataFormat.current; }
	EOF;

// Rule DataFormat
ruleDataFormat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_formatName_0_0=RULE_STRING
			{
				newLeafNode(lv_formatName_0_0, grammarAccess.getDataFormatAccess().getFormatNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDataFormatRule());
				}
				setWithLastConsumed(
					$current,
					"formatName",
					lv_formatName_0_0,
					"de.fhdo.lemma.ServiceDsl.STRING");
			}
		)
	)
;

// Entry rule entryRuleTechnologySpecificPrimitiveType
entryRuleTechnologySpecificPrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificPrimitiveTypeRule()); }
	iv_ruleTechnologySpecificPrimitiveType=ruleTechnologySpecificPrimitiveType
	{ $current=$iv_ruleTechnologySpecificPrimitiveType.current; }
	EOF;

// Rule TechnologySpecificPrimitiveType
ruleTechnologySpecificPrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='primitive'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getPrimitiveKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='based'
			{
				newLeafNode(otherlv_3, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasedKeyword_3_0());
			}
			otherlv_4='on'
			{
				newLeafNode(otherlv_4, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getOnKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_2_0());
					}
					lv_basicBuiltinPrimitiveTypes_5_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
						}
						add(
							$current,
							"basicBuiltinPrimitiveTypes",
							lv_basicBuiltinPrimitiveTypes_5_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_3_1_0());
						}
						lv_basicBuiltinPrimitiveTypes_7_0=rulePrimitiveType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
							}
							add(
								$current,
								"basicBuiltinPrimitiveTypes",
								lv_basicBuiltinPrimitiveTypes_7_0,
								"de.fhdo.lemma.data.DataDsl.PrimitiveType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					lv_default_8_0='default'
					{
						newLeafNode(lv_default_8_0, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getDefaultDefaultKeyword_3_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
						}
						setWithLastConsumed($current, "default", lv_default_8_0 != null, "default");
					}
				)
			)?
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTechnologySpecificCollectionType
entryRuleTechnologySpecificCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificCollectionTypeRule()); }
	iv_ruleTechnologySpecificCollectionType=ruleTechnologySpecificCollectionType
	{ $current=$iv_ruleTechnologySpecificCollectionType.current; }
	EOF;

// Rule TechnologySpecificCollectionType
ruleTechnologySpecificCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='collection'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologySpecificCollectionTypeAccess().getCollectionKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologySpecificCollectionTypeAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologySpecificCollectionTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificCollectionTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologySpecificCollectionTypeAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleTechnologySpecificDataStructure
entryRuleTechnologySpecificDataStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificDataStructureRule()); }
	iv_ruleTechnologySpecificDataStructure=ruleTechnologySpecificDataStructure
	{ $current=$iv_ruleTechnologySpecificDataStructure.current; }
	EOF;

// Rule TechnologySpecificDataStructure
ruleTechnologySpecificDataStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='structure'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologySpecificDataStructureAccess().getStructureKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologySpecificDataStructureAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologySpecificDataStructureAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificDataStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologySpecificDataStructureAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePossiblyImportedTechnologySpecificType
entryRulePossiblyImportedTechnologySpecificType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPossiblyImportedTechnologySpecificTypeRule()); }
	iv_rulePossiblyImportedTechnologySpecificType=rulePossiblyImportedTechnologySpecificType
	{ $current=$iv_rulePossiblyImportedTechnologySpecificType.current; }
	EOF;

// Rule PossiblyImportedTechnologySpecificType
rulePossiblyImportedTechnologySpecificType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPossiblyImportedTechnologySpecificTypeRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getImportTechnologyImportCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPossiblyImportedTechnologySpecificTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getTypeTypeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompatibilityMatrixEntry
entryRuleCompatibilityMatrixEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompatibilityMatrixEntryRule()); }
	iv_ruleCompatibilityMatrixEntry=ruleCompatibilityMatrixEntry
	{ $current=$iv_ruleCompatibilityMatrixEntry.current; }
	EOF;

// Rule CompatibilityMatrixEntry
ruleCompatibilityMatrixEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_0_0());
				}
				lv_compatibleTypes_0_0=rulePossiblyImportedTechnologySpecificType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
					}
					add(
						$current,
						"compatibleTypes",
						lv_compatibleTypes_0_0,
						"de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getCompatibilityMatrixEntryAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_1_1_0());
					}
					lv_compatibleTypes_2_0=rulePossiblyImportedTechnologySpecificType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
						}
						add(
							$current,
							"compatibleTypes",
							lv_compatibleTypes_2_0,
							"de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getDirectionCompatibilityDirectionEnumRuleCall_2_0());
				}
				lv_direction_3_0=ruleCompatibilityDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
					}
					set(
						$current,
						"direction",
						lv_direction_3_0,
						"de.fhdo.lemma.technology.TechnologyDsl.CompatibilityDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getMappingTypePossiblyImportedTechnologySpecificTypeParserRuleCall_3_0());
				}
				lv_mappingType_4_0=rulePossiblyImportedTechnologySpecificType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
					}
					set(
						$current,
						"mappingType",
						lv_mappingType_4_0,
						"de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompatibilityMatrixEntryAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDeploymentTechnology
entryRuleDeploymentTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeploymentTechnologyRule()); }
	iv_ruleDeploymentTechnology=ruleDeploymentTechnology
	{ $current=$iv_ruleDeploymentTechnology.current; }
	EOF;

// Rule DeploymentTechnology
ruleDeploymentTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeploymentTechnologyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeploymentTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeploymentTechnologyAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operation'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeploymentTechnologyAccess().getOperationKeyword_2());
		}
		otherlv_3='environments'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeploymentTechnologyAccess().getEnvironmentsKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getDeploymentTechnologyAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0());
				}
				lv_operationEnvironments_5_0=ruleOperationEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentTechnologyRule());
					}
					add(
						$current,
						"operationEnvironments",
						lv_operationEnvironments_5_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getDeploymentTechnologyAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeploymentTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0());
					}
					lv_operationEnvironments_7_0=ruleOperationEnvironment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeploymentTechnologyRule());
						}
						add(
							$current,
							"operationEnvironments",
							lv_operationEnvironments_7_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeploymentTechnologyAccess().getSemicolonKeyword_7());
		}
		(
			otherlv_9='service'
			{
				newLeafNode(otherlv_9, grammarAccess.getDeploymentTechnologyAccess().getServiceKeyword_8_0());
			}
			otherlv_10='properties'
			{
				newLeafNode(otherlv_10, grammarAccess.getDeploymentTechnologyAccess().getPropertiesKeyword_8_1());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getDeploymentTechnologyAccess().getLeftCurlyBracketKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeploymentTechnologyAccess().getServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0());
					}
					lv_serviceProperties_12_0=ruleTechnologySpecificProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeploymentTechnologyRule());
						}
						add(
							$current,
							"serviceProperties",
							lv_serviceProperties_12_0,
							"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getDeploymentTechnologyAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getDeploymentTechnologyAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleInfrastructureTechnology
entryRuleInfrastructureTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfrastructureTechnologyRule()); }
	iv_ruleInfrastructureTechnology=ruleInfrastructureTechnology
	{ $current=$iv_ruleInfrastructureTechnology.current; }
	EOF;

// Rule InfrastructureTechnology
ruleInfrastructureTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInfrastructureTechnologyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfrastructureTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getInfrastructureTechnologyAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operation'
		{
			newLeafNode(otherlv_2, grammarAccess.getInfrastructureTechnologyAccess().getOperationKeyword_2());
		}
		otherlv_3='environments'
		{
			newLeafNode(otherlv_3, grammarAccess.getInfrastructureTechnologyAccess().getEnvironmentsKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getInfrastructureTechnologyAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInfrastructureTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0());
				}
				lv_operationEnvironments_5_0=ruleOperationEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInfrastructureTechnologyRule());
					}
					add(
						$current,
						"operationEnvironments",
						lv_operationEnvironments_5_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getInfrastructureTechnologyAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInfrastructureTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0());
					}
					lv_operationEnvironments_7_0=ruleOperationEnvironment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInfrastructureTechnologyRule());
						}
						add(
							$current,
							"operationEnvironments",
							lv_operationEnvironments_7_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getInfrastructureTechnologyAccess().getSemicolonKeyword_7());
		}
		(
			otherlv_9='service'
			{
				newLeafNode(otherlv_9, grammarAccess.getInfrastructureTechnologyAccess().getServiceKeyword_8_0());
			}
			otherlv_10='properties'
			{
				newLeafNode(otherlv_10, grammarAccess.getInfrastructureTechnologyAccess().getPropertiesKeyword_8_1());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getInfrastructureTechnologyAccess().getLeftCurlyBracketKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInfrastructureTechnologyAccess().getServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0());
					}
					lv_serviceProperties_12_0=ruleTechnologySpecificProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInfrastructureTechnologyRule());
						}
						add(
							$current,
							"serviceProperties",
							lv_serviceProperties_12_0,
							"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getInfrastructureTechnologyAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getInfrastructureTechnologyAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleOperationEnvironment
entryRuleOperationEnvironment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationEnvironmentRule()); }
	iv_ruleOperationEnvironment=ruleOperationEnvironment
	{ $current=$iv_ruleOperationEnvironment.current; }
	EOF;

// Rule OperationEnvironment
ruleOperationEnvironment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_environmentName_0_0=RULE_STRING
				{
					newLeafNode(lv_environmentName_0_0, grammarAccess.getOperationEnvironmentAccess().getEnvironmentNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationEnvironmentRule());
					}
					setWithLastConsumed(
						$current,
						"environmentName",
						lv_environmentName_0_0,
						"de.fhdo.lemma.ServiceDsl.STRING");
				}
			)
		)
		(
			(
				lv_default_1_0='default'
				{
					newLeafNode(lv_default_1_0, grammarAccess.getOperationEnvironmentAccess().getDefaultDefaultKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationEnvironmentRule());
					}
					setWithLastConsumed($current, "default", lv_default_1_0 != null, "default");
				}
			)
		)?
	)
;

// Entry rule entryRuleTechnologySpecificProperty
entryRuleTechnologySpecificProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificPropertyRule()); }
	iv_ruleTechnologySpecificProperty=ruleTechnologySpecificProperty
	{ $current=$iv_ruleTechnologySpecificProperty.current; }
	EOF;

// Rule TechnologySpecificProperty
ruleTechnologySpecificProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getTypePrimitiveTypeParserRuleCall_0_0());
				}
				lv_type_0_0=rulePrimitiveType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"de.fhdo.lemma.data.DataDsl.PrimitiveType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTechnologySpecificPropertyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getTechnologySpecificPropertyAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getDefaultValuePrimitiveValueParserRuleCall_2_1_0());
					}
					lv_defaultValue_3_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
						}
						set(
							$current,
							"defaultValue",
							lv_defaultValue_3_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='<'
			{
				newLeafNode(otherlv_4, grammarAccess.getTechnologySpecificPropertyAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getFeaturesPropertyFeatureEnumRuleCall_3_1_0());
					}
					lv_features_5_0=rulePropertyFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
						}
						add(
							$current,
							"features",
							lv_features_5_0,
							"de.fhdo.lemma.technology.TechnologyDsl.PropertyFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTechnologySpecificPropertyAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getFeaturesPropertyFeatureEnumRuleCall_3_2_1_0());
						}
						lv_features_7_0=rulePropertyFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
							}
							add(
								$current,
								"features",
								lv_features_7_0,
								"de.fhdo.lemma.technology.TechnologyDsl.PropertyFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='>'
			{
				newLeafNode(otherlv_8, grammarAccess.getTechnologySpecificPropertyAccess().getGreaterThanSignKeyword_3_3());
			}
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getTechnologySpecificPropertyAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleServiceAspectPointcut
entryRuleServiceAspectPointcut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceAspectPointcutRule()); }
	iv_ruleServiceAspectPointcut=ruleServiceAspectPointcut
	{ $current=$iv_ruleServiceAspectPointcut.current; }
	EOF;

// Rule ServiceAspectPointcut
ruleServiceAspectPointcut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_forExchangePattern_0_0='exchange_pattern'
					{
						newLeafNode(lv_forExchangePattern_0_0, grammarAccess.getServiceAspectPointcutAccess().getForExchangePatternExchange_patternKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forExchangePattern", lv_forExchangePattern_0_0 != null, "exchange_pattern");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectPointcutAccess().getExchangePatternExchangePatternEnumRuleCall_0_2_0());
					}
					lv_exchangePattern_2_0=ruleExchangePattern
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutRule());
						}
						set(
							$current,
							"exchangePattern",
							lv_exchangePattern_2_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ExchangePattern");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_forCommunicationType_3_0='communication_type'
					{
						newLeafNode(lv_forCommunicationType_3_0, grammarAccess.getServiceAspectPointcutAccess().getForCommunicationTypeCommunication_typeKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forCommunicationType", lv_forCommunicationType_3_0 != null, "communication_type");
					}
				)
			)
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectPointcutAccess().getCommunicationTypeCommunicationTypeEnumRuleCall_1_2_0());
					}
					lv_communicationType_5_0=ruleCommunicationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutRule());
						}
						set(
							$current,
							"communicationType",
							lv_communicationType_5_0,
							"de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_forProtocol_6_0='protocol'
					{
						newLeafNode(lv_forProtocol_6_0, grammarAccess.getServiceAspectPointcutAccess().getForProtocolProtocolKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forProtocol", lv_forProtocol_6_0 != null, "protocol");
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getServiceAspectPointcutAccess().getProtocolProtocolCrossReference_2_2_0());
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_forDataFormat_9_0='data_format'
					{
						newLeafNode(lv_forDataFormat_9_0, grammarAccess.getServiceAspectPointcutAccess().getForDataFormatData_formatKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forDataFormat", lv_forDataFormat_9_0 != null, "data_format");
					}
				)
			)
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
					}
					otherlv_11=RULE_STRING
					{
						newLeafNode(otherlv_11, grammarAccess.getServiceAspectPointcutAccess().getDataFormatDataFormatCrossReference_3_2_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleServiceAspectPointcutSelector
entryRuleServiceAspectPointcutSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceAspectPointcutSelectorRule()); }
	iv_ruleServiceAspectPointcutSelector=ruleServiceAspectPointcutSelector
	{ $current=$iv_ruleServiceAspectPointcutSelector.current; }
	EOF;

// Rule ServiceAspectPointcutSelector
ruleServiceAspectPointcutSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='selector'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAspectPointcutSelectorAccess().getSelectorKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getServiceAspectPointcutSelectorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAspectPointcutSelectorAccess().getPointcutsServiceAspectPointcutParserRuleCall_2_0());
				}
				lv_pointcuts_2_0=ruleServiceAspectPointcut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutSelectorRule());
					}
					add(
						$current,
						"pointcuts",
						lv_pointcuts_2_0,
						"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getServiceAspectPointcutSelectorAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectPointcutSelectorAccess().getPointcutsServiceAspectPointcutParserRuleCall_3_1_0());
					}
					lv_pointcuts_4_0=ruleServiceAspectPointcut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutSelectorRule());
						}
						add(
							$current,
							"pointcuts",
							lv_pointcuts_4_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceAspectPointcutSelectorAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getServiceAspectPointcutSelectorAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleServiceAspect
entryRuleServiceAspect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceAspectRule()); }
	iv_ruleServiceAspect=ruleServiceAspect
	{ $current=$iv_ruleServiceAspect.current; }
	EOF;

// Rule ServiceAspect
ruleServiceAspect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='aspect'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAspectAccess().getAspectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAspectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceAspectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getServiceAspectAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleAspectFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getServiceAspectAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleAspectFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getServiceAspectAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		otherlv_7='for'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceAspectAccess().getForKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAspectAccess().getJoinPointsServiceJoinPointTypeEnumRuleCall_4_0());
				}
				lv_joinPoints_8_0=ruleServiceJoinPointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
					}
					add(
						$current,
						"joinPoints",
						lv_joinPoints_8_0,
						"de.fhdo.lemma.technology.TechnologyDsl.ServiceJoinPointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getServiceAspectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectAccess().getJoinPointsServiceJoinPointTypeEnumRuleCall_5_1_0());
					}
					lv_joinPoints_10_0=ruleServiceJoinPointType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
						}
						add(
							$current,
							"joinPoints",
							lv_joinPoints_10_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ServiceJoinPointType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getServiceAspectAccess().getLeftCurlyBracketKeyword_6_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAspectAccess().getPointcutSelectorsServiceAspectPointcutSelectorParserRuleCall_6_0_1_0());
						}
						lv_pointcutSelectors_12_0=ruleServiceAspectPointcutSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
							}
							add(
								$current,
								"pointcutSelectors",
								lv_pointcutSelectors_12_0,
								"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcutSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAspectAccess().getPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0());
						}
						lv_properties_13_0=ruleTechnologySpecificProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
							}
							add(
								$current,
								"properties",
								lv_properties_13_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_14='}'
				{
					newLeafNode(otherlv_14, grammarAccess.getServiceAspectAccess().getRightCurlyBracketKeyword_6_0_3());
				}
			)
			    |
			otherlv_15=';'
			{
				newLeafNode(otherlv_15, grammarAccess.getServiceAspectAccess().getSemicolonKeyword_6_1());
			}
		)
	)
;

// Entry rule entryRuleOperationAspectPointcut
entryRuleOperationAspectPointcut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAspectPointcutRule()); }
	iv_ruleOperationAspectPointcut=ruleOperationAspectPointcut
	{ $current=$iv_ruleOperationAspectPointcut.current; }
	EOF;

// Rule OperationAspectPointcut
ruleOperationAspectPointcut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_forTechnology_0_0='technology'
				{
					newLeafNode(lv_forTechnology_0_0, grammarAccess.getOperationAspectPointcutAccess().getForTechnologyTechnologyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAspectPointcutRule());
					}
					setWithLastConsumed($current, "forTechnology", lv_forTechnology_0_0 != null, "technology");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAspectPointcutAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAspectPointcutRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getOperationAspectPointcutAccess().getTechnologyEObjectCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleOperationAspectPointcutSelector
entryRuleOperationAspectPointcutSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAspectPointcutSelectorRule()); }
	iv_ruleOperationAspectPointcutSelector=ruleOperationAspectPointcutSelector
	{ $current=$iv_ruleOperationAspectPointcutSelector.current; }
	EOF;

// Rule OperationAspectPointcutSelector
ruleOperationAspectPointcutSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='selector'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAspectPointcutSelectorAccess().getSelectorKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAspectPointcutSelectorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAspectPointcutSelectorAccess().getPointcutsOperationAspectPointcutParserRuleCall_2_0());
				}
				lv_pointcuts_2_0=ruleOperationAspectPointcut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationAspectPointcutSelectorRule());
					}
					add(
						$current,
						"pointcuts",
						lv_pointcuts_2_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getOperationAspectPointcutSelectorAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAspectPointcutSelectorAccess().getPointcutsOperationAspectPointcutParserRuleCall_3_1_0());
					}
					lv_pointcuts_4_0=ruleOperationAspectPointcut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationAspectPointcutSelectorRule());
						}
						add(
							$current,
							"pointcuts",
							lv_pointcuts_4_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationAspectPointcutSelectorAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getOperationAspectPointcutSelectorAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOperationAspect
entryRuleOperationAspect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAspectRule()); }
	iv_ruleOperationAspect=ruleOperationAspect
	{ $current=$iv_ruleOperationAspect.current; }
	EOF;

// Rule OperationAspect
ruleOperationAspect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='aspect'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAspectAccess().getAspectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOperationAspectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAspectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getOperationAspectAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleAspectFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getOperationAspectAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleAspectFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getOperationAspectAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		otherlv_7='for'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationAspectAccess().getForKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAspectAccess().getJoinPointsOperationJoinPointTypeEnumRuleCall_4_0());
				}
				lv_joinPoints_8_0=ruleOperationJoinPointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
					}
					add(
						$current,
						"joinPoints",
						lv_joinPoints_8_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationJoinPointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getOperationAspectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAspectAccess().getJoinPointsOperationJoinPointTypeEnumRuleCall_5_1_0());
					}
					lv_joinPoints_10_0=ruleOperationJoinPointType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
						}
						add(
							$current,
							"joinPoints",
							lv_joinPoints_10_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationJoinPointType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getOperationAspectAccess().getLeftCurlyBracketKeyword_6_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAspectAccess().getPointcutSelectorsOperationAspectPointcutSelectorParserRuleCall_6_0_1_0());
						}
						lv_pointcutSelectors_12_0=ruleOperationAspectPointcutSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
							}
							add(
								$current,
								"pointcutSelectors",
								lv_pointcutSelectors_12_0,
								"de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcutSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAspectAccess().getPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0());
						}
						lv_properties_13_0=ruleTechnologySpecificProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
							}
							add(
								$current,
								"properties",
								lv_properties_13_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_14='}'
				{
					newLeafNode(otherlv_14, grammarAccess.getOperationAspectAccess().getRightCurlyBracketKeyword_6_0_3());
				}
			)
			    |
			otherlv_15=';'
			{
				newLeafNode(otherlv_15, grammarAccess.getOperationAspectAccess().getSemicolonKeyword_6_1());
			}
		)
	)
;

// Entry rule entryRuleComplexTypeImport
entryRuleComplexTypeImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeImportRule()); }
	iv_ruleComplexTypeImport=ruleComplexTypeImport
	{ $current=$iv_ruleComplexTypeImport.current; }
	EOF;

// Rule ComplexTypeImport
ruleComplexTypeImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getComplexTypeImportAccess().getImportKeyword_0());
		}
		otherlv_1='datatypes'
		{
			newLeafNode(otherlv_1, grammarAccess.getComplexTypeImportAccess().getDatatypesKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getComplexTypeImportAccess().getFromKeyword_2());
		}
		(
			(
				lv_importURI_3_0=RULE_STRING
				{
					newLeafNode(lv_importURI_3_0, grammarAccess.getComplexTypeImportAccess().getImportURISTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexTypeImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_3_0,
						"de.fhdo.lemma.ServiceDsl.STRING");
				}
			)
		)
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getComplexTypeImportAccess().getAsKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getComplexTypeImportAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexTypeImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current; }
	EOF;

// Rule Version
ruleVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='version'
		{
			newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVersionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVersionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVersionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVersionAccess().getComplexTypesComplexTypeParserRuleCall_3_0_0());
					}
					lv_complexTypes_3_0=ruleComplexType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVersionRule());
						}
						add(
							$current,
							"complexTypes",
							lv_complexTypes_3_0,
							"de.fhdo.lemma.data.DataDsl.ComplexType");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVersionAccess().getContextsContextParserRuleCall_3_1_0());
					}
					lv_contexts_4_0=ruleContext
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVersionRule());
						}
						add(
							$current,
							"contexts",
							lv_contexts_4_0,
							"de.fhdo.lemma.data.DataDsl.Context");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVersionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getContextAccess().getContextKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContextAccess().getComplexTypesComplexTypeParserRuleCall_3_0());
				}
				lv_complexTypes_3_0=ruleComplexType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextRule());
					}
					add(
						$current,
						"complexTypes",
						lv_complexTypes_3_0,
						"de.fhdo.lemma.data.DataDsl.ComplexType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	iv_ruleComplexType=ruleComplexType
	{ $current=$iv_ruleComplexType.current; }
	EOF;

// Rule ComplexType
ruleComplexType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComplexTypeAccess().getDataStructureParserRuleCall_0());
		}
		this_DataStructure_0=ruleDataStructure
		{
			$current = $this_DataStructure_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexTypeAccess().getCollectionTypeParserRuleCall_1());
		}
		this_CollectionType_1=ruleCollectionType
		{
			$current = $this_CollectionType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexTypeAccess().getEnumerationParserRuleCall_2());
		}
		this_Enumeration_2=ruleEnumeration
		{
			$current = $this_Enumeration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataStructure
entryRuleDataStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataStructureRule()); }
	iv_ruleDataStructure=ruleDataStructure
	{ $current=$iv_ruleDataStructure.current; }
	EOF;

// Rule DataStructure
ruleDataStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='structure'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataStructureAccess().getStructureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataStructureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataStructureAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataStructureAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleComplexTypeFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataStructureRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDataStructureAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataStructureAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleComplexTypeFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataStructureRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataStructureAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		(
			otherlv_7='extends'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataStructureAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataStructureRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataStructureAccess().getSuperDataStructureCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getDataStructureAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_5_0_0_0());
						}
						lv_dataFields_10_0=ruleDataField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataStructureRule());
							}
							add(
								$current,
								"dataFields",
								lv_dataFields_10_0,
								"de.fhdo.lemma.data.DataDsl.DataField");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDataStructureAccess().getOperationsDataOperationParserRuleCall_5_0_1_0());
						}
						lv_operations_11_0=ruleDataOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataStructureRule());
							}
							add(
								$current,
								"operations",
								lv_operations_11_0,
								"de.fhdo.lemma.data.DataDsl.DataOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDataStructureAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_5_1_1_0_0());
							}
							lv_dataFields_13_0=ruleDataField
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataStructureRule());
								}
								add(
									$current,
									"dataFields",
									lv_dataFields_13_0,
									"de.fhdo.lemma.data.DataDsl.DataField");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getDataStructureAccess().getOperationsDataOperationParserRuleCall_5_1_1_1_0());
							}
							lv_operations_14_0=ruleDataOperation
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataStructureRule());
								}
								add(
									$current,
									"operations",
									lv_operations_14_0,
									"de.fhdo.lemma.data.DataDsl.DataOperation");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getDataStructureAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCollectionType
entryRuleCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeRule()); }
	iv_ruleCollectionType=ruleCollectionType
	{ $current=$iv_ruleCollectionType.current; }
	EOF;

// Rule CollectionType
ruleCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='collection'
			{
				newLeafNode(otherlv_0, grammarAccess.getCollectionTypeAccess().getCollectionKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getCollectionTypeAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCollectionTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getCollectionTypeAccess().getLeftCurlyBracketKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeAccess().getDataFieldsDataFieldParserRuleCall_0_3_0());
					}
					lv_dataFields_3_0=ruleDataField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
						}
						add(
							$current,
							"dataFields",
							lv_dataFields_3_0,
							"de.fhdo.lemma.data.DataDsl.DataField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getCollectionTypeAccess().getCommaKeyword_0_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionTypeAccess().getDataFieldsDataFieldParserRuleCall_0_4_1_0());
						}
						lv_dataFields_5_0=ruleDataField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
							}
							add(
								$current,
								"dataFields",
								lv_dataFields_5_0,
								"de.fhdo.lemma.data.DataDsl.DataField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getCollectionTypeAccess().getRightCurlyBracketKeyword_0_5());
			}
		)
		    |
		(
			otherlv_7='collection'
			{
				newLeafNode(otherlv_7, grammarAccess.getCollectionTypeAccess().getCollectionKeyword_1_0());
			}
			(
				(
					lv_name_8_0=RULE_ID
					{
						newLeafNode(lv_name_8_0, grammarAccess.getCollectionTypeAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCollectionTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getCollectionTypeAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_1_3_0());
					}
					lv_primitiveType_10_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_10_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getCollectionTypeAccess().getRightCurlyBracketKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleDataField
entryRuleDataField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFieldRule()); }
	iv_ruleDataField=ruleDataField
	{ $current=$iv_ruleDataField.current; }
	EOF;

// Rule DataField
ruleDataField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hidden_0_0='hide'
				{
					newLeafNode(lv_hidden_0_0, grammarAccess.getDataFieldAccess().getHiddenHideKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFieldRule());
					}
					setWithLastConsumed($current, "hidden", lv_hidden_0_0 != null, "hide");
				}
			)
		)?
		(
			(
				lv_immutable_1_0='immutable'
				{
					newLeafNode(lv_immutable_1_0, grammarAccess.getDataFieldAccess().getImmutableImmutableKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFieldRule());
					}
					setWithLastConsumed($current, "immutable", lv_immutable_1_0 != null, "immutable");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_2_0_0());
					}
					lv_primitiveType_2_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_2_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataFieldRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getComplexTypeComplexTypeCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getImportedComplexTypeImportedComplexTypeParserRuleCall_2_2_0());
					}
					lv_importedComplexType_4_0=ruleImportedComplexType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						set(
							$current,
							"importedComplexType",
							lv_importedComplexType_4_0,
							"de.fhdo.lemma.data.DataDsl.ImportedComplexType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getDataFieldAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getDataFieldAccess().getEqualsSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getInitializationValuePrimitiveValueParserRuleCall_4_1_0());
					}
					lv_initializationValue_7_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						set(
							$current,
							"initializationValue",
							lv_initializationValue_7_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='<'
			{
				newLeafNode(otherlv_8, grammarAccess.getDataFieldAccess().getLessThanSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getFeaturesDataFieldFeatureEnumRuleCall_5_1_0());
					}
					lv_features_9_0=ruleDataFieldFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						add(
							$current,
							"features",
							lv_features_9_0,
							"de.fhdo.lemma.data.DataDsl.DataFieldFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getDataFieldAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataFieldAccess().getFeaturesDataFieldFeatureEnumRuleCall_5_2_1_0());
						}
						lv_features_11_0=ruleDataFieldFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataFieldRule());
							}
							add(
								$current,
								"features",
								lv_features_11_0,
								"de.fhdo.lemma.data.DataDsl.DataFieldFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='>'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataFieldAccess().getGreaterThanSignKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleComplexTypeFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getEnumerationAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnumerationAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleComplexTypeFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnumerationRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumerationAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationAccess().getFieldsEnumerationFieldParserRuleCall_4_0());
				}
				lv_fields_8_0=ruleEnumerationField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationRule());
					}
					add(
						$current,
						"fields",
						lv_fields_8_0,
						"de.fhdo.lemma.data.DataDsl.EnumerationField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getEnumerationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationAccess().getFieldsEnumerationFieldParserRuleCall_5_1_0());
					}
					lv_fields_10_0=ruleEnumerationField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationRule());
						}
						add(
							$current,
							"fields",
							lv_fields_10_0,
							"de.fhdo.lemma.data.DataDsl.EnumerationField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEnumerationField
entryRuleEnumerationField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationFieldRule()); }
	iv_ruleEnumerationField=ruleEnumerationField
	{ $current=$iv_ruleEnumerationField.current; }
	EOF;

// Rule EnumerationField
ruleEnumerationField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumerationFieldAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumerationFieldAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationFieldAccess().getInitializationValuePrimitiveValueParserRuleCall_1_1_0());
					}
					lv_initializationValue_2_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationFieldRule());
						}
						set(
							$current,
							"initializationValue",
							lv_initializationValue_2_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumerationFieldAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleDataOperation
entryRuleDataOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOperationRule()); }
	iv_ruleDataOperation=ruleDataOperation
	{ $current=$iv_ruleDataOperation.current; }
	EOF;

// Rule DataOperation
ruleDataOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hidden_0_0='hide'
				{
					newLeafNode(lv_hidden_0_0, grammarAccess.getDataOperationAccess().getHiddenHideKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOperationRule());
					}
					setWithLastConsumed($current, "hidden", lv_hidden_0_0 != null, "hide");
				}
			)
		)?
		(
			(
				(
					lv_hasNoReturnType_1_0='procedure'
					{
						newLeafNode(lv_hasNoReturnType_1_0, grammarAccess.getDataOperationAccess().getHasNoReturnTypeProcedureKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataOperationRule());
						}
						setWithLastConsumed($current, "hasNoReturnType", lv_hasNoReturnType_1_0 != null, "procedure");
					}
				)
			)
			    |
			(
				otherlv_2='function'
				{
					newLeafNode(otherlv_2, grammarAccess.getDataOperationAccess().getFunctionKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDataOperationAccess().getPrimitiveReturnTypePrimitiveTypeParserRuleCall_1_1_1_0_0());
							}
							lv_primitiveReturnType_3_0=rulePrimitiveType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataOperationRule());
								}
								set(
									$current,
									"primitiveReturnType",
									lv_primitiveReturnType_3_0,
									"de.fhdo.lemma.data.DataDsl.PrimitiveType");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDataOperationRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getDataOperationAccess().getComplexReturnTypeComplexTypeCrossReference_1_1_1_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getDataOperationAccess().getImportedComplexReturnTypeImportedComplexTypeParserRuleCall_1_1_1_2_0());
							}
							lv_importedComplexReturnType_5_0=ruleImportedComplexType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataOperationRule());
								}
								set(
									$current,
									"importedComplexReturnType",
									lv_importedComplexReturnType_5_0,
									"de.fhdo.lemma.data.DataDsl.ImportedComplexType");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
		)
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getDataOperationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getDataOperationAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationAccess().getParametersDataOperationParameterParserRuleCall_3_1_0());
					}
					lv_parameters_8_0=ruleDataOperationParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_8_0,
							"de.fhdo.lemma.data.DataDsl.DataOperationParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getDataOperationAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataOperationAccess().getParametersDataOperationParameterParserRuleCall_3_2_1_0());
						}
						lv_parameters_10_0=ruleDataOperationParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataOperationRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_10_0,
								"de.fhdo.lemma.data.DataDsl.DataOperationParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getDataOperationAccess().getRightParenthesisKeyword_3_3());
			}
		)?
		(
			otherlv_12='<'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataOperationAccess().getLessThanSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationAccess().getFeaturesDataOperationFeatureEnumRuleCall_4_1_0());
					}
					lv_features_13_0=ruleDataOperationFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationRule());
						}
						add(
							$current,
							"features",
							lv_features_13_0,
							"de.fhdo.lemma.data.DataDsl.DataOperationFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getDataOperationAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataOperationAccess().getFeaturesDataOperationFeatureEnumRuleCall_4_2_1_0());
						}
						lv_features_15_0=ruleDataOperationFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataOperationRule());
							}
							add(
								$current,
								"features",
								lv_features_15_0,
								"de.fhdo.lemma.data.DataDsl.DataOperationFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='>'
			{
				newLeafNode(otherlv_16, grammarAccess.getDataOperationAccess().getGreaterThanSignKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleDataOperationParameter
entryRuleDataOperationParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOperationParameterRule()); }
	iv_ruleDataOperationParameter=ruleDataOperationParameter
	{ $current=$iv_ruleDataOperationParameter.current; }
	EOF;

// Rule DataOperationParameter
ruleDataOperationParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationParameterAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_0_0_0());
					}
					lv_primitiveType_0_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationParameterRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_0_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataOperationParameterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataOperationParameterAccess().getComplexTypeComplexTypeCrossReference_0_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationParameterAccess().getImportedComplexTypeImportedComplexTypeParserRuleCall_0_2_0());
					}
					lv_importedComplexType_2_0=ruleImportedComplexType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationParameterRule());
						}
						set(
							$current,
							"importedComplexType",
							lv_importedComplexType_2_0,
							"de.fhdo.lemma.data.DataDsl.ImportedComplexType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDataOperationParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOperationParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveValue
entryRulePrimitiveValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveValueRule()); }
	iv_rulePrimitiveValue=rulePrimitiveValue
	{ $current=$iv_rulePrimitiveValue.current; }
	EOF;

// Rule PrimitiveValue
rulePrimitiveValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_numericValue_0_0=RULE_BIG_DECIMAL
				{
					newLeafNode(lv_numericValue_0_0, grammarAccess.getPrimitiveValueAccess().getNumericValueBIG_DECIMALTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveValueRule());
					}
					setWithLastConsumed(
						$current,
						"numericValue",
						lv_numericValue_0_0,
						"de.fhdo.lemma.data.DataDsl.BIG_DECIMAL");
				}
			)
		)
		    |
		(
			(
				lv_booleanValue_1_0=RULE_BOOLEAN
				{
					newLeafNode(lv_booleanValue_1_0, grammarAccess.getPrimitiveValueAccess().getBooleanValueBOOLEANTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveValueRule());
					}
					setWithLastConsumed(
						$current,
						"booleanValue",
						lv_booleanValue_1_0,
						"de.fhdo.lemma.data.DataDsl.BOOLEAN");
				}
			)
		)
		    |
		(
			(
				lv_stringValue_2_0=RULE_STRING
				{
					newLeafNode(lv_stringValue_2_0, grammarAccess.getPrimitiveValueAccess().getStringValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveValueRule());
					}
					setWithLastConsumed(
						$current,
						"stringValue",
						lv_stringValue_2_0,
						"de.fhdo.lemma.ServiceDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleImportedComplexType
entryRuleImportedComplexType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedComplexTypeRule()); }
	iv_ruleImportedComplexType=ruleImportedComplexType
	{ $current=$iv_ruleImportedComplexType.current; }
	EOF;

// Rule ImportedComplexType
ruleImportedComplexType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedComplexTypeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getImportedComplexTypeAccess().getImportComplexTypeImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='::'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportedComplexTypeAccess().getColonColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedComplexTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportedComplexTypeAccess().getImportedTypeTypeCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current; }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveBooleanAction_0_0(),
						$current);
				}
			)
			otherlv_1='boolean'
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveByteAction_1_0(),
						$current);
				}
			)
			otherlv_3='byte'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimitiveTypeAccess().getByteKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveCharacterAction_2_0(),
						$current);
				}
			)
			otherlv_5='char'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimitiveTypeAccess().getCharKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveDateAction_3_0(),
						$current);
				}
			)
			otherlv_7='date'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimitiveTypeAccess().getDateKeyword_3_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveDoubleAction_4_0(),
						$current);
				}
			)
			otherlv_9='double'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimitiveTypeAccess().getDoubleKeyword_4_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveFloatAction_5_0(),
						$current);
				}
			)
			otherlv_11='float'
			{
				newLeafNode(otherlv_11, grammarAccess.getPrimitiveTypeAccess().getFloatKeyword_5_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveIntegerAction_6_0(),
						$current);
				}
			)
			otherlv_13='int'
			{
				newLeafNode(otherlv_13, grammarAccess.getPrimitiveTypeAccess().getIntKeyword_6_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveLongAction_7_0(),
						$current);
				}
			)
			otherlv_15='long'
			{
				newLeafNode(otherlv_15, grammarAccess.getPrimitiveTypeAccess().getLongKeyword_7_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveShortAction_8_0(),
						$current);
				}
			)
			otherlv_17='short'
			{
				newLeafNode(otherlv_17, grammarAccess.getPrimitiveTypeAccess().getShortKeyword_8_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveStringAction_9_0(),
						$current);
				}
			)
			otherlv_19='string'
			{
				newLeafNode(otherlv_19, grammarAccess.getPrimitiveTypeAccess().getStringKeyword_9_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveUnspecifiedAction_10_0(),
						$current);
				}
			)
			otherlv_21='unspecified'
			{
				newLeafNode(otherlv_21, grammarAccess.getPrimitiveTypeAccess().getUnspecifiedKeyword_10_1());
			}
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule ImportType
ruleImportType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='datatypes'
			{
				$current = grammarAccess.getImportTypeAccess().getDATATYPESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getImportTypeAccess().getDATATYPESEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='technology'
			{
				$current = grammarAccess.getImportTypeAccess().getTECHNOLOGYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getImportTypeAccess().getTECHNOLOGYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='microservices'
			{
				$current = grammarAccess.getImportTypeAccess().getMICROSERVICESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getImportTypeAccess().getMICROSERVICESEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Visibility
ruleVisibility returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='internal'
			{
				$current = grammarAccess.getVisibilityAccess().getINTERNALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getINTERNALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='architecture'
			{
				$current = grammarAccess.getVisibilityAccess().getARCHITECTUREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getARCHITECTUREEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='public'
			{
				$current = grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule MicroserviceType
ruleMicroserviceType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='functional'
			{
				$current = grammarAccess.getMicroserviceTypeAccess().getFUNCTIONALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMicroserviceTypeAccess().getFUNCTIONALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='utility'
			{
				$current = grammarAccess.getMicroserviceTypeAccess().getUTILITYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMicroserviceTypeAccess().getUTILITYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='infrastructure'
			{
				$current = grammarAccess.getMicroserviceTypeAccess().getINFRASTRUCTUREEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMicroserviceTypeAccess().getINFRASTRUCTUREEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ExchangePattern
ruleExchangePattern returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getExchangePatternAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getExchangePatternAccess().getINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getExchangePatternAccess().getOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getExchangePatternAccess().getOUTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='inout'
			{
				$current = grammarAccess.getExchangePatternAccess().getINOUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getExchangePatternAccess().getINOUTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule CommunicationType
ruleCommunicationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sync'
			{
				$current = grammarAccess.getCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='async'
			{
				$current = grammarAccess.getCommunicationTypeAccess().getASYNCHRONOUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCommunicationTypeAccess().getASYNCHRONOUSEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule CompatibilityDirection
ruleCompatibilityDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<-'
			{
				$current = grammarAccess.getCompatibilityDirectionAccess().getMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCompatibilityDirectionAccess().getMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='->'
			{
				$current = grammarAccess.getCompatibilityDirectionAccess().getCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCompatibilityDirectionAccess().getCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<->'
			{
				$current = grammarAccess.getCompatibilityDirectionAccess().getBIDIRECTIONALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCompatibilityDirectionAccess().getBIDIRECTIONALEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule PropertyFeature
rulePropertyFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='mandatory'
			{
				$current = grammarAccess.getPropertyFeatureAccess().getMANDATORYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPropertyFeatureAccess().getMANDATORYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='singleval'
			{
				$current = grammarAccess.getPropertyFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPropertyFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ServiceJoinPointType
ruleServiceJoinPointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='types'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getCOMPLEX_TYPESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getServiceJoinPointTypeAccess().getCOMPLEX_TYPESEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='fields'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getDATA_FIELDSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getServiceJoinPointTypeAccess().getDATA_FIELDSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='domainOperations'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATIONSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATIONSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='domainParameters'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='microservices'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getMICROSERVICESEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getServiceJoinPointTypeAccess().getMICROSERVICESEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='interfaces'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getINTERFACESEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getServiceJoinPointTypeAccess().getINTERFACESEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='operations'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getOPERATIONSEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getServiceJoinPointTypeAccess().getOPERATIONSEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='parameters'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getPARAMETERSEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getServiceJoinPointTypeAccess().getPARAMETERSEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule AspectFeature
ruleAspectFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='singleval'
		{
			$current = grammarAccess.getAspectFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getAspectFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration());
		}
	)
;

// Rule OperationJoinPointType
ruleOperationJoinPointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='containers'
			{
				$current = grammarAccess.getOperationJoinPointTypeAccess().getCONTAINERSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationJoinPointTypeAccess().getCONTAINERSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='infrastructure'
			{
				$current = grammarAccess.getOperationJoinPointTypeAccess().getINFRASTRUCTURE_NODESEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationJoinPointTypeAccess().getINFRASTRUCTURE_NODESEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ComplexTypeFeature
ruleComplexTypeFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='aggregate'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getAGGREGATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComplexTypeFeatureAccess().getAGGREGATEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='applicationService'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getAPPLICATION_SERVICEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComplexTypeFeatureAccess().getAPPLICATION_SERVICEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='domainEvent'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_EVENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_EVENTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='domainService'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_SERVICEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_SERVICEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='entity'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getENTITYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComplexTypeFeatureAccess().getENTITYEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='factory'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getFACTORYEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getComplexTypeFeatureAccess().getFACTORYEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='infrastructureService'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getINFRASTRUCTURE_SERVICEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getComplexTypeFeatureAccess().getINFRASTRUCTURE_SERVICEEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='repository'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getREPOSITORYEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getComplexTypeFeatureAccess().getREPOSITORYEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='service'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getSERVICEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getComplexTypeFeatureAccess().getSERVICEEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='specification'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getSPECIFICATIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getComplexTypeFeatureAccess().getSPECIFICATIONEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='valueObject'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getVALUE_OBJECTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getComplexTypeFeatureAccess().getVALUE_OBJECTEnumLiteralDeclaration_10());
			}
		)
	)
;

// Rule DataFieldFeature
ruleDataFieldFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='identifier'
			{
				$current = grammarAccess.getDataFieldFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataFieldFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='neverEmpty'
			{
				$current = grammarAccess.getDataFieldFeatureAccess().getNEVER_EMPTYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataFieldFeatureAccess().getNEVER_EMPTYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='part'
			{
				$current = grammarAccess.getDataFieldFeatureAccess().getPARTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataFieldFeatureAccess().getPARTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DataOperationFeature
ruleDataOperationFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='closure'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getCLOSUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataOperationFeatureAccess().getCLOSUREEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='identifier'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataOperationFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='sideEffectFree'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getSIDE_EFFECT_FREEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataOperationFeatureAccess().getSIDE_EFFECT_FREEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='validator'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getVALIDATOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataOperationFeatureAccess().getVALIDATOREnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_NUMBER_WITH_TRAILING_PERIOD : RULE_INT '.';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_BIG_DECIMAL : '-'? RULE_INT ('.' RULE_INT)?;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
