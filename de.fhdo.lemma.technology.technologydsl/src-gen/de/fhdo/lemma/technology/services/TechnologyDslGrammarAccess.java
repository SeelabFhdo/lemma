/*
 * generated by Xtext 2.16.0
 */
package de.fhdo.lemma.technology.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fhdo.lemma.data.services.DataDslGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TechnologyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class TechnologyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.Technology");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsTechnologyImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Keyword cTechnologyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Alternatives cAlternatives_4_2 = (Alternatives)cGroup_4.eContents().get(2);
		private final Assignment cPrimitiveTypesAssignment_4_2_0 = (Assignment)cAlternatives_4_2.eContents().get(0);
		private final RuleCall cPrimitiveTypesTechnologySpecificPrimitiveTypeParserRuleCall_4_2_0_0 = (RuleCall)cPrimitiveTypesAssignment_4_2_0.eContents().get(0);
		private final Assignment cListTypesAssignment_4_2_1 = (Assignment)cAlternatives_4_2.eContents().get(1);
		private final RuleCall cListTypesTechnologySpecificListTypeParserRuleCall_4_2_1_0 = (RuleCall)cListTypesAssignment_4_2_1.eContents().get(0);
		private final Assignment cDataStructuresAssignment_4_2_2 = (Assignment)cAlternatives_4_2.eContents().get(2);
		private final RuleCall cDataStructuresTechnologySpecificDataStructureParserRuleCall_4_2_2_0 = (RuleCall)cDataStructuresAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCompatibilityKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cMatrixKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_3_2 = (Keyword)cGroup_4_3.eContents().get(2);
		private final Assignment cCompatibilityEntriesAssignment_4_3_3 = (Assignment)cGroup_4_3.eContents().get(3);
		private final RuleCall cCompatibilityEntriesCompatibilityMatrixEntryParserRuleCall_4_3_3_0 = (RuleCall)cCompatibilityEntriesAssignment_4_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3_4 = (Keyword)cGroup_4_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cProtocolsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cProtocolsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cProtocolsProtocolParserRuleCall_5_2_0 = (RuleCall)cProtocolsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cServiceKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cAspectsKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cServiceAspectsAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cServiceAspectsServiceAspectParserRuleCall_6_3_0 = (RuleCall)cServiceAspectsAssignment_6_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDeploymentKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cTechnologiesKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cDeploymentTechnologiesAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cDeploymentTechnologiesDeploymentTechnologyParserRuleCall_7_3_0 = (RuleCall)cDeploymentTechnologiesAssignment_7_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cInfrastructureKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cTechnologiesKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cInfrastructureTechnologiesAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cInfrastructureTechnologiesInfrastructureTechnologyParserRuleCall_8_3_0 = (RuleCall)cInfrastructureTechnologiesAssignment_8_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOperationKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cAspectsKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cOperationAspectsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cOperationAspectsOperationAspectParserRuleCall_9_3_0 = (RuleCall)cOperationAspectsAssignment_9_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Technology:
		//	imports+=TechnologyImport*
		//	'technology' name=ID '{' ('types' '{' (primitiveTypes+=TechnologySpecificPrimitiveType |
		//	listTypes+=TechnologySpecificListType | dataStructures+=TechnologySpecificDataStructure)+ ('compatibility' 'matrix'
		//	'{'
		//	compatibilityEntries+=CompatibilityMatrixEntry+
		//	'}')?
		//	'}')? ('protocols' '{'
		//	protocols+=Protocol+
		//	'}')? ('service' 'aspects' '{'
		//	serviceAspects+=ServiceAspect+
		//	'}')? ('deployment' 'technologies' '{'
		//	deploymentTechnologies+=DeploymentTechnology+
		//	'}')? ('infrastructure' 'technologies' '{'
		//	infrastructureTechnologies+=InfrastructureTechnology+
		//	'}')? ('operation' 'aspects' '{'
		//	operationAspects+=OperationAspect+
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=TechnologyImport* 'technology' name=ID '{' ('types' '{' (primitiveTypes+=TechnologySpecificPrimitiveType |
		//listTypes+=TechnologySpecificListType | dataStructures+=TechnologySpecificDataStructure)+ ('compatibility' 'matrix' '{'
		//compatibilityEntries+=CompatibilityMatrixEntry+ '}')? '}')? ('protocols' '{' protocols+=Protocol+ '}')? ('service'
		//'aspects' '{' serviceAspects+=ServiceAspect+ '}')? ('deployment' 'technologies' '{'
		//deploymentTechnologies+=DeploymentTechnology+ '}')? ('infrastructure' 'technologies' '{'
		//infrastructureTechnologies+=InfrastructureTechnology+ '}')? ('operation' 'aspects' '{'
		//operationAspects+=OperationAspect+ '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//imports+=TechnologyImport*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//TechnologyImport
		public RuleCall getImportsTechnologyImportParserRuleCall_0_0() { return cImportsTechnologyImportParserRuleCall_0_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_1() { return cTechnologyKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('types' '{' (primitiveTypes+=TechnologySpecificPrimitiveType | listTypes+=TechnologySpecificListType |
		//dataStructures+=TechnologySpecificDataStructure)+ ('compatibility' 'matrix' '{'
		//compatibilityEntries+=CompatibilityMatrixEntry+ '}')? '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'types'
		public Keyword getTypesKeyword_4_0() { return cTypesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//(primitiveTypes+=TechnologySpecificPrimitiveType | listTypes+=TechnologySpecificListType |
		//dataStructures+=TechnologySpecificDataStructure)+
		public Alternatives getAlternatives_4_2() { return cAlternatives_4_2; }
		
		//primitiveTypes+=TechnologySpecificPrimitiveType
		public Assignment getPrimitiveTypesAssignment_4_2_0() { return cPrimitiveTypesAssignment_4_2_0; }
		
		//TechnologySpecificPrimitiveType
		public RuleCall getPrimitiveTypesTechnologySpecificPrimitiveTypeParserRuleCall_4_2_0_0() { return cPrimitiveTypesTechnologySpecificPrimitiveTypeParserRuleCall_4_2_0_0; }
		
		//listTypes+=TechnologySpecificListType
		public Assignment getListTypesAssignment_4_2_1() { return cListTypesAssignment_4_2_1; }
		
		//TechnologySpecificListType
		public RuleCall getListTypesTechnologySpecificListTypeParserRuleCall_4_2_1_0() { return cListTypesTechnologySpecificListTypeParserRuleCall_4_2_1_0; }
		
		//dataStructures+=TechnologySpecificDataStructure
		public Assignment getDataStructuresAssignment_4_2_2() { return cDataStructuresAssignment_4_2_2; }
		
		//TechnologySpecificDataStructure
		public RuleCall getDataStructuresTechnologySpecificDataStructureParserRuleCall_4_2_2_0() { return cDataStructuresTechnologySpecificDataStructureParserRuleCall_4_2_2_0; }
		
		//('compatibility' 'matrix' '{' compatibilityEntries+=CompatibilityMatrixEntry+ '}')?
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//'compatibility'
		public Keyword getCompatibilityKeyword_4_3_0() { return cCompatibilityKeyword_4_3_0; }
		
		//'matrix'
		public Keyword getMatrixKeyword_4_3_1() { return cMatrixKeyword_4_3_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_3_2() { return cLeftCurlyBracketKeyword_4_3_2; }
		
		//compatibilityEntries+=CompatibilityMatrixEntry+
		public Assignment getCompatibilityEntriesAssignment_4_3_3() { return cCompatibilityEntriesAssignment_4_3_3; }
		
		//CompatibilityMatrixEntry
		public RuleCall getCompatibilityEntriesCompatibilityMatrixEntryParserRuleCall_4_3_3_0() { return cCompatibilityEntriesCompatibilityMatrixEntryParserRuleCall_4_3_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3_4() { return cRightCurlyBracketKeyword_4_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('protocols' '{' protocols+=Protocol+ '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'protocols'
		public Keyword getProtocolsKeyword_5_0() { return cProtocolsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//protocols+=Protocol+
		public Assignment getProtocolsAssignment_5_2() { return cProtocolsAssignment_5_2; }
		
		//Protocol
		public RuleCall getProtocolsProtocolParserRuleCall_5_2_0() { return cProtocolsProtocolParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
		
		//('service' 'aspects' '{' serviceAspects+=ServiceAspect+ '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'service'
		public Keyword getServiceKeyword_6_0() { return cServiceKeyword_6_0; }
		
		//'aspects'
		public Keyword getAspectsKeyword_6_1() { return cAspectsKeyword_6_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }
		
		//serviceAspects+=ServiceAspect+
		public Assignment getServiceAspectsAssignment_6_3() { return cServiceAspectsAssignment_6_3; }
		
		//ServiceAspect
		public RuleCall getServiceAspectsServiceAspectParserRuleCall_6_3_0() { return cServiceAspectsServiceAspectParserRuleCall_6_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('deployment' 'technologies' '{' deploymentTechnologies+=DeploymentTechnology+ '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'deployment'
		public Keyword getDeploymentKeyword_7_0() { return cDeploymentKeyword_7_0; }
		
		//'technologies'
		public Keyword getTechnologiesKeyword_7_1() { return cTechnologiesKeyword_7_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_2() { return cLeftCurlyBracketKeyword_7_2; }
		
		//deploymentTechnologies+=DeploymentTechnology+
		public Assignment getDeploymentTechnologiesAssignment_7_3() { return cDeploymentTechnologiesAssignment_7_3; }
		
		//DeploymentTechnology
		public RuleCall getDeploymentTechnologiesDeploymentTechnologyParserRuleCall_7_3_0() { return cDeploymentTechnologiesDeploymentTechnologyParserRuleCall_7_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('infrastructure' 'technologies' '{' infrastructureTechnologies+=InfrastructureTechnology+ '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'infrastructure'
		public Keyword getInfrastructureKeyword_8_0() { return cInfrastructureKeyword_8_0; }
		
		//'technologies'
		public Keyword getTechnologiesKeyword_8_1() { return cTechnologiesKeyword_8_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }
		
		//infrastructureTechnologies+=InfrastructureTechnology+
		public Assignment getInfrastructureTechnologiesAssignment_8_3() { return cInfrastructureTechnologiesAssignment_8_3; }
		
		//InfrastructureTechnology
		public RuleCall getInfrastructureTechnologiesInfrastructureTechnologyParserRuleCall_8_3_0() { return cInfrastructureTechnologiesInfrastructureTechnologyParserRuleCall_8_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//('operation' 'aspects' '{' operationAspects+=OperationAspect+ '}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'operation'
		public Keyword getOperationKeyword_9_0() { return cOperationKeyword_9_0; }
		
		//'aspects'
		public Keyword getAspectsKeyword_9_1() { return cAspectsKeyword_9_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_2() { return cLeftCurlyBracketKeyword_9_2; }
		
		//operationAspects+=OperationAspect+
		public Assignment getOperationAspectsAssignment_9_3() { return cOperationAspectsAssignment_9_3; }
		
		//OperationAspect
		public RuleCall getOperationAspectsOperationAspectParserRuleCall_9_3_0() { return cOperationAspectsOperationAspectParserRuleCall_9_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class TechnologyImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.TechnologyImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTechnologyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportURIAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportURISTRINGTerminalRuleCall_3_0 = (RuleCall)cImportURIAssignment_3.eContents().get(0);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		
		//TechnologyImport:
		//	'import' 'technology' 'from' importURI=STRING 'as' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' 'technology' 'from' importURI=STRING 'as' name=ID
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_1() { return cTechnologyKeyword_1; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_3() { return cImportURIAssignment_3; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_3_0() { return cImportURISTRINGTerminalRuleCall_3_0; }
		
		//'as'
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
	}
	public class ProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.Protocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommunicationTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommunicationTypeCommunicationTypeEnumRuleCall_0_0 = (RuleCall)cCommunicationTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cDataKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFormatsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDataFormatsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDataFormatsDataFormatParserRuleCall_4_0 = (RuleCall)cDataFormatsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDataFormatsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDataFormatsDataFormatParserRuleCall_5_1_0 = (RuleCall)cDataFormatsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cDefaultAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cDefaultDefaultKeyword_6_0_0 = (Keyword)cDefaultAssignment_6_0.eContents().get(0);
		private final Keyword cWithKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cFormatKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cDefaultFormatAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cDefaultFormatDataFormatCrossReference_6_3_0 = (CrossReference)cDefaultFormatAssignment_6_3.eContents().get(0);
		private final RuleCall cDefaultFormatDataFormatIDTerminalRuleCall_6_3_0_1 = (RuleCall)cDefaultFormatDataFormatCrossReference_6_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Protocol:
		//	communicationType=CommunicationType
		//	name=ID
		//	'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)* (default?='default' 'with' 'format'
		//	defaultFormat=[DataFormat])?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//communicationType=CommunicationType name=ID 'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)*
		//(default?='default' 'with' 'format' defaultFormat=[DataFormat])? ';'
		public Group getGroup() { return cGroup; }
		
		//communicationType=CommunicationType
		public Assignment getCommunicationTypeAssignment_0() { return cCommunicationTypeAssignment_0; }
		
		//CommunicationType
		public RuleCall getCommunicationTypeCommunicationTypeEnumRuleCall_0_0() { return cCommunicationTypeCommunicationTypeEnumRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'data'
		public Keyword getDataKeyword_2() { return cDataKeyword_2; }
		
		//'formats'
		public Keyword getFormatsKeyword_3() { return cFormatsKeyword_3; }
		
		//dataFormats+=DataFormat
		public Assignment getDataFormatsAssignment_4() { return cDataFormatsAssignment_4; }
		
		//DataFormat
		public RuleCall getDataFormatsDataFormatParserRuleCall_4_0() { return cDataFormatsDataFormatParserRuleCall_4_0; }
		
		//(',' dataFormats+=DataFormat)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//dataFormats+=DataFormat
		public Assignment getDataFormatsAssignment_5_1() { return cDataFormatsAssignment_5_1; }
		
		//DataFormat
		public RuleCall getDataFormatsDataFormatParserRuleCall_5_1_0() { return cDataFormatsDataFormatParserRuleCall_5_1_0; }
		
		//(default?='default' 'with' 'format' defaultFormat=[DataFormat])?
		public Group getGroup_6() { return cGroup_6; }
		
		//default?='default'
		public Assignment getDefaultAssignment_6_0() { return cDefaultAssignment_6_0; }
		
		//'default'
		public Keyword getDefaultDefaultKeyword_6_0_0() { return cDefaultDefaultKeyword_6_0_0; }
		
		//'with'
		public Keyword getWithKeyword_6_1() { return cWithKeyword_6_1; }
		
		//'format'
		public Keyword getFormatKeyword_6_2() { return cFormatKeyword_6_2; }
		
		//defaultFormat=[DataFormat]
		public Assignment getDefaultFormatAssignment_6_3() { return cDefaultFormatAssignment_6_3; }
		
		//[DataFormat]
		public CrossReference getDefaultFormatDataFormatCrossReference_6_3_0() { return cDefaultFormatDataFormatCrossReference_6_3_0; }
		
		//ID
		public RuleCall getDefaultFormatDataFormatIDTerminalRuleCall_6_3_0_1() { return cDefaultFormatDataFormatIDTerminalRuleCall_6_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class DataFormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.DataFormat");
		private final Assignment cFormatNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cFormatNameIDTerminalRuleCall_0 = (RuleCall)cFormatNameAssignment.eContents().get(0);
		
		//DataFormat:
		//	formatName=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//formatName=ID
		public Assignment getFormatNameAssignment() { return cFormatNameAssignment; }
		
		//ID
		public RuleCall getFormatNameIDTerminalRuleCall_0() { return cFormatNameIDTerminalRuleCall_0; }
	}
	public class TechnologySpecificPrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificPrimitiveType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimitiveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBasedKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cOnKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cBasicBuiltinPrimitiveTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_2_0 = (RuleCall)cBasicBuiltinPrimitiveTypesAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cBasicBuiltinPrimitiveTypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_3_1_0 = (RuleCall)cBasicBuiltinPrimitiveTypesAssignment_3_3_1.eContents().get(0);
		private final Assignment cDefaultAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final Keyword cDefaultDefaultKeyword_3_4_0 = (Keyword)cDefaultAssignment_3_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TechnologySpecificPrimitiveType:
		//	'primitive' 'type' name=ID ('based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType (','
		//	basicBuiltinPrimitiveTypes+=PrimitiveType)*
		//	default?='default'?)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'primitive' 'type' name=ID ('based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType (','
		//basicBuiltinPrimitiveTypes+=PrimitiveType)* default?='default'?)? ';'
		public Group getGroup() { return cGroup; }
		
		//'primitive'
		public Keyword getPrimitiveKeyword_0() { return cPrimitiveKeyword_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType (',' basicBuiltinPrimitiveTypes+=PrimitiveType)*
		//default?='default'?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'based'
		public Keyword getBasedKeyword_3_0() { return cBasedKeyword_3_0; }
		
		//'on'
		public Keyword getOnKeyword_3_1() { return cOnKeyword_3_1; }
		
		//basicBuiltinPrimitiveTypes+=PrimitiveType
		public Assignment getBasicBuiltinPrimitiveTypesAssignment_3_2() { return cBasicBuiltinPrimitiveTypesAssignment_3_2; }
		
		//PrimitiveType
		public RuleCall getBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_2_0() { return cBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_2_0; }
		
		//(',' basicBuiltinPrimitiveTypes+=PrimitiveType)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//basicBuiltinPrimitiveTypes+=PrimitiveType
		public Assignment getBasicBuiltinPrimitiveTypesAssignment_3_3_1() { return cBasicBuiltinPrimitiveTypesAssignment_3_3_1; }
		
		//PrimitiveType
		public RuleCall getBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_3_1_0() { return cBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_3_1_0; }
		
		//default?='default'?
		public Assignment getDefaultAssignment_3_4() { return cDefaultAssignment_3_4; }
		
		//'default'
		public Keyword getDefaultDefaultKeyword_3_4_0() { return cDefaultDefaultKeyword_3_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class TechnologySpecificListTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificListType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TechnologySpecificListType:
		//	'list' 'type' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'list' 'type' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'list'
		public Keyword getListKeyword_0() { return cListKeyword_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class TechnologySpecificDataStructureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificDataStructure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStructureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TechnologySpecificDataStructure:
		//	'structure' 'type' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'structure' 'type' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'structure'
		public Keyword getStructureKeyword_0() { return cStructureKeyword_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class PossiblyImportedTechnologySpecificTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportTechnologyImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportTechnologyImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportTechnologyImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cTypeTypeCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedTechnologySpecificType:
		//	(^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[TechnologyImport] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[TechnologyImport]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[TechnologyImport]
		public CrossReference getImportTechnologyImportCrossReference_0_0_0() { return cImportTechnologyImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportTechnologyImportIDTerminalRuleCall_0_0_0_1() { return cImportTechnologyImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//type=[data::Type|QualifiedName]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//[data::Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_1_0() { return cTypeTypeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_1_0_1() { return cTypeTypeQualifiedNameParserRuleCall_1_0_1; }
	}
	public class CompatibilityMatrixEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.CompatibilityMatrixEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCompatibleTypesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_0_0 = (RuleCall)cCompatibleTypesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cCompatibleTypesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_1_1_0 = (RuleCall)cCompatibleTypesAssignment_1_1.eContents().get(0);
		private final Assignment cDirectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDirectionCompatibilityDirectionEnumRuleCall_2_0 = (RuleCall)cDirectionAssignment_2.eContents().get(0);
		private final Assignment cMappingTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMappingTypePossiblyImportedTechnologySpecificTypeParserRuleCall_3_0 = (RuleCall)cMappingTypeAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CompatibilityMatrixEntry:
		//	compatibleTypes+=PossiblyImportedTechnologySpecificType (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
		//	direction=CompatibilityDirection
		//	mappingType=PossiblyImportedTechnologySpecificType
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//compatibleTypes+=PossiblyImportedTechnologySpecificType (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
		//direction=CompatibilityDirection mappingType=PossiblyImportedTechnologySpecificType ';'
		public Group getGroup() { return cGroup; }
		
		//compatibleTypes+=PossiblyImportedTechnologySpecificType
		public Assignment getCompatibleTypesAssignment_0() { return cCompatibleTypesAssignment_0; }
		
		//PossiblyImportedTechnologySpecificType
		public RuleCall getCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_0_0() { return cCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_0_0; }
		
		//(',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//compatibleTypes+=PossiblyImportedTechnologySpecificType
		public Assignment getCompatibleTypesAssignment_1_1() { return cCompatibleTypesAssignment_1_1; }
		
		//PossiblyImportedTechnologySpecificType
		public RuleCall getCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_1_1_0() { return cCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_1_1_0; }
		
		//direction=CompatibilityDirection
		public Assignment getDirectionAssignment_2() { return cDirectionAssignment_2; }
		
		//CompatibilityDirection
		public RuleCall getDirectionCompatibilityDirectionEnumRuleCall_2_0() { return cDirectionCompatibilityDirectionEnumRuleCall_2_0; }
		
		//mappingType=PossiblyImportedTechnologySpecificType
		public Assignment getMappingTypeAssignment_3() { return cMappingTypeAssignment_3; }
		
		//PossiblyImportedTechnologySpecificType
		public RuleCall getMappingTypePossiblyImportedTechnologySpecificTypeParserRuleCall_3_0() { return cMappingTypePossiblyImportedTechnologySpecificTypeParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class DeploymentTechnologyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.DeploymentTechnology");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOperationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEnvironmentsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOperationEnvironmentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0 = (RuleCall)cOperationEnvironmentsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOperationEnvironmentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0 = (RuleCall)cOperationEnvironmentsAssignment_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cServiceKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cPropertiesKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cServicePropertiesAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0 = (RuleCall)cServicePropertiesAssignment_8_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//DeploymentTechnology:
		//	name=ID '{'
		//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
		//	operationEnvironments+=OperationEnvironment)*
		//	';' ('service' 'properties' '{'
		//	serviceProperties+=TechnologySpecificProperty+
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '{' 'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
		//operationEnvironments+=OperationEnvironment)* ';' ('service' 'properties' '{'
		//serviceProperties+=TechnologySpecificProperty+ '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'operation'
		public Keyword getOperationKeyword_2() { return cOperationKeyword_2; }
		
		//'environments'
		public Keyword getEnvironmentsKeyword_3() { return cEnvironmentsKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//operationEnvironments+=OperationEnvironment
		public Assignment getOperationEnvironmentsAssignment_5() { return cOperationEnvironmentsAssignment_5; }
		
		//OperationEnvironment
		public RuleCall getOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0() { return cOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0; }
		
		//(',' operationEnvironments+=OperationEnvironment)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//operationEnvironments+=OperationEnvironment
		public Assignment getOperationEnvironmentsAssignment_6_1() { return cOperationEnvironmentsAssignment_6_1; }
		
		//OperationEnvironment
		public RuleCall getOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0() { return cOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
		
		//('service' 'properties' '{' serviceProperties+=TechnologySpecificProperty+ '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'service'
		public Keyword getServiceKeyword_8_0() { return cServiceKeyword_8_0; }
		
		//'properties'
		public Keyword getPropertiesKeyword_8_1() { return cPropertiesKeyword_8_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }
		
		//serviceProperties+=TechnologySpecificProperty+
		public Assignment getServicePropertiesAssignment_8_3() { return cServicePropertiesAssignment_8_3; }
		
		//TechnologySpecificProperty
		public RuleCall getServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0() { return cServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class InfrastructureTechnologyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.InfrastructureTechnology");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOperationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEnvironmentsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOperationEnvironmentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0 = (RuleCall)cOperationEnvironmentsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOperationEnvironmentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0 = (RuleCall)cOperationEnvironmentsAssignment_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cServiceKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cPropertiesKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cServicePropertiesAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0 = (RuleCall)cServicePropertiesAssignment_8_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//InfrastructureTechnology:
		//	name=ID '{'
		//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
		//	operationEnvironments+=OperationEnvironment)*
		//	';' ('service' 'properties' '{'
		//	serviceProperties+=TechnologySpecificProperty+
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '{' 'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
		//operationEnvironments+=OperationEnvironment)* ';' ('service' 'properties' '{'
		//serviceProperties+=TechnologySpecificProperty+ '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'operation'
		public Keyword getOperationKeyword_2() { return cOperationKeyword_2; }
		
		//'environments'
		public Keyword getEnvironmentsKeyword_3() { return cEnvironmentsKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//operationEnvironments+=OperationEnvironment
		public Assignment getOperationEnvironmentsAssignment_5() { return cOperationEnvironmentsAssignment_5; }
		
		//OperationEnvironment
		public RuleCall getOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0() { return cOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0; }
		
		//(',' operationEnvironments+=OperationEnvironment)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//operationEnvironments+=OperationEnvironment
		public Assignment getOperationEnvironmentsAssignment_6_1() { return cOperationEnvironmentsAssignment_6_1; }
		
		//OperationEnvironment
		public RuleCall getOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0() { return cOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
		
		//('service' 'properties' '{' serviceProperties+=TechnologySpecificProperty+ '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'service'
		public Keyword getServiceKeyword_8_0() { return cServiceKeyword_8_0; }
		
		//'properties'
		public Keyword getPropertiesKeyword_8_1() { return cPropertiesKeyword_8_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }
		
		//serviceProperties+=TechnologySpecificProperty+
		public Assignment getServicePropertiesAssignment_8_3() { return cServicePropertiesAssignment_8_3; }
		
		//TechnologySpecificProperty
		public RuleCall getServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0() { return cServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class OperationEnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEnvironmentNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cEnvironmentNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cEnvironmentNameAssignment_0.eContents().get(0);
		private final Assignment cDefaultAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDefaultDefaultKeyword_1_0 = (Keyword)cDefaultAssignment_1.eContents().get(0);
		
		//OperationEnvironment:
		//	environmentName=STRING default?='default'?;
		@Override public ParserRule getRule() { return rule; }
		
		//environmentName=STRING default?='default'?
		public Group getGroup() { return cGroup; }
		
		//environmentName=STRING
		public Assignment getEnvironmentNameAssignment_0() { return cEnvironmentNameAssignment_0; }
		
		//STRING
		public RuleCall getEnvironmentNameSTRINGTerminalRuleCall_0_0() { return cEnvironmentNameSTRINGTerminalRuleCall_0_0; }
		
		//default?='default'?
		public Assignment getDefaultAssignment_1() { return cDefaultAssignment_1; }
		
		//'default'
		public Keyword getDefaultDefaultKeyword_1_0() { return cDefaultDefaultKeyword_1_0; }
	}
	public class TechnologySpecificPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypePrimitiveTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultValuePrimitiveValueParserRuleCall_2_1_0 = (RuleCall)cDefaultValueAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFeaturesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFeaturesPropertyFeatureEnumRuleCall_3_1_0 = (RuleCall)cFeaturesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cFeaturesPropertyFeatureEnumRuleCall_3_2_1_0 = (RuleCall)cFeaturesAssignment_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TechnologySpecificProperty:
		//	type=PrimitiveType name=ID ('=' defaultValue=PrimitiveValue)? ('<'
		//	features+=PropertyFeature (',' features+=PropertyFeature)*
		//	'>')?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//type=PrimitiveType name=ID ('=' defaultValue=PrimitiveValue)? ('<' features+=PropertyFeature (','
		//features+=PropertyFeature)* '>')? ';'
		public Group getGroup() { return cGroup; }
		
		//type=PrimitiveType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//PrimitiveType
		public RuleCall getTypePrimitiveTypeParserRuleCall_0_0() { return cTypePrimitiveTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('=' defaultValue=PrimitiveValue)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0() { return cEqualsSignKeyword_2_0; }
		
		//defaultValue=PrimitiveValue
		public Assignment getDefaultValueAssignment_2_1() { return cDefaultValueAssignment_2_1; }
		
		//PrimitiveValue
		public RuleCall getDefaultValuePrimitiveValueParserRuleCall_2_1_0() { return cDefaultValuePrimitiveValueParserRuleCall_2_1_0; }
		
		//('<' features+=PropertyFeature (',' features+=PropertyFeature)* '>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<'
		public Keyword getLessThanSignKeyword_3_0() { return cLessThanSignKeyword_3_0; }
		
		//features+=PropertyFeature
		public Assignment getFeaturesAssignment_3_1() { return cFeaturesAssignment_3_1; }
		
		//PropertyFeature
		public RuleCall getFeaturesPropertyFeatureEnumRuleCall_3_1_0() { return cFeaturesPropertyFeatureEnumRuleCall_3_1_0; }
		
		//(',' features+=PropertyFeature)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//features+=PropertyFeature
		public Assignment getFeaturesAssignment_3_2_1() { return cFeaturesAssignment_3_2_1; }
		
		//PropertyFeature
		public RuleCall getFeaturesPropertyFeatureEnumRuleCall_3_2_1_0() { return cFeaturesPropertyFeatureEnumRuleCall_3_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_3() { return cGreaterThanSignKeyword_3_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ServiceAspectPointcutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcut");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cForExchangePatternAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cForExchangePatternExchange_patternKeyword_0_0_0 = (Keyword)cForExchangePatternAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cExchangePatternAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cExchangePatternExchangePatternEnumRuleCall_0_2_0 = (RuleCall)cExchangePatternAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cForCommunicationTypeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cForCommunicationTypeCommunication_typeKeyword_1_0_0 = (Keyword)cForCommunicationTypeAssignment_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cCommunicationTypeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cCommunicationTypeCommunicationTypeEnumRuleCall_1_2_0 = (RuleCall)cCommunicationTypeAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cForProtocolAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cForProtocolProtocolKeyword_2_0_0 = (Keyword)cForProtocolAssignment_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cProtocolAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cProtocolProtocolCrossReference_2_2_0 = (CrossReference)cProtocolAssignment_2_2.eContents().get(0);
		private final RuleCall cProtocolProtocolIDTerminalRuleCall_2_2_0_1 = (RuleCall)cProtocolProtocolCrossReference_2_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cForDataFormatAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cForDataFormatData_formatKeyword_3_0_0 = (Keyword)cForDataFormatAssignment_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDataFormatAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cDataFormatDataFormatCrossReference_3_2_0 = (CrossReference)cDataFormatAssignment_3_2.eContents().get(0);
		private final RuleCall cDataFormatDataFormatIDTerminalRuleCall_3_2_0_1 = (RuleCall)cDataFormatDataFormatCrossReference_3_2_0.eContents().get(1);
		
		//ServiceAspectPointcut:
		//	forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern |
		//	forCommunicationType?='communication_type' '=' communicationType=CommunicationType | forProtocol?='protocol' '='
		//	protocol=[Protocol] | forDataFormat?='data_format' '=' dataFormat=[DataFormat];
		@Override public ParserRule getRule() { return rule; }
		
		//forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern | forCommunicationType?='communication_type'
		//'=' communicationType=CommunicationType | forProtocol?='protocol' '=' protocol=[Protocol] |
		//forDataFormat?='data_format' '=' dataFormat=[DataFormat]
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern
		public Group getGroup_0() { return cGroup_0; }
		
		//forExchangePattern?='exchange_pattern'
		public Assignment getForExchangePatternAssignment_0_0() { return cForExchangePatternAssignment_0_0; }
		
		//'exchange_pattern'
		public Keyword getForExchangePatternExchange_patternKeyword_0_0_0() { return cForExchangePatternExchange_patternKeyword_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//exchangePattern=ExchangePattern
		public Assignment getExchangePatternAssignment_0_2() { return cExchangePatternAssignment_0_2; }
		
		//ExchangePattern
		public RuleCall getExchangePatternExchangePatternEnumRuleCall_0_2_0() { return cExchangePatternExchangePatternEnumRuleCall_0_2_0; }
		
		//forCommunicationType?='communication_type' '=' communicationType=CommunicationType
		public Group getGroup_1() { return cGroup_1; }
		
		//forCommunicationType?='communication_type'
		public Assignment getForCommunicationTypeAssignment_1_0() { return cForCommunicationTypeAssignment_1_0; }
		
		//'communication_type'
		public Keyword getForCommunicationTypeCommunication_typeKeyword_1_0_0() { return cForCommunicationTypeCommunication_typeKeyword_1_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1() { return cEqualsSignKeyword_1_1; }
		
		//communicationType=CommunicationType
		public Assignment getCommunicationTypeAssignment_1_2() { return cCommunicationTypeAssignment_1_2; }
		
		//CommunicationType
		public RuleCall getCommunicationTypeCommunicationTypeEnumRuleCall_1_2_0() { return cCommunicationTypeCommunicationTypeEnumRuleCall_1_2_0; }
		
		//forProtocol?='protocol' '=' protocol=[Protocol]
		public Group getGroup_2() { return cGroup_2; }
		
		//forProtocol?='protocol'
		public Assignment getForProtocolAssignment_2_0() { return cForProtocolAssignment_2_0; }
		
		//'protocol'
		public Keyword getForProtocolProtocolKeyword_2_0_0() { return cForProtocolProtocolKeyword_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }
		
		//protocol=[Protocol]
		public Assignment getProtocolAssignment_2_2() { return cProtocolAssignment_2_2; }
		
		//[Protocol]
		public CrossReference getProtocolProtocolCrossReference_2_2_0() { return cProtocolProtocolCrossReference_2_2_0; }
		
		//ID
		public RuleCall getProtocolProtocolIDTerminalRuleCall_2_2_0_1() { return cProtocolProtocolIDTerminalRuleCall_2_2_0_1; }
		
		//forDataFormat?='data_format' '=' dataFormat=[DataFormat]
		public Group getGroup_3() { return cGroup_3; }
		
		//forDataFormat?='data_format'
		public Assignment getForDataFormatAssignment_3_0() { return cForDataFormatAssignment_3_0; }
		
		//'data_format'
		public Keyword getForDataFormatData_formatKeyword_3_0_0() { return cForDataFormatData_formatKeyword_3_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//dataFormat=[DataFormat]
		public Assignment getDataFormatAssignment_3_2() { return cDataFormatAssignment_3_2; }
		
		//[DataFormat]
		public CrossReference getDataFormatDataFormatCrossReference_3_2_0() { return cDataFormatDataFormatCrossReference_3_2_0; }
		
		//ID
		public RuleCall getDataFormatDataFormatIDTerminalRuleCall_3_2_0_1() { return cDataFormatDataFormatIDTerminalRuleCall_3_2_0_1; }
	}
	public class ServiceAspectPointcutSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcutSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPointcutsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPointcutsServiceAspectPointcutParserRuleCall_2_0 = (RuleCall)cPointcutsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPointcutsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPointcutsServiceAspectPointcutParserRuleCall_3_1_0 = (RuleCall)cPointcutsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ServiceAspectPointcutSelector:
		//	'selector' '('
		//	pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)*
		//	')' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'selector' '(' pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)* ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'selector'
		public Keyword getSelectorKeyword_0() { return cSelectorKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//pointcuts+=ServiceAspectPointcut
		public Assignment getPointcutsAssignment_2() { return cPointcutsAssignment_2; }
		
		//ServiceAspectPointcut
		public RuleCall getPointcutsServiceAspectPointcutParserRuleCall_2_0() { return cPointcutsServiceAspectPointcutParserRuleCall_2_0; }
		
		//(',' pointcuts+=ServiceAspectPointcut)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//pointcuts+=ServiceAspectPointcut
		public Assignment getPointcutsAssignment_3_1() { return cPointcutsAssignment_3_1; }
		
		//ServiceAspectPointcut
		public RuleCall getPointcutsServiceAspectPointcutParserRuleCall_3_1_0() { return cPointcutsServiceAspectPointcutParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ServiceAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.ServiceAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAspectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFeaturesAspectFeatureEnumRuleCall_2_1_0 = (RuleCall)cFeaturesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cFeaturesAspectFeatureEnumRuleCall_2_2_1_0 = (RuleCall)cFeaturesAssignment_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cForKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cJoinPointsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cJoinPointsServiceJoinPointTypeEnumRuleCall_4_0 = (RuleCall)cJoinPointsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cJoinPointsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cJoinPointsServiceJoinPointTypeEnumRuleCall_5_1_0 = (RuleCall)cJoinPointsAssignment_5_1.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cPointcutSelectorsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cPointcutSelectorsServiceAspectPointcutSelectorParserRuleCall_6_0_1_0 = (RuleCall)cPointcutSelectorsAssignment_6_0_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_6_0_2 = (Assignment)cGroup_6_0.eContents().get(2);
		private final RuleCall cPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0 = (RuleCall)cPropertiesAssignment_6_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_0_3 = (Keyword)cGroup_6_0.eContents().get(3);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//ServiceAspect:
		//	'aspect' name=ID ('<'
		//	features+=AspectFeature (',' features+=AspectFeature)*
		//	'>')?
		//	'for' joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)* ('{'
		//	pointcutSelectors+=ServiceAspectPointcutSelector*
		//	properties+=TechnologySpecificProperty*
		//	'}' |
		//	';');
		@Override public ParserRule getRule() { return rule; }
		
		//'aspect' name=ID ('<' features+=AspectFeature (',' features+=AspectFeature)* '>')? 'for'
		//joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)* ('{'
		//pointcutSelectors+=ServiceAspectPointcutSelector* properties+=TechnologySpecificProperty* '}' | ';')
		public Group getGroup() { return cGroup; }
		
		//'aspect'
		public Keyword getAspectKeyword_0() { return cAspectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('<' features+=AspectFeature (',' features+=AspectFeature)* '>')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }
		
		//features+=AspectFeature
		public Assignment getFeaturesAssignment_2_1() { return cFeaturesAssignment_2_1; }
		
		//AspectFeature
		public RuleCall getFeaturesAspectFeatureEnumRuleCall_2_1_0() { return cFeaturesAspectFeatureEnumRuleCall_2_1_0; }
		
		//(',' features+=AspectFeature)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//features+=AspectFeature
		public Assignment getFeaturesAssignment_2_2_1() { return cFeaturesAssignment_2_2_1; }
		
		//AspectFeature
		public RuleCall getFeaturesAspectFeatureEnumRuleCall_2_2_1_0() { return cFeaturesAspectFeatureEnumRuleCall_2_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }
		
		//'for'
		public Keyword getForKeyword_3() { return cForKeyword_3; }
		
		//joinPoints+=ServiceJoinPointType
		public Assignment getJoinPointsAssignment_4() { return cJoinPointsAssignment_4; }
		
		//ServiceJoinPointType
		public RuleCall getJoinPointsServiceJoinPointTypeEnumRuleCall_4_0() { return cJoinPointsServiceJoinPointTypeEnumRuleCall_4_0; }
		
		//(',' joinPoints+=ServiceJoinPointType)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//joinPoints+=ServiceJoinPointType
		public Assignment getJoinPointsAssignment_5_1() { return cJoinPointsAssignment_5_1; }
		
		//ServiceJoinPointType
		public RuleCall getJoinPointsServiceJoinPointTypeEnumRuleCall_5_1_0() { return cJoinPointsServiceJoinPointTypeEnumRuleCall_5_1_0; }
		
		//'{' pointcutSelectors+=ServiceAspectPointcutSelector* properties+=TechnologySpecificProperty* '}' | ';'
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//'{' pointcutSelectors+=ServiceAspectPointcutSelector* properties+=TechnologySpecificProperty* '}'
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_0_0() { return cLeftCurlyBracketKeyword_6_0_0; }
		
		//pointcutSelectors+=ServiceAspectPointcutSelector*
		public Assignment getPointcutSelectorsAssignment_6_0_1() { return cPointcutSelectorsAssignment_6_0_1; }
		
		//ServiceAspectPointcutSelector
		public RuleCall getPointcutSelectorsServiceAspectPointcutSelectorParserRuleCall_6_0_1_0() { return cPointcutSelectorsServiceAspectPointcutSelectorParserRuleCall_6_0_1_0; }
		
		//properties+=TechnologySpecificProperty*
		public Assignment getPropertiesAssignment_6_0_2() { return cPropertiesAssignment_6_0_2; }
		
		//TechnologySpecificProperty
		public RuleCall getPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0() { return cPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_0_3() { return cRightCurlyBracketKeyword_6_0_3; }
		
		//';'
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
	}
	public class OperationAspectPointcutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcut");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cForTechnologyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cForTechnologyTechnologyKeyword_0_0 = (Keyword)cForTechnologyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTechnologyEObjectCrossReference_2_0 = (CrossReference)cTechnologyAssignment_2.eContents().get(0);
		private final RuleCall cTechnologyEObjectIDTerminalRuleCall_2_0_1 = (RuleCall)cTechnologyEObjectCrossReference_2_0.eContents().get(1);
		
		//OperationAspectPointcut:
		//	forTechnology?='technology' '=' technology=[ecore::EObject];
		@Override public ParserRule getRule() { return rule; }
		
		//forTechnology?='technology' '=' technology=[ecore::EObject]
		public Group getGroup() { return cGroup; }
		
		//forTechnology?='technology'
		public Assignment getForTechnologyAssignment_0() { return cForTechnologyAssignment_0; }
		
		//'technology'
		public Keyword getForTechnologyTechnologyKeyword_0_0() { return cForTechnologyTechnologyKeyword_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//technology=[ecore::EObject]
		public Assignment getTechnologyAssignment_2() { return cTechnologyAssignment_2; }
		
		//[ecore::EObject]
		public CrossReference getTechnologyEObjectCrossReference_2_0() { return cTechnologyEObjectCrossReference_2_0; }
		
		//ID
		public RuleCall getTechnologyEObjectIDTerminalRuleCall_2_0_1() { return cTechnologyEObjectIDTerminalRuleCall_2_0_1; }
	}
	public class OperationAspectPointcutSelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcutSelector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPointcutsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPointcutsOperationAspectPointcutParserRuleCall_2_0 = (RuleCall)cPointcutsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPointcutsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPointcutsOperationAspectPointcutParserRuleCall_3_1_0 = (RuleCall)cPointcutsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OperationAspectPointcutSelector:
		//	'selector' '('
		//	pointcuts+=OperationAspectPointcut (',' pointcuts+=OperationAspectPointcut)*
		//	')' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'selector' '(' pointcuts+=OperationAspectPointcut (',' pointcuts+=OperationAspectPointcut)* ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'selector'
		public Keyword getSelectorKeyword_0() { return cSelectorKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//pointcuts+=OperationAspectPointcut
		public Assignment getPointcutsAssignment_2() { return cPointcutsAssignment_2; }
		
		//OperationAspectPointcut
		public RuleCall getPointcutsOperationAspectPointcutParserRuleCall_2_0() { return cPointcutsOperationAspectPointcutParserRuleCall_2_0; }
		
		//(',' pointcuts+=OperationAspectPointcut)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//pointcuts+=OperationAspectPointcut
		public Assignment getPointcutsAssignment_3_1() { return cPointcutsAssignment_3_1; }
		
		//OperationAspectPointcut
		public RuleCall getPointcutsOperationAspectPointcutParserRuleCall_3_1_0() { return cPointcutsOperationAspectPointcutParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class OperationAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.OperationAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAspectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFeaturesAspectFeatureEnumRuleCall_2_1_0 = (RuleCall)cFeaturesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cFeaturesAspectFeatureEnumRuleCall_2_2_1_0 = (RuleCall)cFeaturesAssignment_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cForKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cJoinPointsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cJoinPointsOperationJoinPointTypeEnumRuleCall_4_0 = (RuleCall)cJoinPointsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cJoinPointsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cJoinPointsOperationJoinPointTypeEnumRuleCall_5_1_0 = (RuleCall)cJoinPointsAssignment_5_1.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cPointcutSelectorsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cPointcutSelectorsOperationAspectPointcutSelectorParserRuleCall_6_0_1_0 = (RuleCall)cPointcutSelectorsAssignment_6_0_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_6_0_2 = (Assignment)cGroup_6_0.eContents().get(2);
		private final RuleCall cPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0 = (RuleCall)cPropertiesAssignment_6_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_0_3 = (Keyword)cGroup_6_0.eContents().get(3);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		
		//OperationAspect:
		//	'aspect' name=ID ('<'
		//	features+=AspectFeature (',' features+=AspectFeature)*
		//	'>')?
		//	'for' joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)* ('{'
		//	pointcutSelectors+=OperationAspectPointcutSelector*
		//	properties+=TechnologySpecificProperty*
		//	'}' |
		//	';');
		@Override public ParserRule getRule() { return rule; }
		
		//'aspect' name=ID ('<' features+=AspectFeature (',' features+=AspectFeature)* '>')? 'for'
		//joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)* ('{'
		//pointcutSelectors+=OperationAspectPointcutSelector* properties+=TechnologySpecificProperty* '}' | ';')
		public Group getGroup() { return cGroup; }
		
		//'aspect'
		public Keyword getAspectKeyword_0() { return cAspectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('<' features+=AspectFeature (',' features+=AspectFeature)* '>')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }
		
		//features+=AspectFeature
		public Assignment getFeaturesAssignment_2_1() { return cFeaturesAssignment_2_1; }
		
		//AspectFeature
		public RuleCall getFeaturesAspectFeatureEnumRuleCall_2_1_0() { return cFeaturesAspectFeatureEnumRuleCall_2_1_0; }
		
		//(',' features+=AspectFeature)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//features+=AspectFeature
		public Assignment getFeaturesAssignment_2_2_1() { return cFeaturesAssignment_2_2_1; }
		
		//AspectFeature
		public RuleCall getFeaturesAspectFeatureEnumRuleCall_2_2_1_0() { return cFeaturesAspectFeatureEnumRuleCall_2_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }
		
		//'for'
		public Keyword getForKeyword_3() { return cForKeyword_3; }
		
		//joinPoints+=OperationJoinPointType
		public Assignment getJoinPointsAssignment_4() { return cJoinPointsAssignment_4; }
		
		//OperationJoinPointType
		public RuleCall getJoinPointsOperationJoinPointTypeEnumRuleCall_4_0() { return cJoinPointsOperationJoinPointTypeEnumRuleCall_4_0; }
		
		//(',' joinPoints+=OperationJoinPointType)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//joinPoints+=OperationJoinPointType
		public Assignment getJoinPointsAssignment_5_1() { return cJoinPointsAssignment_5_1; }
		
		//OperationJoinPointType
		public RuleCall getJoinPointsOperationJoinPointTypeEnumRuleCall_5_1_0() { return cJoinPointsOperationJoinPointTypeEnumRuleCall_5_1_0; }
		
		//'{' pointcutSelectors+=OperationAspectPointcutSelector* properties+=TechnologySpecificProperty* '}' | ';'
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//'{' pointcutSelectors+=OperationAspectPointcutSelector* properties+=TechnologySpecificProperty* '}'
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_0_0() { return cLeftCurlyBracketKeyword_6_0_0; }
		
		//pointcutSelectors+=OperationAspectPointcutSelector*
		public Assignment getPointcutSelectorsAssignment_6_0_1() { return cPointcutSelectorsAssignment_6_0_1; }
		
		//OperationAspectPointcutSelector
		public RuleCall getPointcutSelectorsOperationAspectPointcutSelectorParserRuleCall_6_0_1_0() { return cPointcutSelectorsOperationAspectPointcutSelectorParserRuleCall_6_0_1_0; }
		
		//properties+=TechnologySpecificProperty*
		public Assignment getPropertiesAssignment_6_0_2() { return cPropertiesAssignment_6_0_2; }
		
		//TechnologySpecificProperty
		public RuleCall getPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0() { return cPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_0_3() { return cRightCurlyBracketKeyword_6_0_3; }
		
		//';'
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
	}
	
	public class ExchangePatternElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.ExchangePattern");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINInKeyword_0_0 = (Keyword)cINEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOUTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOUTOutKeyword_1_0 = (Keyword)cOUTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINOUTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINOUTInoutKeyword_2_0 = (Keyword)cINOUTEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ExchangePattern:
		//	IN='in' | OUT='out' | INOUT='inout';
		public EnumRule getRule() { return rule; }
		
		//IN='in' | OUT='out' | INOUT='inout'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IN='in'
		public EnumLiteralDeclaration getINEnumLiteralDeclaration_0() { return cINEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getINInKeyword_0_0() { return cINInKeyword_0_0; }
		
		//OUT='out'
		public EnumLiteralDeclaration getOUTEnumLiteralDeclaration_1() { return cOUTEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOUTOutKeyword_1_0() { return cOUTOutKeyword_1_0; }
		
		//INOUT='inout'
		public EnumLiteralDeclaration getINOUTEnumLiteralDeclaration_2() { return cINOUTEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getINOUTInoutKeyword_2_0() { return cINOUTInoutKeyword_2_0; }
	}
	public class CommunicationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSYNCHRONOUSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSYNCHRONOUSSyncKeyword_0_0 = (Keyword)cSYNCHRONOUSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cASYNCHRONOUSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cASYNCHRONOUSAsyncKeyword_1_0 = (Keyword)cASYNCHRONOUSEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CommunicationType:
		//	SYNCHRONOUS='sync' | ASYNCHRONOUS='async';
		public EnumRule getRule() { return rule; }
		
		//SYNCHRONOUS='sync' | ASYNCHRONOUS='async'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SYNCHRONOUS='sync'
		public EnumLiteralDeclaration getSYNCHRONOUSEnumLiteralDeclaration_0() { return cSYNCHRONOUSEnumLiteralDeclaration_0; }
		
		//'sync'
		public Keyword getSYNCHRONOUSSyncKeyword_0_0() { return cSYNCHRONOUSSyncKeyword_0_0; }
		
		//ASYNCHRONOUS='async'
		public EnumLiteralDeclaration getASYNCHRONOUSEnumLiteralDeclaration_1() { return cASYNCHRONOUSEnumLiteralDeclaration_1; }
		
		//'async'
		public Keyword getASYNCHRONOUSAsyncKeyword_1_0() { return cASYNCHRONOUSAsyncKeyword_1_0; }
	}
	public class CompatibilityDirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.CompatibilityDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMAPPING_TO_COMPATIBLE_TYPESLessThanSignHyphenMinusKeyword_0_0 = (Keyword)cMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPATIBLE_TYPES_TO_MAPPINGHyphenMinusGreaterThanSignKeyword_1_0 = (Keyword)cCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBIDIRECTIONALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBIDIRECTIONALLessThanSignHyphenMinusGreaterThanSignKeyword_2_0 = (Keyword)cBIDIRECTIONALEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CompatibilityDirection:
		//	MAPPING_TO_COMPATIBLE_TYPES='<-' |
		//	COMPATIBLE_TYPES_TO_MAPPING='->' |
		//	BIDIRECTIONAL='<->';
		public EnumRule getRule() { return rule; }
		
		//MAPPING_TO_COMPATIBLE_TYPES='<-' | COMPATIBLE_TYPES_TO_MAPPING='->' | BIDIRECTIONAL='<->'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MAPPING_TO_COMPATIBLE_TYPES='<-'
		public EnumLiteralDeclaration getMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0() { return cMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0; }
		
		//'<-'
		public Keyword getMAPPING_TO_COMPATIBLE_TYPESLessThanSignHyphenMinusKeyword_0_0() { return cMAPPING_TO_COMPATIBLE_TYPESLessThanSignHyphenMinusKeyword_0_0; }
		
		//COMPATIBLE_TYPES_TO_MAPPING='->'
		public EnumLiteralDeclaration getCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1() { return cCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1; }
		
		//'->'
		public Keyword getCOMPATIBLE_TYPES_TO_MAPPINGHyphenMinusGreaterThanSignKeyword_1_0() { return cCOMPATIBLE_TYPES_TO_MAPPINGHyphenMinusGreaterThanSignKeyword_1_0; }
		
		//BIDIRECTIONAL='<->'
		public EnumLiteralDeclaration getBIDIRECTIONALEnumLiteralDeclaration_2() { return cBIDIRECTIONALEnumLiteralDeclaration_2; }
		
		//'<->'
		public Keyword getBIDIRECTIONALLessThanSignHyphenMinusGreaterThanSignKeyword_2_0() { return cBIDIRECTIONALLessThanSignHyphenMinusGreaterThanSignKeyword_2_0; }
	}
	public class PropertyFeatureElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.PropertyFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMANDATORYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMANDATORYMandatoryKeyword_0_0 = (Keyword)cMANDATORYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSINGLE_VALUEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSINGLE_VALUEDSinglevalKeyword_1_0 = (Keyword)cSINGLE_VALUEDEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PropertyFeature:
		//	MANDATORY='mandatory' |
		//	SINGLE_VALUED='singleval';
		public EnumRule getRule() { return rule; }
		
		//MANDATORY='mandatory' | SINGLE_VALUED='singleval'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MANDATORY='mandatory'
		public EnumLiteralDeclaration getMANDATORYEnumLiteralDeclaration_0() { return cMANDATORYEnumLiteralDeclaration_0; }
		
		//'mandatory'
		public Keyword getMANDATORYMandatoryKeyword_0_0() { return cMANDATORYMandatoryKeyword_0_0; }
		
		//SINGLE_VALUED='singleval'
		public EnumLiteralDeclaration getSINGLE_VALUEDEnumLiteralDeclaration_1() { return cSINGLE_VALUEDEnumLiteralDeclaration_1; }
		
		//'singleval'
		public Keyword getSINGLE_VALUEDSinglevalKeyword_1_0() { return cSINGLE_VALUEDSinglevalKeyword_1_0; }
	}
	public class ServiceJoinPointTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.ServiceJoinPointType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCOMPLEX_TYPESEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCOMPLEX_TYPESTypesKeyword_0_0 = (Keyword)cCOMPLEX_TYPESEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATA_FIELDSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATA_FIELDSFieldsKeyword_1_0 = (Keyword)cDATA_FIELDSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDATA_OPERATIONSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDATA_OPERATIONSDomainOperationsKeyword_2_0 = (Keyword)cDATA_OPERATIONSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDATA_OPERATION_PARAMETERSDomainParametersKeyword_3_0 = (Keyword)cDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMICROSERVICESEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMICROSERVICESMicroservicesKeyword_4_0 = (Keyword)cMICROSERVICESEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cINTERFACESEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cINTERFACESInterfacesKeyword_5_0 = (Keyword)cINTERFACESEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cOPERATIONSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cOPERATIONSOperationsKeyword_6_0 = (Keyword)cOPERATIONSEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cPARAMETERSEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cPARAMETERSParametersKeyword_7_0 = (Keyword)cPARAMETERSEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum ServiceJoinPointType returns JoinPointType:
		//	COMPLEX_TYPES='types' |
		//	DATA_FIELDS='fields' |
		//	DATA_OPERATIONS='domainOperations' |
		//	DATA_OPERATION_PARAMETERS='domainParameters' |
		//	MICROSERVICES='microservices' |
		//	INTERFACES='interfaces' |
		//	OPERATIONS='operations' |
		//	PARAMETERS='parameters';
		public EnumRule getRule() { return rule; }
		
		//COMPLEX_TYPES='types' | DATA_FIELDS='fields' | DATA_OPERATIONS='domainOperations' |
		//DATA_OPERATION_PARAMETERS='domainParameters' | MICROSERVICES='microservices' | INTERFACES='interfaces' |
		//OPERATIONS='operations' | PARAMETERS='parameters'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//COMPLEX_TYPES='types'
		public EnumLiteralDeclaration getCOMPLEX_TYPESEnumLiteralDeclaration_0() { return cCOMPLEX_TYPESEnumLiteralDeclaration_0; }
		
		//'types'
		public Keyword getCOMPLEX_TYPESTypesKeyword_0_0() { return cCOMPLEX_TYPESTypesKeyword_0_0; }
		
		//DATA_FIELDS='fields'
		public EnumLiteralDeclaration getDATA_FIELDSEnumLiteralDeclaration_1() { return cDATA_FIELDSEnumLiteralDeclaration_1; }
		
		//'fields'
		public Keyword getDATA_FIELDSFieldsKeyword_1_0() { return cDATA_FIELDSFieldsKeyword_1_0; }
		
		//DATA_OPERATIONS='domainOperations'
		public EnumLiteralDeclaration getDATA_OPERATIONSEnumLiteralDeclaration_2() { return cDATA_OPERATIONSEnumLiteralDeclaration_2; }
		
		//'domainOperations'
		public Keyword getDATA_OPERATIONSDomainOperationsKeyword_2_0() { return cDATA_OPERATIONSDomainOperationsKeyword_2_0; }
		
		//DATA_OPERATION_PARAMETERS='domainParameters'
		public EnumLiteralDeclaration getDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3() { return cDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3; }
		
		//'domainParameters'
		public Keyword getDATA_OPERATION_PARAMETERSDomainParametersKeyword_3_0() { return cDATA_OPERATION_PARAMETERSDomainParametersKeyword_3_0; }
		
		//MICROSERVICES='microservices'
		public EnumLiteralDeclaration getMICROSERVICESEnumLiteralDeclaration_4() { return cMICROSERVICESEnumLiteralDeclaration_4; }
		
		//'microservices'
		public Keyword getMICROSERVICESMicroservicesKeyword_4_0() { return cMICROSERVICESMicroservicesKeyword_4_0; }
		
		//INTERFACES='interfaces'
		public EnumLiteralDeclaration getINTERFACESEnumLiteralDeclaration_5() { return cINTERFACESEnumLiteralDeclaration_5; }
		
		//'interfaces'
		public Keyword getINTERFACESInterfacesKeyword_5_0() { return cINTERFACESInterfacesKeyword_5_0; }
		
		//OPERATIONS='operations'
		public EnumLiteralDeclaration getOPERATIONSEnumLiteralDeclaration_6() { return cOPERATIONSEnumLiteralDeclaration_6; }
		
		//'operations'
		public Keyword getOPERATIONSOperationsKeyword_6_0() { return cOPERATIONSOperationsKeyword_6_0; }
		
		//PARAMETERS='parameters'
		public EnumLiteralDeclaration getPARAMETERSEnumLiteralDeclaration_7() { return cPARAMETERSEnumLiteralDeclaration_7; }
		
		//'parameters'
		public Keyword getPARAMETERSParametersKeyword_7_0() { return cPARAMETERSParametersKeyword_7_0; }
	}
	public class AspectFeatureElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
		private final EnumLiteralDeclaration cSINGLE_VALUEDEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cSINGLE_VALUEDSinglevalKeyword_0 = (Keyword)cSINGLE_VALUEDEnumLiteralDeclaration.eContents().get(0);
		
		//enum AspectFeature:
		//	SINGLE_VALUED='singleval';
		public EnumRule getRule() { return rule; }
		
		//SINGLE_VALUED='singleval'
		public EnumLiteralDeclaration getSINGLE_VALUEDEnumLiteralDeclaration() { return cSINGLE_VALUEDEnumLiteralDeclaration; }
		
		//'singleval'
		public Keyword getSINGLE_VALUEDSinglevalKeyword_0() { return cSINGLE_VALUEDSinglevalKeyword_0; }
	}
	public class OperationJoinPointTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.technology.TechnologyDsl.OperationJoinPointType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCONTAINERSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCONTAINERSContainersKeyword_0_0 = (Keyword)cCONTAINERSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINFRASTRUCTURE_NODESEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINFRASTRUCTURE_NODESInfrastructureKeyword_1_0 = (Keyword)cINFRASTRUCTURE_NODESEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum OperationJoinPointType returns JoinPointType:
		//	CONTAINERS='containers' | INFRASTRUCTURE_NODES='infrastructure';
		public EnumRule getRule() { return rule; }
		
		//CONTAINERS='containers' | INFRASTRUCTURE_NODES='infrastructure'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CONTAINERS='containers'
		public EnumLiteralDeclaration getCONTAINERSEnumLiteralDeclaration_0() { return cCONTAINERSEnumLiteralDeclaration_0; }
		
		//'containers'
		public Keyword getCONTAINERSContainersKeyword_0_0() { return cCONTAINERSContainersKeyword_0_0; }
		
		//INFRASTRUCTURE_NODES='infrastructure'
		public EnumLiteralDeclaration getINFRASTRUCTURE_NODESEnumLiteralDeclaration_1() { return cINFRASTRUCTURE_NODESEnumLiteralDeclaration_1; }
		
		//'infrastructure'
		public Keyword getINFRASTRUCTURE_NODESInfrastructureKeyword_1_0() { return cINFRASTRUCTURE_NODESInfrastructureKeyword_1_0; }
	}
	
	private final TechnologyElements pTechnology;
	private final TechnologyImportElements pTechnologyImport;
	private final ProtocolElements pProtocol;
	private final ExchangePatternElements eExchangePattern;
	private final CommunicationTypeElements eCommunicationType;
	private final DataFormatElements pDataFormat;
	private final TechnologySpecificPrimitiveTypeElements pTechnologySpecificPrimitiveType;
	private final TechnologySpecificListTypeElements pTechnologySpecificListType;
	private final TechnologySpecificDataStructureElements pTechnologySpecificDataStructure;
	private final PossiblyImportedTechnologySpecificTypeElements pPossiblyImportedTechnologySpecificType;
	private final CompatibilityDirectionElements eCompatibilityDirection;
	private final CompatibilityMatrixEntryElements pCompatibilityMatrixEntry;
	private final DeploymentTechnologyElements pDeploymentTechnology;
	private final InfrastructureTechnologyElements pInfrastructureTechnology;
	private final OperationEnvironmentElements pOperationEnvironment;
	private final PropertyFeatureElements ePropertyFeature;
	private final TechnologySpecificPropertyElements pTechnologySpecificProperty;
	private final ServiceJoinPointTypeElements eServiceJoinPointType;
	private final ServiceAspectPointcutElements pServiceAspectPointcut;
	private final ServiceAspectPointcutSelectorElements pServiceAspectPointcutSelector;
	private final AspectFeatureElements eAspectFeature;
	private final ServiceAspectElements pServiceAspect;
	private final OperationJoinPointTypeElements eOperationJoinPointType;
	private final OperationAspectPointcutElements pOperationAspectPointcut;
	private final OperationAspectPointcutSelectorElements pOperationAspectPointcutSelector;
	private final OperationAspectElements pOperationAspect;
	
	private final Grammar grammar;
	
	private final DataDslGrammarAccess gaDataDsl;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TechnologyDslGrammarAccess(GrammarProvider grammarProvider,
			DataDslGrammarAccess gaDataDsl,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaDataDsl = gaDataDsl;
		this.gaTerminals = gaTerminals;
		this.pTechnology = new TechnologyElements();
		this.pTechnologyImport = new TechnologyImportElements();
		this.pProtocol = new ProtocolElements();
		this.eExchangePattern = new ExchangePatternElements();
		this.eCommunicationType = new CommunicationTypeElements();
		this.pDataFormat = new DataFormatElements();
		this.pTechnologySpecificPrimitiveType = new TechnologySpecificPrimitiveTypeElements();
		this.pTechnologySpecificListType = new TechnologySpecificListTypeElements();
		this.pTechnologySpecificDataStructure = new TechnologySpecificDataStructureElements();
		this.pPossiblyImportedTechnologySpecificType = new PossiblyImportedTechnologySpecificTypeElements();
		this.eCompatibilityDirection = new CompatibilityDirectionElements();
		this.pCompatibilityMatrixEntry = new CompatibilityMatrixEntryElements();
		this.pDeploymentTechnology = new DeploymentTechnologyElements();
		this.pInfrastructureTechnology = new InfrastructureTechnologyElements();
		this.pOperationEnvironment = new OperationEnvironmentElements();
		this.ePropertyFeature = new PropertyFeatureElements();
		this.pTechnologySpecificProperty = new TechnologySpecificPropertyElements();
		this.eServiceJoinPointType = new ServiceJoinPointTypeElements();
		this.pServiceAspectPointcut = new ServiceAspectPointcutElements();
		this.pServiceAspectPointcutSelector = new ServiceAspectPointcutSelectorElements();
		this.eAspectFeature = new AspectFeatureElements();
		this.pServiceAspect = new ServiceAspectElements();
		this.eOperationJoinPointType = new OperationJoinPointTypeElements();
		this.pOperationAspectPointcut = new OperationAspectPointcutElements();
		this.pOperationAspectPointcutSelector = new OperationAspectPointcutSelectorElements();
		this.pOperationAspect = new OperationAspectElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fhdo.lemma.technology.TechnologyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public DataDslGrammarAccess getDataDslGrammarAccess() {
		return gaDataDsl;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Technology:
	//	imports+=TechnologyImport*
	//	'technology' name=ID '{' ('types' '{' (primitiveTypes+=TechnologySpecificPrimitiveType |
	//	listTypes+=TechnologySpecificListType | dataStructures+=TechnologySpecificDataStructure)+ ('compatibility' 'matrix'
	//	'{'
	//	compatibilityEntries+=CompatibilityMatrixEntry+
	//	'}')?
	//	'}')? ('protocols' '{'
	//	protocols+=Protocol+
	//	'}')? ('service' 'aspects' '{'
	//	serviceAspects+=ServiceAspect+
	//	'}')? ('deployment' 'technologies' '{'
	//	deploymentTechnologies+=DeploymentTechnology+
	//	'}')? ('infrastructure' 'technologies' '{'
	//	infrastructureTechnologies+=InfrastructureTechnology+
	//	'}')? ('operation' 'aspects' '{'
	//	operationAspects+=OperationAspect+
	//	'}')?
	//	'}';
	public TechnologyElements getTechnologyAccess() {
		return pTechnology;
	}
	
	public ParserRule getTechnologyRule() {
		return getTechnologyAccess().getRule();
	}
	
	//TechnologyImport:
	//	'import' 'technology' 'from' importURI=STRING 'as' name=ID;
	public TechnologyImportElements getTechnologyImportAccess() {
		return pTechnologyImport;
	}
	
	public ParserRule getTechnologyImportRule() {
		return getTechnologyImportAccess().getRule();
	}
	
	//Protocol:
	//	communicationType=CommunicationType
	//	name=ID
	//	'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)* (default?='default' 'with' 'format'
	//	defaultFormat=[DataFormat])?
	//	';';
	public ProtocolElements getProtocolAccess() {
		return pProtocol;
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//enum ExchangePattern:
	//	IN='in' | OUT='out' | INOUT='inout';
	public ExchangePatternElements getExchangePatternAccess() {
		return eExchangePattern;
	}
	
	public EnumRule getExchangePatternRule() {
		return getExchangePatternAccess().getRule();
	}
	
	//enum CommunicationType:
	//	SYNCHRONOUS='sync' | ASYNCHRONOUS='async';
	public CommunicationTypeElements getCommunicationTypeAccess() {
		return eCommunicationType;
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}
	
	//DataFormat:
	//	formatName=ID;
	public DataFormatElements getDataFormatAccess() {
		return pDataFormat;
	}
	
	public ParserRule getDataFormatRule() {
		return getDataFormatAccess().getRule();
	}
	
	//TechnologySpecificPrimitiveType:
	//	'primitive' 'type' name=ID ('based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType (','
	//	basicBuiltinPrimitiveTypes+=PrimitiveType)*
	//	default?='default'?)? ';';
	public TechnologySpecificPrimitiveTypeElements getTechnologySpecificPrimitiveTypeAccess() {
		return pTechnologySpecificPrimitiveType;
	}
	
	public ParserRule getTechnologySpecificPrimitiveTypeRule() {
		return getTechnologySpecificPrimitiveTypeAccess().getRule();
	}
	
	//TechnologySpecificListType:
	//	'list' 'type' name=ID ';';
	public TechnologySpecificListTypeElements getTechnologySpecificListTypeAccess() {
		return pTechnologySpecificListType;
	}
	
	public ParserRule getTechnologySpecificListTypeRule() {
		return getTechnologySpecificListTypeAccess().getRule();
	}
	
	//TechnologySpecificDataStructure:
	//	'structure' 'type' name=ID ';';
	public TechnologySpecificDataStructureElements getTechnologySpecificDataStructureAccess() {
		return pTechnologySpecificDataStructure;
	}
	
	public ParserRule getTechnologySpecificDataStructureRule() {
		return getTechnologySpecificDataStructureAccess().getRule();
	}
	
	//PossiblyImportedTechnologySpecificType:
	//	(^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName];
	public PossiblyImportedTechnologySpecificTypeElements getPossiblyImportedTechnologySpecificTypeAccess() {
		return pPossiblyImportedTechnologySpecificType;
	}
	
	public ParserRule getPossiblyImportedTechnologySpecificTypeRule() {
		return getPossiblyImportedTechnologySpecificTypeAccess().getRule();
	}
	
	//enum CompatibilityDirection:
	//	MAPPING_TO_COMPATIBLE_TYPES='<-' |
	//	COMPATIBLE_TYPES_TO_MAPPING='->' |
	//	BIDIRECTIONAL='<->';
	public CompatibilityDirectionElements getCompatibilityDirectionAccess() {
		return eCompatibilityDirection;
	}
	
	public EnumRule getCompatibilityDirectionRule() {
		return getCompatibilityDirectionAccess().getRule();
	}
	
	//CompatibilityMatrixEntry:
	//	compatibleTypes+=PossiblyImportedTechnologySpecificType (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
	//	direction=CompatibilityDirection
	//	mappingType=PossiblyImportedTechnologySpecificType
	//	';';
	public CompatibilityMatrixEntryElements getCompatibilityMatrixEntryAccess() {
		return pCompatibilityMatrixEntry;
	}
	
	public ParserRule getCompatibilityMatrixEntryRule() {
		return getCompatibilityMatrixEntryAccess().getRule();
	}
	
	//DeploymentTechnology:
	//	name=ID '{'
	//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
	//	operationEnvironments+=OperationEnvironment)*
	//	';' ('service' 'properties' '{'
	//	serviceProperties+=TechnologySpecificProperty+
	//	'}')?
	//	'}';
	public DeploymentTechnologyElements getDeploymentTechnologyAccess() {
		return pDeploymentTechnology;
	}
	
	public ParserRule getDeploymentTechnologyRule() {
		return getDeploymentTechnologyAccess().getRule();
	}
	
	//InfrastructureTechnology:
	//	name=ID '{'
	//	'operation' 'environments' '=' operationEnvironments+=OperationEnvironment (','
	//	operationEnvironments+=OperationEnvironment)*
	//	';' ('service' 'properties' '{'
	//	serviceProperties+=TechnologySpecificProperty+
	//	'}')?
	//	'}';
	public InfrastructureTechnologyElements getInfrastructureTechnologyAccess() {
		return pInfrastructureTechnology;
	}
	
	public ParserRule getInfrastructureTechnologyRule() {
		return getInfrastructureTechnologyAccess().getRule();
	}
	
	//OperationEnvironment:
	//	environmentName=STRING default?='default'?;
	public OperationEnvironmentElements getOperationEnvironmentAccess() {
		return pOperationEnvironment;
	}
	
	public ParserRule getOperationEnvironmentRule() {
		return getOperationEnvironmentAccess().getRule();
	}
	
	//enum PropertyFeature:
	//	MANDATORY='mandatory' |
	//	SINGLE_VALUED='singleval';
	public PropertyFeatureElements getPropertyFeatureAccess() {
		return ePropertyFeature;
	}
	
	public EnumRule getPropertyFeatureRule() {
		return getPropertyFeatureAccess().getRule();
	}
	
	//TechnologySpecificProperty:
	//	type=PrimitiveType name=ID ('=' defaultValue=PrimitiveValue)? ('<'
	//	features+=PropertyFeature (',' features+=PropertyFeature)*
	//	'>')?
	//	';';
	public TechnologySpecificPropertyElements getTechnologySpecificPropertyAccess() {
		return pTechnologySpecificProperty;
	}
	
	public ParserRule getTechnologySpecificPropertyRule() {
		return getTechnologySpecificPropertyAccess().getRule();
	}
	
	//enum ServiceJoinPointType returns JoinPointType:
	//	COMPLEX_TYPES='types' |
	//	DATA_FIELDS='fields' |
	//	DATA_OPERATIONS='domainOperations' |
	//	DATA_OPERATION_PARAMETERS='domainParameters' |
	//	MICROSERVICES='microservices' |
	//	INTERFACES='interfaces' |
	//	OPERATIONS='operations' |
	//	PARAMETERS='parameters';
	public ServiceJoinPointTypeElements getServiceJoinPointTypeAccess() {
		return eServiceJoinPointType;
	}
	
	public EnumRule getServiceJoinPointTypeRule() {
		return getServiceJoinPointTypeAccess().getRule();
	}
	
	//ServiceAspectPointcut:
	//	forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern |
	//	forCommunicationType?='communication_type' '=' communicationType=CommunicationType | forProtocol?='protocol' '='
	//	protocol=[Protocol] | forDataFormat?='data_format' '=' dataFormat=[DataFormat];
	public ServiceAspectPointcutElements getServiceAspectPointcutAccess() {
		return pServiceAspectPointcut;
	}
	
	public ParserRule getServiceAspectPointcutRule() {
		return getServiceAspectPointcutAccess().getRule();
	}
	
	//ServiceAspectPointcutSelector:
	//	'selector' '('
	//	pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)*
	//	')' ';';
	public ServiceAspectPointcutSelectorElements getServiceAspectPointcutSelectorAccess() {
		return pServiceAspectPointcutSelector;
	}
	
	public ParserRule getServiceAspectPointcutSelectorRule() {
		return getServiceAspectPointcutSelectorAccess().getRule();
	}
	
	//enum AspectFeature:
	//	SINGLE_VALUED='singleval';
	public AspectFeatureElements getAspectFeatureAccess() {
		return eAspectFeature;
	}
	
	public EnumRule getAspectFeatureRule() {
		return getAspectFeatureAccess().getRule();
	}
	
	//ServiceAspect:
	//	'aspect' name=ID ('<'
	//	features+=AspectFeature (',' features+=AspectFeature)*
	//	'>')?
	//	'for' joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)* ('{'
	//	pointcutSelectors+=ServiceAspectPointcutSelector*
	//	properties+=TechnologySpecificProperty*
	//	'}' |
	//	';');
	public ServiceAspectElements getServiceAspectAccess() {
		return pServiceAspect;
	}
	
	public ParserRule getServiceAspectRule() {
		return getServiceAspectAccess().getRule();
	}
	
	//enum OperationJoinPointType returns JoinPointType:
	//	CONTAINERS='containers' | INFRASTRUCTURE_NODES='infrastructure';
	public OperationJoinPointTypeElements getOperationJoinPointTypeAccess() {
		return eOperationJoinPointType;
	}
	
	public EnumRule getOperationJoinPointTypeRule() {
		return getOperationJoinPointTypeAccess().getRule();
	}
	
	//OperationAspectPointcut:
	//	forTechnology?='technology' '=' technology=[ecore::EObject];
	public OperationAspectPointcutElements getOperationAspectPointcutAccess() {
		return pOperationAspectPointcut;
	}
	
	public ParserRule getOperationAspectPointcutRule() {
		return getOperationAspectPointcutAccess().getRule();
	}
	
	//OperationAspectPointcutSelector:
	//	'selector' '('
	//	pointcuts+=OperationAspectPointcut (',' pointcuts+=OperationAspectPointcut)*
	//	')' ';';
	public OperationAspectPointcutSelectorElements getOperationAspectPointcutSelectorAccess() {
		return pOperationAspectPointcutSelector;
	}
	
	public ParserRule getOperationAspectPointcutSelectorRule() {
		return getOperationAspectPointcutSelectorAccess().getRule();
	}
	
	//OperationAspect:
	//	'aspect' name=ID ('<'
	//	features+=AspectFeature (',' features+=AspectFeature)*
	//	'>')?
	//	'for' joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)* ('{'
	//	pointcutSelectors+=OperationAspectPointcutSelector*
	//	properties+=TechnologySpecificProperty*
	//	'}' |
	//	';');
	public OperationAspectElements getOperationAspectAccess() {
		return pOperationAspect;
	}
	
	public ParserRule getOperationAspectRule() {
		return getOperationAspectAccess().getRule();
	}
	
	//DataModel:
	//	complexTypeImports+=ComplexTypeImport* (versions+=Version+ | contexts+=Context+ | complexTypes+=ComplexType+);
	public DataDslGrammarAccess.DataModelElements getDataModelAccess() {
		return gaDataDsl.getDataModelAccess();
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}
	
	//ComplexTypeImport:
	//	'import' 'datatypes' 'from' importURI=STRING 'as' name=ID;
	public DataDslGrammarAccess.ComplexTypeImportElements getComplexTypeImportAccess() {
		return gaDataDsl.getComplexTypeImportAccess();
	}
	
	public ParserRule getComplexTypeImportRule() {
		return getComplexTypeImportAccess().getRule();
	}
	
	//Version:
	//	'version' name=ID '{' (complexTypes+=ComplexType+ | contexts+=Context+)?
	//	'}';
	public DataDslGrammarAccess.VersionElements getVersionAccess() {
		return gaDataDsl.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//Context:
	//	'context' name=ID '{'
	//	complexTypes+=ComplexType+
	//	'}';
	public DataDslGrammarAccess.ContextElements getContextAccess() {
		return gaDataDsl.getContextAccess();
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//ComplexType:
	//	DataStructure | ListType | Enumeration;
	public DataDslGrammarAccess.ComplexTypeElements getComplexTypeAccess() {
		return gaDataDsl.getComplexTypeAccess();
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//enum DataStructureFeature:
	//	AGGREGATE='aggregate' |
	//	APPLICATION_SERVICE='applicationService' |
	//	DOMAIN_EVENT='domainEvent' |
	//	DOMAIN_SERVICE='domainService' |
	//	ENTITY='entity' |
	//	FACTORY='factory' |
	//	INFRASTRUCTURE_SERVICE='infrastructureService' |
	//	REPOSITORY='repository' |
	//	SERVICE='service' |
	//	SPECIFICATION='specification' |
	//	VALUE_OBJECT='valueObject';
	public DataDslGrammarAccess.DataStructureFeatureElements getDataStructureFeatureAccess() {
		return gaDataDsl.getDataStructureFeatureAccess();
	}
	
	public EnumRule getDataStructureFeatureRule() {
		return getDataStructureFeatureAccess().getRule();
	}
	
	//DataStructure:
	//	'structure' name=ID ('<' features+=DataStructureFeature (',' features+=DataStructureFeature)* '>')? ('extends'
	//	super=[DataStructure|QualifiedName])? '{' ((dataFields+=DataField | operations+=DataOperation) (','
	//	(dataFields+=DataField | operations+=DataOperation))*)?
	//	'}';
	public DataDslGrammarAccess.DataStructureElements getDataStructureAccess() {
		return gaDataDsl.getDataStructureAccess();
	}
	
	public ParserRule getDataStructureRule() {
		return getDataStructureAccess().getRule();
	}
	
	//ListType:
	//	'list' name=ID '{'
	//	dataFields+=DataField (',' dataFields+=DataField)*
	//	'}'
	//	|
	//	'list' name=ID '{'
	//	primitiveType=PrimitiveType
	//	'}';
	public DataDslGrammarAccess.ListTypeElements getListTypeAccess() {
		return gaDataDsl.getListTypeAccess();
	}
	
	public ParserRule getListTypeRule() {
		return getListTypeAccess().getRule();
	}
	
	//enum DataFieldFeature:
	//	IDENTIFIER='identifier' |
	//	NEVER_EMPTY='neverEmpty' |
	//	PART='part';
	public DataDslGrammarAccess.DataFieldFeatureElements getDataFieldFeatureAccess() {
		return gaDataDsl.getDataFieldFeatureAccess();
	}
	
	public EnumRule getDataFieldFeatureRule() {
		return getDataFieldFeatureAccess().getRule();
	}
	
	//DataField:
	//	^hidden?='hide'?
	//	immutable?='immutable'? (primitiveType=PrimitiveType | complexType=[ComplexType|QualifiedName] |
	//	importedComplexType=ImportedComplexType)?
	//	name=ID ('=' initializationValue=PrimitiveValue)? ('<' features+=DataFieldFeature (',' features+=DataFieldFeature)*
	//	'>')?;
	public DataDslGrammarAccess.DataFieldElements getDataFieldAccess() {
		return gaDataDsl.getDataFieldAccess();
	}
	
	public ParserRule getDataFieldRule() {
		return getDataFieldAccess().getRule();
	}
	
	//Enumeration:
	//	'enum' name=ID '{'
	//	fields+=EnumerationField (',' fields+=EnumerationField)*
	//	'}';
	public DataDslGrammarAccess.EnumerationElements getEnumerationAccess() {
		return gaDataDsl.getEnumerationAccess();
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//EnumerationField:
	//	name=ID ('(' initializationValue=PrimitiveValue ')')?;
	public DataDslGrammarAccess.EnumerationFieldElements getEnumerationFieldAccess() {
		return gaDataDsl.getEnumerationFieldAccess();
	}
	
	public ParserRule getEnumerationFieldRule() {
		return getEnumerationFieldAccess().getRule();
	}
	
	//enum DataOperationFeature:
	//	CLOSURE='closure' |
	//	IDENTIFIER='identifier' |
	//	SIDE_EFFECT_FREE='sideEffectFree' |
	//	VALIDATOR='validator';
	public DataDslGrammarAccess.DataOperationFeatureElements getDataOperationFeatureAccess() {
		return gaDataDsl.getDataOperationFeatureAccess();
	}
	
	public EnumRule getDataOperationFeatureRule() {
		return getDataOperationFeatureAccess().getRule();
	}
	
	//DataOperation:
	//	^hidden?='hide'? (hasNoReturnType?='procedure' |
	//	'function' (primitiveReturnType=PrimitiveType | complexReturnType=[ComplexType|QualifiedName] |
	//	importedComplexReturnType=ImportedComplexType)?) name=ID ('(' parameters+=DataOperationParameter? (','
	//	parameters+=DataOperationParameter)* ')')? ('<' features+=DataOperationFeature (',' features+=DataOperationFeature)*
	//	'>')?;
	public DataDslGrammarAccess.DataOperationElements getDataOperationAccess() {
		return gaDataDsl.getDataOperationAccess();
	}
	
	public ParserRule getDataOperationRule() {
		return getDataOperationAccess().getRule();
	}
	
	//DataOperationParameter:
	//	(primitiveType=PrimitiveType | complexType=[ComplexType|QualifiedName] | importedComplexType=ImportedComplexType)
	//	name=ID;
	public DataDslGrammarAccess.DataOperationParameterElements getDataOperationParameterAccess() {
		return gaDataDsl.getDataOperationParameterAccess();
	}
	
	public ParserRule getDataOperationParameterRule() {
		return getDataOperationParameterAccess().getRule();
	}
	
	//PrimitiveValue:
	//	numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING;
	public DataDslGrammarAccess.PrimitiveValueElements getPrimitiveValueAccess() {
		return gaDataDsl.getPrimitiveValueAccess();
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//ImportedComplexType:
	//	^import=[ComplexTypeImport] '::' importedType=[Type|QualifiedName];
	public DataDslGrammarAccess.ImportedComplexTypeElements getImportedComplexTypeAccess() {
		return gaDataDsl.getImportedComplexTypeAccess();
	}
	
	public ParserRule getImportedComplexTypeRule() {
		return getImportedComplexTypeAccess().getRule();
	}
	
	//PrimitiveType:
	//	{PrimitiveBoolean} 'boolean' | {PrimitiveByte} 'byte' | {PrimitiveCharacter} 'char' | {PrimitiveDate} 'date' |
	//	{PrimitiveDouble} 'double' | {PrimitiveFloat} 'float' | {PrimitiveInteger} 'int' | {PrimitiveLong} 'long' |
	//	{PrimitiveShort} 'short' | {PrimitiveString} 'string' | {PrimitiveUnspecified} 'unspecified';
	public DataDslGrammarAccess.PrimitiveTypeElements getPrimitiveTypeAccess() {
		return gaDataDsl.getPrimitiveTypeAccess();
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public DataDslGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaDataDsl.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal BIG_DECIMAL returns ecore::EBigDecimal:
	//	'-'? INT ('.' INT)?;
	public TerminalRule getBIG_DECIMALRule() {
		return gaDataDsl.getBIG_DECIMALRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return gaDataDsl.getBOOLEANRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
