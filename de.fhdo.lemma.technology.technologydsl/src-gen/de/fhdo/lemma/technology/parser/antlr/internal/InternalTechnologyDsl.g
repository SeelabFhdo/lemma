/*
 * generated by Xtext 2.32.0
 */
grammar InternalTechnologyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.fhdo.lemma.technology.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fhdo.lemma.technology.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fhdo.lemma.technology.services.TechnologyDslGrammarAccess;

}

@parser::members {

 	private TechnologyDslGrammarAccess grammarAccess;

    public InternalTechnologyDslParser(TokenStream input, TechnologyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Technology";
   	}

   	@Override
   	protected TechnologyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTechnology
entryRuleTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyRule()); }
	iv_ruleTechnology=ruleTechnology
	{ $current=$iv_ruleTechnology.current; }
	EOF;

// Rule Technology
ruleTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologyAccess().getImportsTechnologyImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleTechnologyImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologyRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"de.fhdo.lemma.technology.TechnologyDsl.TechnologyImport");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='technology'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologyAccess().getTechnologyKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='types'
			{
				newLeafNode(otherlv_4, grammarAccess.getTechnologyAccess().getTypesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologyAccess().getPrimitiveTypesTechnologySpecificPrimitiveTypeParserRuleCall_4_2_0_0());
						}
						lv_primitiveTypes_6_0=ruleTechnologySpecificPrimitiveType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologyRule());
							}
							add(
								$current,
								"primitiveTypes",
								lv_primitiveTypes_6_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificPrimitiveType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologyAccess().getCollectionTypesTechnologySpecificCollectionTypeParserRuleCall_4_2_1_0());
						}
						lv_collectionTypes_7_0=ruleTechnologySpecificCollectionType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologyRule());
							}
							add(
								$current,
								"collectionTypes",
								lv_collectionTypes_7_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificCollectionType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologyAccess().getDataStructuresTechnologySpecificDataStructureParserRuleCall_4_2_2_0());
						}
						lv_dataStructures_8_0=ruleTechnologySpecificDataStructure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologyRule());
							}
							add(
								$current,
								"dataStructures",
								lv_dataStructures_8_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificDataStructure");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)+
			(
				otherlv_9='compatibility'
				{
					newLeafNode(otherlv_9, grammarAccess.getTechnologyAccess().getCompatibilityKeyword_4_3_0());
				}
				otherlv_10='matrix'
				{
					newLeafNode(otherlv_10, grammarAccess.getTechnologyAccess().getMatrixKeyword_4_3_1());
				}
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_4_3_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologyAccess().getCompatibilityEntriesCompatibilityMatrixEntryParserRuleCall_4_3_3_0());
						}
						lv_compatibilityEntries_12_0=ruleCompatibilityMatrixEntry
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologyRule());
							}
							add(
								$current,
								"compatibilityEntries",
								lv_compatibilityEntries_12_0,
								"de.fhdo.lemma.technology.TechnologyDsl.CompatibilityMatrixEntry");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_13='}'
				{
					newLeafNode(otherlv_13, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_4_3_4());
				}
			)?
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_15='protocols'
			{
				newLeafNode(otherlv_15, grammarAccess.getTechnologyAccess().getProtocolsKeyword_5_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologyAccess().getProtocolsProtocolParserRuleCall_5_2_0());
					}
					lv_protocols_17_0=ruleProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologyRule());
						}
						add(
							$current,
							"protocols",
							lv_protocols_17_0,
							"de.fhdo.lemma.technology.TechnologyDsl.Protocol");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			otherlv_19='service'
			{
				newLeafNode(otherlv_19, grammarAccess.getTechnologyAccess().getServiceKeyword_6_0());
			}
			otherlv_20='aspects'
			{
				newLeafNode(otherlv_20, grammarAccess.getTechnologyAccess().getAspectsKeyword_6_1());
			}
			otherlv_21='{'
			{
				newLeafNode(otherlv_21, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologyAccess().getServiceAspectsServiceAspectParserRuleCall_6_3_0());
					}
					lv_serviceAspects_22_0=ruleServiceAspect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologyRule());
						}
						add(
							$current,
							"serviceAspects",
							lv_serviceAspects_22_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspect");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_24='deployment'
			{
				newLeafNode(otherlv_24, grammarAccess.getTechnologyAccess().getDeploymentKeyword_7_0());
			}
			otherlv_25='technologies'
			{
				newLeafNode(otherlv_25, grammarAccess.getTechnologyAccess().getTechnologiesKeyword_7_1());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologyAccess().getDeploymentTechnologiesDeploymentTechnologyParserRuleCall_7_3_0());
					}
					lv_deploymentTechnologies_27_0=ruleDeploymentTechnology
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologyRule());
						}
						add(
							$current,
							"deploymentTechnologies",
							lv_deploymentTechnologies_27_0,
							"de.fhdo.lemma.technology.TechnologyDsl.DeploymentTechnology");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_28='}'
			{
				newLeafNode(otherlv_28, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			otherlv_29='infrastructure'
			{
				newLeafNode(otherlv_29, grammarAccess.getTechnologyAccess().getInfrastructureKeyword_8_0());
			}
			otherlv_30='technologies'
			{
				newLeafNode(otherlv_30, grammarAccess.getTechnologyAccess().getTechnologiesKeyword_8_1());
			}
			otherlv_31='{'
			{
				newLeafNode(otherlv_31, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologyAccess().getInfrastructureTechnologiesInfrastructureTechnologyParserRuleCall_8_3_0());
					}
					lv_infrastructureTechnologies_32_0=ruleInfrastructureTechnology
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologyRule());
						}
						add(
							$current,
							"infrastructureTechnologies",
							lv_infrastructureTechnologies_32_0,
							"de.fhdo.lemma.technology.TechnologyDsl.InfrastructureTechnology");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_33='}'
			{
				newLeafNode(otherlv_33, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		(
			otherlv_34='operation'
			{
				newLeafNode(otherlv_34, grammarAccess.getTechnologyAccess().getOperationKeyword_9_0());
			}
			otherlv_35='aspects'
			{
				newLeafNode(otherlv_35, grammarAccess.getTechnologyAccess().getAspectsKeyword_9_1());
			}
			otherlv_36='{'
			{
				newLeafNode(otherlv_36, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_9_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologyAccess().getOperationAspectsOperationAspectParserRuleCall_9_3_0());
					}
					lv_operationAspects_37_0=ruleOperationAspect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologyRule());
						}
						add(
							$current,
							"operationAspects",
							lv_operationAspects_37_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationAspect");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_38='}'
			{
				newLeafNode(otherlv_38, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_9_4());
			}
		)?
		otherlv_39='}'
		{
			newLeafNode(otherlv_39, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleTechnologyImport
entryRuleTechnologyImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyImportRule()); }
	iv_ruleTechnologyImport=ruleTechnologyImport
	{ $current=$iv_ruleTechnologyImport.current; }
	EOF;

// Rule TechnologyImport
ruleTechnologyImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologyImportAccess().getImportKeyword_0());
		}
		otherlv_1='technology'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologyImportAccess().getTechnologyKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getTechnologyImportAccess().getFromKeyword_2());
		}
		(
			(
				lv_importURI_3_0=RULE_STRING
				{
					newLeafNode(lv_importURI_3_0, grammarAccess.getTechnologyImportAccess().getImportURISTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getTechnologyImportAccess().getAsKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getTechnologyImportAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	iv_ruleProtocol=ruleProtocol
	{ $current=$iv_ruleProtocol.current; }
	EOF;

// Rule Protocol
ruleProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getCommunicationTypeCommunicationTypeEnumRuleCall_0_0());
				}
				lv_communicationType_0_0=ruleCommunicationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"communicationType",
						lv_communicationType_0_0,
						"de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProtocolAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProtocolRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='data'
		{
			newLeafNode(otherlv_2, grammarAccess.getProtocolAccess().getDataKeyword_2());
		}
		otherlv_3='formats'
		{
			newLeafNode(otherlv_3, grammarAccess.getProtocolAccess().getFormatsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getDataFormatsDataFormatParserRuleCall_4_0());
				}
				lv_dataFormats_4_0=ruleDataFormat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					add(
						$current,
						"dataFormats",
						lv_dataFormats_4_0,
						"de.fhdo.lemma.technology.TechnologyDsl.DataFormat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getProtocolAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProtocolAccess().getDataFormatsDataFormatParserRuleCall_5_1_0());
					}
					lv_dataFormats_6_0=ruleDataFormat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProtocolRule());
						}
						add(
							$current,
							"dataFormats",
							lv_dataFormats_6_0,
							"de.fhdo.lemma.technology.TechnologyDsl.DataFormat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(
					lv_default_7_0='default'
					{
						newLeafNode(lv_default_7_0, grammarAccess.getProtocolAccess().getDefaultDefaultKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProtocolRule());
						}
						setWithLastConsumed($current, "default", lv_default_7_0 != null, "default");
					}
				)
			)
			otherlv_8='with'
			{
				newLeafNode(otherlv_8, grammarAccess.getProtocolAccess().getWithKeyword_6_1());
			}
			otherlv_9='format'
			{
				newLeafNode(otherlv_9, grammarAccess.getProtocolAccess().getFormatKeyword_6_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProtocolRule());
						}
					}
					otherlv_10=RULE_STRING
					{
						newLeafNode(otherlv_10, grammarAccess.getProtocolAccess().getDefaultFormatDataFormatCrossReference_6_3_0());
					}
				)
			)
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getProtocolAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleDataFormat
entryRuleDataFormat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFormatRule()); }
	iv_ruleDataFormat=ruleDataFormat
	{ $current=$iv_ruleDataFormat.current; }
	EOF;

// Rule DataFormat
ruleDataFormat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_formatName_0_0=RULE_STRING
			{
				newLeafNode(lv_formatName_0_0, grammarAccess.getDataFormatAccess().getFormatNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDataFormatRule());
				}
				setWithLastConsumed(
					$current,
					"formatName",
					lv_formatName_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleTechnologySpecificPrimitiveType
entryRuleTechnologySpecificPrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificPrimitiveTypeRule()); }
	iv_ruleTechnologySpecificPrimitiveType=ruleTechnologySpecificPrimitiveType
	{ $current=$iv_ruleTechnologySpecificPrimitiveType.current; }
	EOF;

// Rule TechnologySpecificPrimitiveType
ruleTechnologySpecificPrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='primitive'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getPrimitiveKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='based'
			{
				newLeafNode(otherlv_3, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasedKeyword_3_0());
			}
			otherlv_4='on'
			{
				newLeafNode(otherlv_4, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getOnKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_2_0());
					}
					lv_basicBuiltinPrimitiveTypes_5_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
						}
						add(
							$current,
							"basicBuiltinPrimitiveTypes",
							lv_basicBuiltinPrimitiveTypes_5_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getBasicBuiltinPrimitiveTypesPrimitiveTypeParserRuleCall_3_3_1_0());
						}
						lv_basicBuiltinPrimitiveTypes_7_0=rulePrimitiveType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
							}
							add(
								$current,
								"basicBuiltinPrimitiveTypes",
								lv_basicBuiltinPrimitiveTypes_7_0,
								"de.fhdo.lemma.data.DataDsl.PrimitiveType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					lv_default_8_0='default'
					{
						newLeafNode(lv_default_8_0, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getDefaultDefaultKeyword_3_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTechnologySpecificPrimitiveTypeRule());
						}
						setWithLastConsumed($current, "default", lv_default_8_0 != null, "default");
					}
				)
			)?
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getTechnologySpecificPrimitiveTypeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTechnologySpecificCollectionType
entryRuleTechnologySpecificCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificCollectionTypeRule()); }
	iv_ruleTechnologySpecificCollectionType=ruleTechnologySpecificCollectionType
	{ $current=$iv_ruleTechnologySpecificCollectionType.current; }
	EOF;

// Rule TechnologySpecificCollectionType
ruleTechnologySpecificCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='collection'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologySpecificCollectionTypeAccess().getCollectionKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologySpecificCollectionTypeAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologySpecificCollectionTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificCollectionTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologySpecificCollectionTypeAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleTechnologySpecificDataStructure
entryRuleTechnologySpecificDataStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificDataStructureRule()); }
	iv_ruleTechnologySpecificDataStructure=ruleTechnologySpecificDataStructure
	{ $current=$iv_ruleTechnologySpecificDataStructure.current; }
	EOF;

// Rule TechnologySpecificDataStructure
ruleTechnologySpecificDataStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='structure'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologySpecificDataStructureAccess().getStructureKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologySpecificDataStructureAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologySpecificDataStructureAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificDataStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologySpecificDataStructureAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePossiblyImportedTechnologySpecificType
entryRulePossiblyImportedTechnologySpecificType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPossiblyImportedTechnologySpecificTypeRule()); }
	iv_rulePossiblyImportedTechnologySpecificType=rulePossiblyImportedTechnologySpecificType
	{ $current=$iv_rulePossiblyImportedTechnologySpecificType.current; }
	EOF;

// Rule PossiblyImportedTechnologySpecificType
rulePossiblyImportedTechnologySpecificType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPossiblyImportedTechnologySpecificTypeRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getImportTechnologyImportCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPossiblyImportedTechnologySpecificTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPossiblyImportedTechnologySpecificTypeAccess().getTypeTypeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompatibilityMatrixEntry
entryRuleCompatibilityMatrixEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompatibilityMatrixEntryRule()); }
	iv_ruleCompatibilityMatrixEntry=ruleCompatibilityMatrixEntry
	{ $current=$iv_ruleCompatibilityMatrixEntry.current; }
	EOF;

// Rule CompatibilityMatrixEntry
ruleCompatibilityMatrixEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_0_0());
				}
				lv_compatibleTypes_0_0=rulePossiblyImportedTechnologySpecificType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
					}
					add(
						$current,
						"compatibleTypes",
						lv_compatibleTypes_0_0,
						"de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getCompatibilityMatrixEntryAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getCompatibleTypesPossiblyImportedTechnologySpecificTypeParserRuleCall_1_1_0());
					}
					lv_compatibleTypes_2_0=rulePossiblyImportedTechnologySpecificType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
						}
						add(
							$current,
							"compatibleTypes",
							lv_compatibleTypes_2_0,
							"de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getDirectionCompatibilityDirectionEnumRuleCall_2_0());
				}
				lv_direction_3_0=ruleCompatibilityDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
					}
					set(
						$current,
						"direction",
						lv_direction_3_0,
						"de.fhdo.lemma.technology.TechnologyDsl.CompatibilityDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompatibilityMatrixEntryAccess().getMappingTypePossiblyImportedTechnologySpecificTypeParserRuleCall_3_0());
				}
				lv_mappingType_4_0=rulePossiblyImportedTechnologySpecificType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompatibilityMatrixEntryRule());
					}
					set(
						$current,
						"mappingType",
						lv_mappingType_4_0,
						"de.fhdo.lemma.technology.TechnologyDsl.PossiblyImportedTechnologySpecificType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompatibilityMatrixEntryAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleDeploymentTechnology
entryRuleDeploymentTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeploymentTechnologyRule()); }
	iv_ruleDeploymentTechnology=ruleDeploymentTechnology
	{ $current=$iv_ruleDeploymentTechnology.current; }
	EOF;

// Rule DeploymentTechnology
ruleDeploymentTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeploymentTechnologyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeploymentTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeploymentTechnologyAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operation'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeploymentTechnologyAccess().getOperationKeyword_2());
		}
		otherlv_3='environments'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeploymentTechnologyAccess().getEnvironmentsKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getDeploymentTechnologyAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0());
				}
				lv_operationEnvironments_5_0=ruleOperationEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentTechnologyRule());
					}
					add(
						$current,
						"operationEnvironments",
						lv_operationEnvironments_5_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getDeploymentTechnologyAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeploymentTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0());
					}
					lv_operationEnvironments_7_0=ruleOperationEnvironment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeploymentTechnologyRule());
						}
						add(
							$current,
							"operationEnvironments",
							lv_operationEnvironments_7_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeploymentTechnologyAccess().getSemicolonKeyword_7());
		}
		(
			otherlv_9='service'
			{
				newLeafNode(otherlv_9, grammarAccess.getDeploymentTechnologyAccess().getServiceKeyword_8_0());
			}
			otherlv_10='properties'
			{
				newLeafNode(otherlv_10, grammarAccess.getDeploymentTechnologyAccess().getPropertiesKeyword_8_1());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getDeploymentTechnologyAccess().getLeftCurlyBracketKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeploymentTechnologyAccess().getServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0());
					}
					lv_serviceProperties_12_0=ruleTechnologySpecificProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeploymentTechnologyRule());
						}
						add(
							$current,
							"serviceProperties",
							lv_serviceProperties_12_0,
							"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getDeploymentTechnologyAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getDeploymentTechnologyAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleInfrastructureTechnology
entryRuleInfrastructureTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfrastructureTechnologyRule()); }
	iv_ruleInfrastructureTechnology=ruleInfrastructureTechnology
	{ $current=$iv_ruleInfrastructureTechnology.current; }
	EOF;

// Rule InfrastructureTechnology
ruleInfrastructureTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInfrastructureTechnologyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfrastructureTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getInfrastructureTechnologyAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='operation'
		{
			newLeafNode(otherlv_2, grammarAccess.getInfrastructureTechnologyAccess().getOperationKeyword_2());
		}
		otherlv_3='environments'
		{
			newLeafNode(otherlv_3, grammarAccess.getInfrastructureTechnologyAccess().getEnvironmentsKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getInfrastructureTechnologyAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInfrastructureTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_5_0());
				}
				lv_operationEnvironments_5_0=ruleOperationEnvironment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInfrastructureTechnologyRule());
					}
					add(
						$current,
						"operationEnvironments",
						lv_operationEnvironments_5_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getInfrastructureTechnologyAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInfrastructureTechnologyAccess().getOperationEnvironmentsOperationEnvironmentParserRuleCall_6_1_0());
					}
					lv_operationEnvironments_7_0=ruleOperationEnvironment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInfrastructureTechnologyRule());
						}
						add(
							$current,
							"operationEnvironments",
							lv_operationEnvironments_7_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationEnvironment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getInfrastructureTechnologyAccess().getSemicolonKeyword_7());
		}
		(
			otherlv_9='service'
			{
				newLeafNode(otherlv_9, grammarAccess.getInfrastructureTechnologyAccess().getServiceKeyword_8_0());
			}
			otherlv_10='properties'
			{
				newLeafNode(otherlv_10, grammarAccess.getInfrastructureTechnologyAccess().getPropertiesKeyword_8_1());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getInfrastructureTechnologyAccess().getLeftCurlyBracketKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInfrastructureTechnologyAccess().getServicePropertiesTechnologySpecificPropertyParserRuleCall_8_3_0());
					}
					lv_serviceProperties_12_0=ruleTechnologySpecificProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInfrastructureTechnologyRule());
						}
						add(
							$current,
							"serviceProperties",
							lv_serviceProperties_12_0,
							"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getInfrastructureTechnologyAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getInfrastructureTechnologyAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleOperationEnvironment
entryRuleOperationEnvironment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationEnvironmentRule()); }
	iv_ruleOperationEnvironment=ruleOperationEnvironment
	{ $current=$iv_ruleOperationEnvironment.current; }
	EOF;

// Rule OperationEnvironment
ruleOperationEnvironment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_environmentName_0_0=RULE_STRING
				{
					newLeafNode(lv_environmentName_0_0, grammarAccess.getOperationEnvironmentAccess().getEnvironmentNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationEnvironmentRule());
					}
					setWithLastConsumed(
						$current,
						"environmentName",
						lv_environmentName_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_default_1_0='default'
				{
					newLeafNode(lv_default_1_0, grammarAccess.getOperationEnvironmentAccess().getDefaultDefaultKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationEnvironmentRule());
					}
					setWithLastConsumed($current, "default", lv_default_1_0 != null, "default");
				}
			)
		)?
	)
;

// Entry rule entryRuleTechnologySpecificProperty
entryRuleTechnologySpecificProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologySpecificPropertyRule()); }
	iv_ruleTechnologySpecificProperty=ruleTechnologySpecificProperty
	{ $current=$iv_ruleTechnologySpecificProperty.current; }
	EOF;

// Rule TechnologySpecificProperty
ruleTechnologySpecificProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getTypePrimitiveTypeParserRuleCall_0_0());
				}
				lv_type_0_0=rulePrimitiveType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"de.fhdo.lemma.data.DataDsl.PrimitiveType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTechnologySpecificPropertyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologySpecificPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getTechnologySpecificPropertyAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getDefaultValuePrimitiveValueParserRuleCall_2_1_0());
					}
					lv_defaultValue_3_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
						}
						set(
							$current,
							"defaultValue",
							lv_defaultValue_3_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='<'
			{
				newLeafNode(otherlv_4, grammarAccess.getTechnologySpecificPropertyAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getFeaturesPropertyFeatureEnumRuleCall_3_1_0());
					}
					lv_features_5_0=rulePropertyFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
						}
						add(
							$current,
							"features",
							lv_features_5_0,
							"de.fhdo.lemma.technology.TechnologyDsl.PropertyFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTechnologySpecificPropertyAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTechnologySpecificPropertyAccess().getFeaturesPropertyFeatureEnumRuleCall_3_2_1_0());
						}
						lv_features_7_0=rulePropertyFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTechnologySpecificPropertyRule());
							}
							add(
								$current,
								"features",
								lv_features_7_0,
								"de.fhdo.lemma.technology.TechnologyDsl.PropertyFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='>'
			{
				newLeafNode(otherlv_8, grammarAccess.getTechnologySpecificPropertyAccess().getGreaterThanSignKeyword_3_3());
			}
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getTechnologySpecificPropertyAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleServiceAspectPointcut
entryRuleServiceAspectPointcut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceAspectPointcutRule()); }
	iv_ruleServiceAspectPointcut=ruleServiceAspectPointcut
	{ $current=$iv_ruleServiceAspectPointcut.current; }
	EOF;

// Rule ServiceAspectPointcut
ruleServiceAspectPointcut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_forExchangePattern_0_0='exchange_pattern'
					{
						newLeafNode(lv_forExchangePattern_0_0, grammarAccess.getServiceAspectPointcutAccess().getForExchangePatternExchange_patternKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forExchangePattern", lv_forExchangePattern_0_0 != null, "exchange_pattern");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectPointcutAccess().getExchangePatternExchangePatternEnumRuleCall_0_2_0());
					}
					lv_exchangePattern_2_0=ruleExchangePattern
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutRule());
						}
						set(
							$current,
							"exchangePattern",
							lv_exchangePattern_2_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ExchangePattern");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_forCommunicationType_3_0='communication_type'
					{
						newLeafNode(lv_forCommunicationType_3_0, grammarAccess.getServiceAspectPointcutAccess().getForCommunicationTypeCommunication_typeKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forCommunicationType", lv_forCommunicationType_3_0 != null, "communication_type");
					}
				)
			)
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectPointcutAccess().getCommunicationTypeCommunicationTypeEnumRuleCall_1_2_0());
					}
					lv_communicationType_5_0=ruleCommunicationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutRule());
						}
						set(
							$current,
							"communicationType",
							lv_communicationType_5_0,
							"de.fhdo.lemma.technology.TechnologyDsl.CommunicationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_forProtocol_6_0='protocol'
					{
						newLeafNode(lv_forProtocol_6_0, grammarAccess.getServiceAspectPointcutAccess().getForProtocolProtocolKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forProtocol", lv_forProtocol_6_0 != null, "protocol");
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getServiceAspectPointcutAccess().getProtocolProtocolCrossReference_2_2_0());
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_forDataFormat_9_0='data_format'
					{
						newLeafNode(lv_forDataFormat_9_0, grammarAccess.getServiceAspectPointcutAccess().getForDataFormatData_formatKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
						setWithLastConsumed($current, "forDataFormat", lv_forDataFormat_9_0 != null, "data_format");
					}
				)
			)
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getServiceAspectPointcutAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceAspectPointcutRule());
						}
					}
					otherlv_11=RULE_STRING
					{
						newLeafNode(otherlv_11, grammarAccess.getServiceAspectPointcutAccess().getDataFormatDataFormatCrossReference_3_2_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleServiceAspectPointcutSelector
entryRuleServiceAspectPointcutSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceAspectPointcutSelectorRule()); }
	iv_ruleServiceAspectPointcutSelector=ruleServiceAspectPointcutSelector
	{ $current=$iv_ruleServiceAspectPointcutSelector.current; }
	EOF;

// Rule ServiceAspectPointcutSelector
ruleServiceAspectPointcutSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='selector'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAspectPointcutSelectorAccess().getSelectorKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getServiceAspectPointcutSelectorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAspectPointcutSelectorAccess().getPointcutsServiceAspectPointcutParserRuleCall_2_0());
				}
				lv_pointcuts_2_0=ruleServiceAspectPointcut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutSelectorRule());
					}
					add(
						$current,
						"pointcuts",
						lv_pointcuts_2_0,
						"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getServiceAspectPointcutSelectorAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectPointcutSelectorAccess().getPointcutsServiceAspectPointcutParserRuleCall_3_1_0());
					}
					lv_pointcuts_4_0=ruleServiceAspectPointcut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectPointcutSelectorRule());
						}
						add(
							$current,
							"pointcuts",
							lv_pointcuts_4_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceAspectPointcutSelectorAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getServiceAspectPointcutSelectorAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleServiceAspect
entryRuleServiceAspect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceAspectRule()); }
	iv_ruleServiceAspect=ruleServiceAspect
	{ $current=$iv_ruleServiceAspect.current; }
	EOF;

// Rule ServiceAspect
ruleServiceAspect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='aspect'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAspectAccess().getAspectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAspectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceAspectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getServiceAspectAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleAspectFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getServiceAspectAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleAspectFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getServiceAspectAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		otherlv_7='for'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceAspectAccess().getForKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAspectAccess().getJoinPointsServiceJoinPointTypeEnumRuleCall_4_0());
				}
				lv_joinPoints_8_0=ruleServiceJoinPointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
					}
					add(
						$current,
						"joinPoints",
						lv_joinPoints_8_0,
						"de.fhdo.lemma.technology.TechnologyDsl.ServiceJoinPointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getServiceAspectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAspectAccess().getJoinPointsServiceJoinPointTypeEnumRuleCall_5_1_0());
					}
					lv_joinPoints_10_0=ruleServiceJoinPointType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
						}
						add(
							$current,
							"joinPoints",
							lv_joinPoints_10_0,
							"de.fhdo.lemma.technology.TechnologyDsl.ServiceJoinPointType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getServiceAspectAccess().getLeftCurlyBracketKeyword_6_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAspectAccess().getPointcutSelectorsServiceAspectPointcutSelectorParserRuleCall_6_0_1_0());
						}
						lv_pointcutSelectors_12_0=ruleServiceAspectPointcutSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
							}
							add(
								$current,
								"pointcutSelectors",
								lv_pointcutSelectors_12_0,
								"de.fhdo.lemma.technology.TechnologyDsl.ServiceAspectPointcutSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAspectAccess().getPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0());
						}
						lv_properties_13_0=ruleTechnologySpecificProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceAspectRule());
							}
							add(
								$current,
								"properties",
								lv_properties_13_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_14='}'
				{
					newLeafNode(otherlv_14, grammarAccess.getServiceAspectAccess().getRightCurlyBracketKeyword_6_0_3());
				}
			)
			    |
			otherlv_15=';'
			{
				newLeafNode(otherlv_15, grammarAccess.getServiceAspectAccess().getSemicolonKeyword_6_1());
			}
		)
	)
;

// Entry rule entryRuleOperationAspectPointcut
entryRuleOperationAspectPointcut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAspectPointcutRule()); }
	iv_ruleOperationAspectPointcut=ruleOperationAspectPointcut
	{ $current=$iv_ruleOperationAspectPointcut.current; }
	EOF;

// Rule OperationAspectPointcut
ruleOperationAspectPointcut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_forTechnology_0_0='technology'
				{
					newLeafNode(lv_forTechnology_0_0, grammarAccess.getOperationAspectPointcutAccess().getForTechnologyTechnologyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAspectPointcutRule());
					}
					setWithLastConsumed($current, "forTechnology", lv_forTechnology_0_0 != null, "technology");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAspectPointcutAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAspectPointcutRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getOperationAspectPointcutAccess().getTechnologyEObjectCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleOperationAspectPointcutSelector
entryRuleOperationAspectPointcutSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAspectPointcutSelectorRule()); }
	iv_ruleOperationAspectPointcutSelector=ruleOperationAspectPointcutSelector
	{ $current=$iv_ruleOperationAspectPointcutSelector.current; }
	EOF;

// Rule OperationAspectPointcutSelector
ruleOperationAspectPointcutSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='selector'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAspectPointcutSelectorAccess().getSelectorKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAspectPointcutSelectorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAspectPointcutSelectorAccess().getPointcutsOperationAspectPointcutParserRuleCall_2_0());
				}
				lv_pointcuts_2_0=ruleOperationAspectPointcut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationAspectPointcutSelectorRule());
					}
					add(
						$current,
						"pointcuts",
						lv_pointcuts_2_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getOperationAspectPointcutSelectorAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAspectPointcutSelectorAccess().getPointcutsOperationAspectPointcutParserRuleCall_3_1_0());
					}
					lv_pointcuts_4_0=ruleOperationAspectPointcut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationAspectPointcutSelectorRule());
						}
						add(
							$current,
							"pointcuts",
							lv_pointcuts_4_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationAspectPointcutSelectorAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getOperationAspectPointcutSelectorAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleOperationAspect
entryRuleOperationAspect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationAspectRule()); }
	iv_ruleOperationAspect=ruleOperationAspect
	{ $current=$iv_ruleOperationAspect.current; }
	EOF;

// Rule OperationAspect
ruleOperationAspect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='aspect'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAspectAccess().getAspectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOperationAspectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationAspectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getOperationAspectAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleAspectFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getOperationAspectAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAspectAccess().getFeaturesAspectFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleAspectFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.technology.TechnologyDsl.AspectFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getOperationAspectAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		otherlv_7='for'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationAspectAccess().getForKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAspectAccess().getJoinPointsOperationJoinPointTypeEnumRuleCall_4_0());
				}
				lv_joinPoints_8_0=ruleOperationJoinPointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
					}
					add(
						$current,
						"joinPoints",
						lv_joinPoints_8_0,
						"de.fhdo.lemma.technology.TechnologyDsl.OperationJoinPointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getOperationAspectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAspectAccess().getJoinPointsOperationJoinPointTypeEnumRuleCall_5_1_0());
					}
					lv_joinPoints_10_0=ruleOperationJoinPointType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
						}
						add(
							$current,
							"joinPoints",
							lv_joinPoints_10_0,
							"de.fhdo.lemma.technology.TechnologyDsl.OperationJoinPointType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getOperationAspectAccess().getLeftCurlyBracketKeyword_6_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAspectAccess().getPointcutSelectorsOperationAspectPointcutSelectorParserRuleCall_6_0_1_0());
						}
						lv_pointcutSelectors_12_0=ruleOperationAspectPointcutSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
							}
							add(
								$current,
								"pointcutSelectors",
								lv_pointcutSelectors_12_0,
								"de.fhdo.lemma.technology.TechnologyDsl.OperationAspectPointcutSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAspectAccess().getPropertiesTechnologySpecificPropertyParserRuleCall_6_0_2_0());
						}
						lv_properties_13_0=ruleTechnologySpecificProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationAspectRule());
							}
							add(
								$current,
								"properties",
								lv_properties_13_0,
								"de.fhdo.lemma.technology.TechnologyDsl.TechnologySpecificProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_14='}'
				{
					newLeafNode(otherlv_14, grammarAccess.getOperationAspectAccess().getRightCurlyBracketKeyword_6_0_3());
				}
			)
			    |
			otherlv_15=';'
			{
				newLeafNode(otherlv_15, grammarAccess.getOperationAspectAccess().getSemicolonKeyword_6_1());
			}
		)
	)
;

// Entry rule entryRuleComplexTypeImport
entryRuleComplexTypeImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeImportRule()); }
	iv_ruleComplexTypeImport=ruleComplexTypeImport
	{ $current=$iv_ruleComplexTypeImport.current; }
	EOF;

// Rule ComplexTypeImport
ruleComplexTypeImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getComplexTypeImportAccess().getImportKeyword_0());
		}
		otherlv_1='datatypes'
		{
			newLeafNode(otherlv_1, grammarAccess.getComplexTypeImportAccess().getDatatypesKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getComplexTypeImportAccess().getFromKeyword_2());
		}
		(
			(
				lv_importURI_3_0=RULE_STRING
				{
					newLeafNode(lv_importURI_3_0, grammarAccess.getComplexTypeImportAccess().getImportURISTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexTypeImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getComplexTypeImportAccess().getAsKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getComplexTypeImportAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexTypeImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current; }
	EOF;

// Rule Version
ruleVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='version'
		{
			newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVersionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVersionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVersionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVersionAccess().getComplexTypesComplexTypeParserRuleCall_3_0_0());
					}
					lv_complexTypes_3_0=ruleComplexType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVersionRule());
						}
						add(
							$current,
							"complexTypes",
							lv_complexTypes_3_0,
							"de.fhdo.lemma.data.DataDsl.ComplexType");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVersionAccess().getContextsContextParserRuleCall_3_1_0());
					}
					lv_contexts_4_0=ruleContext
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVersionRule());
						}
						add(
							$current,
							"contexts",
							lv_contexts_4_0,
							"de.fhdo.lemma.data.DataDsl.Context");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVersionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getContextAccess().getContextKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContextAccess().getComplexTypesComplexTypeParserRuleCall_3_0());
				}
				lv_complexTypes_3_0=ruleComplexType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextRule());
					}
					add(
						$current,
						"complexTypes",
						lv_complexTypes_3_0,
						"de.fhdo.lemma.data.DataDsl.ComplexType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	iv_ruleComplexType=ruleComplexType
	{ $current=$iv_ruleComplexType.current; }
	EOF;

// Rule ComplexType
ruleComplexType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComplexTypeAccess().getDataStructureParserRuleCall_0());
		}
		this_DataStructure_0=ruleDataStructure
		{
			$current = $this_DataStructure_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexTypeAccess().getCollectionTypeParserRuleCall_1());
		}
		this_CollectionType_1=ruleCollectionType
		{
			$current = $this_CollectionType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComplexTypeAccess().getEnumerationParserRuleCall_2());
		}
		this_Enumeration_2=ruleEnumeration
		{
			$current = $this_Enumeration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataStructure
entryRuleDataStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataStructureRule()); }
	iv_ruleDataStructure=ruleDataStructure
	{ $current=$iv_ruleDataStructure.current; }
	EOF;

// Rule DataStructure
ruleDataStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='structure'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataStructureAccess().getStructureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataStructureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataStructureAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataStructureAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleComplexTypeFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataStructureRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getDataStructureAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataStructureAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleComplexTypeFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataStructureRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataStructureAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		(
			otherlv_7='extends'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataStructureAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataStructureRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataStructureAccess().getSuperDataStructureCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getDataStructureAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_5_0_0_0());
						}
						lv_dataFields_10_0=ruleDataField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataStructureRule());
							}
							add(
								$current,
								"dataFields",
								lv_dataFields_10_0,
								"de.fhdo.lemma.data.DataDsl.DataField");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDataStructureAccess().getOperationsDataOperationParserRuleCall_5_0_1_0());
						}
						lv_operations_11_0=ruleDataOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataStructureRule());
							}
							add(
								$current,
								"operations",
								lv_operations_11_0,
								"de.fhdo.lemma.data.DataDsl.DataOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDataStructureAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDataStructureAccess().getDataFieldsDataFieldParserRuleCall_5_1_1_0_0());
							}
							lv_dataFields_13_0=ruleDataField
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataStructureRule());
								}
								add(
									$current,
									"dataFields",
									lv_dataFields_13_0,
									"de.fhdo.lemma.data.DataDsl.DataField");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getDataStructureAccess().getOperationsDataOperationParserRuleCall_5_1_1_1_0());
							}
							lv_operations_14_0=ruleDataOperation
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataStructureRule());
								}
								add(
									$current,
									"operations",
									lv_operations_14_0,
									"de.fhdo.lemma.data.DataDsl.DataOperation");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getDataStructureAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCollectionType
entryRuleCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeRule()); }
	iv_ruleCollectionType=ruleCollectionType
	{ $current=$iv_ruleCollectionType.current; }
	EOF;

// Rule CollectionType
ruleCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='collection'
			{
				newLeafNode(otherlv_0, grammarAccess.getCollectionTypeAccess().getCollectionKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getCollectionTypeAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCollectionTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getCollectionTypeAccess().getLeftCurlyBracketKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeAccess().getDataFieldsDataFieldParserRuleCall_0_3_0());
					}
					lv_dataFields_3_0=ruleDataField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
						}
						add(
							$current,
							"dataFields",
							lv_dataFields_3_0,
							"de.fhdo.lemma.data.DataDsl.DataField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getCollectionTypeAccess().getCommaKeyword_0_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionTypeAccess().getDataFieldsDataFieldParserRuleCall_0_4_1_0());
						}
						lv_dataFields_5_0=ruleDataField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
							}
							add(
								$current,
								"dataFields",
								lv_dataFields_5_0,
								"de.fhdo.lemma.data.DataDsl.DataField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getCollectionTypeAccess().getRightCurlyBracketKeyword_0_5());
			}
		)
		    |
		(
			otherlv_7='collection'
			{
				newLeafNode(otherlv_7, grammarAccess.getCollectionTypeAccess().getCollectionKeyword_1_0());
			}
			(
				(
					lv_name_8_0=RULE_ID
					{
						newLeafNode(lv_name_8_0, grammarAccess.getCollectionTypeAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCollectionTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getCollectionTypeAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionTypeAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_1_3_0());
					}
					lv_primitiveType_10_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionTypeRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_10_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getCollectionTypeAccess().getRightCurlyBracketKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRuleDataField
entryRuleDataField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataFieldRule()); }
	iv_ruleDataField=ruleDataField
	{ $current=$iv_ruleDataField.current; }
	EOF;

// Rule DataField
ruleDataField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hidden_0_0='hide'
				{
					newLeafNode(lv_hidden_0_0, grammarAccess.getDataFieldAccess().getHiddenHideKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFieldRule());
					}
					setWithLastConsumed($current, "hidden", lv_hidden_0_0 != null, "hide");
				}
			)
		)?
		(
			(
				lv_immutable_1_0='immutable'
				{
					newLeafNode(lv_immutable_1_0, grammarAccess.getDataFieldAccess().getImmutableImmutableKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFieldRule());
					}
					setWithLastConsumed($current, "immutable", lv_immutable_1_0 != null, "immutable");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_2_0_0());
					}
					lv_primitiveType_2_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_2_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataFieldRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getComplexTypeComplexTypeCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getImportedComplexTypeImportedComplexTypeParserRuleCall_2_2_0());
					}
					lv_importedComplexType_4_0=ruleImportedComplexType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						set(
							$current,
							"importedComplexType",
							lv_importedComplexType_4_0,
							"de.fhdo.lemma.data.DataDsl.ImportedComplexType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getDataFieldAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getDataFieldAccess().getEqualsSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getInitializationValuePrimitiveValueParserRuleCall_4_1_0());
					}
					lv_initializationValue_7_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						set(
							$current,
							"initializationValue",
							lv_initializationValue_7_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='<'
			{
				newLeafNode(otherlv_8, grammarAccess.getDataFieldAccess().getLessThanSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataFieldAccess().getFeaturesDataFieldFeatureEnumRuleCall_5_1_0());
					}
					lv_features_9_0=ruleDataFieldFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataFieldRule());
						}
						add(
							$current,
							"features",
							lv_features_9_0,
							"de.fhdo.lemma.data.DataDsl.DataFieldFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getDataFieldAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataFieldAccess().getFeaturesDataFieldFeatureEnumRuleCall_5_2_1_0());
						}
						lv_features_11_0=ruleDataFieldFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataFieldRule());
							}
							add(
								$current,
								"features",
								lv_features_11_0,
								"de.fhdo.lemma.data.DataDsl.DataFieldFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='>'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataFieldAccess().getGreaterThanSignKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_1_0());
					}
					lv_features_3_0=ruleComplexTypeFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationRule());
						}
						add(
							$current,
							"features",
							lv_features_3_0,
							"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getEnumerationAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnumerationAccess().getFeaturesComplexTypeFeatureEnumRuleCall_2_2_1_0());
						}
						lv_features_5_0=ruleComplexTypeFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnumerationRule());
							}
							add(
								$current,
								"features",
								lv_features_5_0,
								"de.fhdo.lemma.data.DataDsl.ComplexTypeFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumerationAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationAccess().getFieldsEnumerationFieldParserRuleCall_4_0());
				}
				lv_fields_8_0=ruleEnumerationField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationRule());
					}
					add(
						$current,
						"fields",
						lv_fields_8_0,
						"de.fhdo.lemma.data.DataDsl.EnumerationField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getEnumerationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationAccess().getFieldsEnumerationFieldParserRuleCall_5_1_0());
					}
					lv_fields_10_0=ruleEnumerationField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationRule());
						}
						add(
							$current,
							"fields",
							lv_fields_10_0,
							"de.fhdo.lemma.data.DataDsl.EnumerationField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEnumerationField
entryRuleEnumerationField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationFieldRule()); }
	iv_ruleEnumerationField=ruleEnumerationField
	{ $current=$iv_ruleEnumerationField.current; }
	EOF;

// Rule EnumerationField
ruleEnumerationField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumerationFieldAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumerationFieldAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationFieldAccess().getInitializationValuePrimitiveValueParserRuleCall_1_1_0());
					}
					lv_initializationValue_2_0=rulePrimitiveValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationFieldRule());
						}
						set(
							$current,
							"initializationValue",
							lv_initializationValue_2_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumerationFieldAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleDataOperation
entryRuleDataOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOperationRule()); }
	iv_ruleDataOperation=ruleDataOperation
	{ $current=$iv_ruleDataOperation.current; }
	EOF;

// Rule DataOperation
ruleDataOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hidden_0_0='hide'
				{
					newLeafNode(lv_hidden_0_0, grammarAccess.getDataOperationAccess().getHiddenHideKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOperationRule());
					}
					setWithLastConsumed($current, "hidden", lv_hidden_0_0 != null, "hide");
				}
			)
		)?
		(
			(
				(
					lv_hasNoReturnType_1_0='procedure'
					{
						newLeafNode(lv_hasNoReturnType_1_0, grammarAccess.getDataOperationAccess().getHasNoReturnTypeProcedureKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataOperationRule());
						}
						setWithLastConsumed($current, "hasNoReturnType", lv_hasNoReturnType_1_0 != null, "procedure");
					}
				)
			)
			    |
			(
				otherlv_2='function'
				{
					newLeafNode(otherlv_2, grammarAccess.getDataOperationAccess().getFunctionKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDataOperationAccess().getPrimitiveReturnTypePrimitiveTypeParserRuleCall_1_1_1_0_0());
							}
							lv_primitiveReturnType_3_0=rulePrimitiveType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataOperationRule());
								}
								set(
									$current,
									"primitiveReturnType",
									lv_primitiveReturnType_3_0,
									"de.fhdo.lemma.data.DataDsl.PrimitiveType");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDataOperationRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getDataOperationAccess().getComplexReturnTypeComplexTypeCrossReference_1_1_1_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getDataOperationAccess().getImportedComplexReturnTypeImportedComplexTypeParserRuleCall_1_1_1_2_0());
							}
							lv_importedComplexReturnType_5_0=ruleImportedComplexType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataOperationRule());
								}
								set(
									$current,
									"importedComplexReturnType",
									lv_importedComplexReturnType_5_0,
									"de.fhdo.lemma.data.DataDsl.ImportedComplexType");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
		)
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getDataOperationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getDataOperationAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationAccess().getParametersDataOperationParameterParserRuleCall_3_1_0());
					}
					lv_parameters_8_0=ruleDataOperationParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_8_0,
							"de.fhdo.lemma.data.DataDsl.DataOperationParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getDataOperationAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataOperationAccess().getParametersDataOperationParameterParserRuleCall_3_2_1_0());
						}
						lv_parameters_10_0=ruleDataOperationParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataOperationRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_10_0,
								"de.fhdo.lemma.data.DataDsl.DataOperationParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getDataOperationAccess().getRightParenthesisKeyword_3_3());
			}
		)?
		(
			otherlv_12='<'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataOperationAccess().getLessThanSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationAccess().getFeaturesDataOperationFeatureEnumRuleCall_4_1_0());
					}
					lv_features_13_0=ruleDataOperationFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationRule());
						}
						add(
							$current,
							"features",
							lv_features_13_0,
							"de.fhdo.lemma.data.DataDsl.DataOperationFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getDataOperationAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataOperationAccess().getFeaturesDataOperationFeatureEnumRuleCall_4_2_1_0());
						}
						lv_features_15_0=ruleDataOperationFeature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataOperationRule());
							}
							add(
								$current,
								"features",
								lv_features_15_0,
								"de.fhdo.lemma.data.DataDsl.DataOperationFeature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='>'
			{
				newLeafNode(otherlv_16, grammarAccess.getDataOperationAccess().getGreaterThanSignKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleDataOperationParameter
entryRuleDataOperationParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataOperationParameterRule()); }
	iv_ruleDataOperationParameter=ruleDataOperationParameter
	{ $current=$iv_ruleDataOperationParameter.current; }
	EOF;

// Rule DataOperationParameter
ruleDataOperationParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationParameterAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_0_0_0());
					}
					lv_primitiveType_0_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationParameterRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_0_0,
							"de.fhdo.lemma.data.DataDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataOperationParameterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDataOperationParameterAccess().getComplexTypeComplexTypeCrossReference_0_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDataOperationParameterAccess().getImportedComplexTypeImportedComplexTypeParserRuleCall_0_2_0());
					}
					lv_importedComplexType_2_0=ruleImportedComplexType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataOperationParameterRule());
						}
						set(
							$current,
							"importedComplexType",
							lv_importedComplexType_2_0,
							"de.fhdo.lemma.data.DataDsl.ImportedComplexType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDataOperationParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataOperationParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveValue
entryRulePrimitiveValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveValueRule()); }
	iv_rulePrimitiveValue=rulePrimitiveValue
	{ $current=$iv_rulePrimitiveValue.current; }
	EOF;

// Rule PrimitiveValue
rulePrimitiveValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_numericValue_0_0=RULE_BIG_DECIMAL
				{
					newLeafNode(lv_numericValue_0_0, grammarAccess.getPrimitiveValueAccess().getNumericValueBIG_DECIMALTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveValueRule());
					}
					setWithLastConsumed(
						$current,
						"numericValue",
						lv_numericValue_0_0,
						"de.fhdo.lemma.data.DataDsl.BIG_DECIMAL");
				}
			)
		)
		    |
		(
			(
				lv_booleanValue_1_0=RULE_BOOLEAN
				{
					newLeafNode(lv_booleanValue_1_0, grammarAccess.getPrimitiveValueAccess().getBooleanValueBOOLEANTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveValueRule());
					}
					setWithLastConsumed(
						$current,
						"booleanValue",
						lv_booleanValue_1_0,
						"de.fhdo.lemma.data.DataDsl.BOOLEAN");
				}
			)
		)
		    |
		(
			(
				lv_stringValue_2_0=RULE_STRING
				{
					newLeafNode(lv_stringValue_2_0, grammarAccess.getPrimitiveValueAccess().getStringValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveValueRule());
					}
					setWithLastConsumed(
						$current,
						"stringValue",
						lv_stringValue_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleImportedComplexType
entryRuleImportedComplexType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedComplexTypeRule()); }
	iv_ruleImportedComplexType=ruleImportedComplexType
	{ $current=$iv_ruleImportedComplexType.current; }
	EOF;

// Rule ImportedComplexType
ruleImportedComplexType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedComplexTypeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getImportedComplexTypeAccess().getImportComplexTypeImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='::'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportedComplexTypeAccess().getColonColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedComplexTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportedComplexTypeAccess().getImportedTypeTypeCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current; }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveBooleanAction_0_0(),
						$current);
				}
			)
			otherlv_1='boolean'
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveByteAction_1_0(),
						$current);
				}
			)
			otherlv_3='byte'
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimitiveTypeAccess().getByteKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveCharacterAction_2_0(),
						$current);
				}
			)
			otherlv_5='char'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimitiveTypeAccess().getCharKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveDateAction_3_0(),
						$current);
				}
			)
			otherlv_7='date'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimitiveTypeAccess().getDateKeyword_3_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveDoubleAction_4_0(),
						$current);
				}
			)
			otherlv_9='double'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimitiveTypeAccess().getDoubleKeyword_4_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveFloatAction_5_0(),
						$current);
				}
			)
			otherlv_11='float'
			{
				newLeafNode(otherlv_11, grammarAccess.getPrimitiveTypeAccess().getFloatKeyword_5_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveIntegerAction_6_0(),
						$current);
				}
			)
			otherlv_13='int'
			{
				newLeafNode(otherlv_13, grammarAccess.getPrimitiveTypeAccess().getIntKeyword_6_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveLongAction_7_0(),
						$current);
				}
			)
			otherlv_15='long'
			{
				newLeafNode(otherlv_15, grammarAccess.getPrimitiveTypeAccess().getLongKeyword_7_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveShortAction_8_0(),
						$current);
				}
			)
			otherlv_17='short'
			{
				newLeafNode(otherlv_17, grammarAccess.getPrimitiveTypeAccess().getShortKeyword_8_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveStringAction_9_0(),
						$current);
				}
			)
			otherlv_19='string'
			{
				newLeafNode(otherlv_19, grammarAccess.getPrimitiveTypeAccess().getStringKeyword_9_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveTypeAccess().getPrimitiveUnspecifiedAction_10_0(),
						$current);
				}
			)
			otherlv_21='unspecified'
			{
				newLeafNode(otherlv_21, grammarAccess.getPrimitiveTypeAccess().getUnspecifiedKeyword_10_1());
			}
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule ExchangePattern
ruleExchangePattern returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getExchangePatternAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getExchangePatternAccess().getINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getExchangePatternAccess().getOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getExchangePatternAccess().getOUTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='inout'
			{
				$current = grammarAccess.getExchangePatternAccess().getINOUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getExchangePatternAccess().getINOUTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule CommunicationType
ruleCommunicationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sync'
			{
				$current = grammarAccess.getCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='async'
			{
				$current = grammarAccess.getCommunicationTypeAccess().getASYNCHRONOUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCommunicationTypeAccess().getASYNCHRONOUSEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule CompatibilityDirection
ruleCompatibilityDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<-'
			{
				$current = grammarAccess.getCompatibilityDirectionAccess().getMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCompatibilityDirectionAccess().getMAPPING_TO_COMPATIBLE_TYPESEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='->'
			{
				$current = grammarAccess.getCompatibilityDirectionAccess().getCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCompatibilityDirectionAccess().getCOMPATIBLE_TYPES_TO_MAPPINGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<->'
			{
				$current = grammarAccess.getCompatibilityDirectionAccess().getBIDIRECTIONALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCompatibilityDirectionAccess().getBIDIRECTIONALEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule PropertyFeature
rulePropertyFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='mandatory'
			{
				$current = grammarAccess.getPropertyFeatureAccess().getMANDATORYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPropertyFeatureAccess().getMANDATORYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='singleval'
			{
				$current = grammarAccess.getPropertyFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPropertyFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ServiceJoinPointType
ruleServiceJoinPointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='types'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getCOMPLEX_TYPESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getServiceJoinPointTypeAccess().getCOMPLEX_TYPESEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='fields'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getDATA_FIELDSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getServiceJoinPointTypeAccess().getDATA_FIELDSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='domainOperations'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATIONSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATIONSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='domainParameters'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getServiceJoinPointTypeAccess().getDATA_OPERATION_PARAMETERSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='microservices'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getMICROSERVICESEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getServiceJoinPointTypeAccess().getMICROSERVICESEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='interfaces'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getINTERFACESEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getServiceJoinPointTypeAccess().getINTERFACESEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='operations'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getOPERATIONSEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getServiceJoinPointTypeAccess().getOPERATIONSEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='parameters'
			{
				$current = grammarAccess.getServiceJoinPointTypeAccess().getPARAMETERSEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getServiceJoinPointTypeAccess().getPARAMETERSEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule AspectFeature
ruleAspectFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='singleval'
		{
			$current = grammarAccess.getAspectFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getAspectFeatureAccess().getSINGLE_VALUEDEnumLiteralDeclaration());
		}
	)
;

// Rule OperationJoinPointType
ruleOperationJoinPointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='containers'
			{
				$current = grammarAccess.getOperationJoinPointTypeAccess().getCONTAINERSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationJoinPointTypeAccess().getCONTAINERSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='infrastructure'
			{
				$current = grammarAccess.getOperationJoinPointTypeAccess().getINFRASTRUCTURE_NODESEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationJoinPointTypeAccess().getINFRASTRUCTURE_NODESEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ComplexTypeFeature
ruleComplexTypeFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='aggregate'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getAGGREGATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComplexTypeFeatureAccess().getAGGREGATEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='applicationService'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getAPPLICATION_SERVICEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComplexTypeFeatureAccess().getAPPLICATION_SERVICEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='domainEvent'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_EVENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_EVENTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='domainService'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_SERVICEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComplexTypeFeatureAccess().getDOMAIN_SERVICEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='entity'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getENTITYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComplexTypeFeatureAccess().getENTITYEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='factory'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getFACTORYEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getComplexTypeFeatureAccess().getFACTORYEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='infrastructureService'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getINFRASTRUCTURE_SERVICEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getComplexTypeFeatureAccess().getINFRASTRUCTURE_SERVICEEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='repository'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getREPOSITORYEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getComplexTypeFeatureAccess().getREPOSITORYEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='service'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getSERVICEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getComplexTypeFeatureAccess().getSERVICEEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='specification'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getSPECIFICATIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getComplexTypeFeatureAccess().getSPECIFICATIONEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='valueObject'
			{
				$current = grammarAccess.getComplexTypeFeatureAccess().getVALUE_OBJECTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getComplexTypeFeatureAccess().getVALUE_OBJECTEnumLiteralDeclaration_10());
			}
		)
	)
;

// Rule DataFieldFeature
ruleDataFieldFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='identifier'
			{
				$current = grammarAccess.getDataFieldFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataFieldFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='neverEmpty'
			{
				$current = grammarAccess.getDataFieldFeatureAccess().getNEVER_EMPTYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataFieldFeatureAccess().getNEVER_EMPTYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='part'
			{
				$current = grammarAccess.getDataFieldFeatureAccess().getPARTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataFieldFeatureAccess().getPARTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DataOperationFeature
ruleDataOperationFeature returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='closure'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getCLOSUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataOperationFeatureAccess().getCLOSUREEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='identifier'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataOperationFeatureAccess().getIDENTIFIEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='sideEffectFree'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getSIDE_EFFECT_FREEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataOperationFeatureAccess().getSIDE_EFFECT_FREEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='validator'
			{
				$current = grammarAccess.getDataOperationFeatureAccess().getVALIDATOREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataOperationFeatureAccess().getVALIDATOREnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_BIG_DECIMAL : '-'? RULE_INT ('.' RULE_INT)?;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
