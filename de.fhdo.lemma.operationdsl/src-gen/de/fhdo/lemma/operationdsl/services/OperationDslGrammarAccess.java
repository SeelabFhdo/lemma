/*
 * generated by Xtext 2.25.0
 */
package de.fhdo.lemma.operationdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fhdo.lemma.data.services.DataDslGrammarAccess;
import de.fhdo.lemma.services.ServiceDslGrammarAccess;
import de.fhdo.lemma.technology.services.TechnologyDslGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OperationDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class OperationModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.OperationModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cContainersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContainersContainerParserRuleCall_1_0 = (RuleCall)cContainersAssignment_1.eContents().get(0);
		private final Assignment cInfrastructureNodesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInfrastructureNodesInfrastructureNodeParserRuleCall_2_0 = (RuleCall)cInfrastructureNodesAssignment_2.eContents().get(0);
		
		//OperationModel returns OperationModel:
		//    imports+=Import+
		//    containers+=Container*
		//    infrastructureNodes+=InfrastructureNode*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=Import+
		//containers+=Container*
		//infrastructureNodes+=InfrastructureNode*
		public Group getGroup() { return cGroup; }
		
		//imports+=Import+
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }
		
		//containers+=Container*
		public Assignment getContainersAssignment_1() { return cContainersAssignment_1; }
		
		//Container
		public RuleCall getContainersContainerParserRuleCall_1_0() { return cContainersContainerParserRuleCall_1_0; }
		
		//infrastructureNodes+=InfrastructureNode*
		public Assignment getInfrastructureNodesAssignment_2() { return cInfrastructureNodesAssignment_2; }
		
		//InfrastructureNode
		public RuleCall getInfrastructureNodesInfrastructureNodeParserRuleCall_2_0() { return cInfrastructureNodesInfrastructureNodeParserRuleCall_2_0; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTechnologyKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cTechnologiesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cTechnologiesImportCrossReference_0_3_0 = (CrossReference)cTechnologiesAssignment_0_3.eContents().get(0);
		private final RuleCall cTechnologiesImportIDTerminalRuleCall_0_3_0_1 = (RuleCall)cTechnologiesImportCrossReference_0_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cDeploymentKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTechnologyKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDeploymentTechnologyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDeploymentTechnologyDeploymentTechnologyReferenceParserRuleCall_5_0 = (RuleCall)cDeploymentTechnologyAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWithKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cOperationKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cEnvironmentKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cOperationEnvironmentAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cOperationEnvironmentOperationEnvironmentCrossReference_6_3_0 = (CrossReference)cOperationEnvironmentAssignment_6_3.eContents().get(0);
		private final RuleCall cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_6_3_0_1 = (RuleCall)cOperationEnvironmentOperationEnvironmentCrossReference_6_3_0.eContents().get(1);
		private final Keyword cDeploysKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDeployedServicesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_8_0 = (RuleCall)cDeployedServicesAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cDeployedServicesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_9_1_0 = (RuleCall)cDeployedServicesAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDependsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cOnKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cNodesKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cDependsOnNodesAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_10_3_0 = (RuleCall)cDependsOnNodesAssignment_10_3.eContents().get(0);
		private final Group cGroup_10_4 = (Group)cGroup_10.eContents().get(4);
		private final Keyword cCommaKeyword_10_4_0 = (Keyword)cGroup_10_4.eContents().get(0);
		private final Assignment cDependsOnNodesAssignment_10_4_1 = (Assignment)cGroup_10_4.eContents().get(1);
		private final RuleCall cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_10_4_1_0 = (RuleCall)cDependsOnNodesAssignment_10_4_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cUsedKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cByKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cNodesKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cUsedByNodesAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_11_3_0 = (RuleCall)cUsedByNodesAssignment_11_3.eContents().get(0);
		private final Group cGroup_11_4 = (Group)cGroup_11.eContents().get(4);
		private final Keyword cCommaKeyword_11_4_0 = (Keyword)cGroup_11_4.eContents().get(0);
		private final Assignment cUsedByNodesAssignment_11_4_1 = (Assignment)cGroup_11_4.eContents().get(1);
		private final RuleCall cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_11_4_1_0 = (RuleCall)cUsedByNodesAssignment_11_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cAspectsKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cAspectsAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cAspectsImportedOperationAspectParserRuleCall_13_2_0 = (RuleCall)cAspectsAssignment_13_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cDefaultKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cValuesKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_14_2 = (Keyword)cGroup_14.eContents().get(2);
		private final Alternatives cAlternatives_14_3 = (Alternatives)cGroup_14.eContents().get(3);
		private final Assignment cDefaultServicePropertyValuesAssignment_14_3_0 = (Assignment)cAlternatives_14_3.eContents().get(0);
		private final RuleCall cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_14_3_0_0 = (RuleCall)cDefaultServicePropertyValuesAssignment_14_3_0.eContents().get(0);
		private final Group cGroup_14_3_1 = (Group)cAlternatives_14_3.eContents().get(1);
		private final Keyword cBasicKeyword_14_3_1_0 = (Keyword)cGroup_14_3_1.eContents().get(0);
		private final Keyword cEndpointsKeyword_14_3_1_1 = (Keyword)cGroup_14_3_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_14_3_1_2 = (Keyword)cGroup_14_3_1.eContents().get(2);
		private final Assignment cDefaultBasicEndpointsAssignment_14_3_1_3 = (Assignment)cGroup_14_3_1.eContents().get(3);
		private final RuleCall cDefaultBasicEndpointsBasicEndpointParserRuleCall_14_3_1_3_0 = (RuleCall)cDefaultBasicEndpointsAssignment_14_3_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_3_1_4 = (Keyword)cGroup_14_3_1.eContents().get(4);
		private final Group cGroup_14_3_2 = (Group)cAlternatives_14_3.eContents().get(2);
		private final Assignment cDefaultServicePropertyValuesAssignment_14_3_2_0 = (Assignment)cGroup_14_3_2.eContents().get(0);
		private final RuleCall cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_14_3_2_0_0 = (RuleCall)cDefaultServicePropertyValuesAssignment_14_3_2_0.eContents().get(0);
		private final Keyword cBasicKeyword_14_3_2_1 = (Keyword)cGroup_14_3_2.eContents().get(1);
		private final Keyword cEndpointsKeyword_14_3_2_2 = (Keyword)cGroup_14_3_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_14_3_2_3 = (Keyword)cGroup_14_3_2.eContents().get(3);
		private final Assignment cDefaultBasicEndpointsAssignment_14_3_2_4 = (Assignment)cGroup_14_3_2.eContents().get(4);
		private final RuleCall cDefaultBasicEndpointsBasicEndpointParserRuleCall_14_3_2_4_0 = (RuleCall)cDefaultBasicEndpointsAssignment_14_3_2_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_3_2_5 = (Keyword)cGroup_14_3_2.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		private final Assignment cDeploymentSpecificationsAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_15_0 = (RuleCall)cDeploymentSpecificationsAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Container returns Container:
		//    ('@' 'technology' '(' technologies+=[service::Import] ')')+
		//    'container' name=ID
		//    'deployment' 'technology' deploymentTechnology=DeploymentTechnologyReference
		//    ('with' 'operation' 'environment'
		//        operationEnvironment=[technology::OperationEnvironment|STRING]
		//    )?
		//    'deploys' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
		//    (
		//        'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
		//        (',' dependsOnNodes+=PossiblyImportedOperationNode)*
		//    )?
		//    (
		//        'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
		//        (',' usedByNodes+=PossiblyImportedOperationNode)*
		//    )?
		//    '{'
		//        ('aspects' '{'
		//            aspects+=ImportedOperationAspect+
		//        '}')?
		//        ('default' 'values' '{'
		//            // Must not be empty
		//            (
		//                defaultServicePropertyValues+=PropertyValueAssignment+
		//                |
		//                ('basic' 'endpoints' '{'
		//                    defaultBasicEndpoints+=BasicEndpoint+
		//                '}')
		//                |
		//                (
		//                    defaultServicePropertyValues+=PropertyValueAssignment+
		//                    'basic' 'endpoints' '{'
		//                        defaultBasicEndpoints+=BasicEndpoint+
		//                    '}'
		//                )
		//            )
		//        '}')?
		//        deploymentSpecifications+=ServiceDeploymentSpecification*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+
		//'container' name=ID
		//'deployment' 'technology' deploymentTechnology=DeploymentTechnologyReference
		//('with' 'operation' 'environment'
		//    operationEnvironment=[technology::OperationEnvironment|STRING]
		//)?
		//'deploys' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
		//(
		//    'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
		//    (',' dependsOnNodes+=PossiblyImportedOperationNode)*
		//)?
		//(
		//    'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
		//    (',' usedByNodes+=PossiblyImportedOperationNode)*
		//)?
		//'{'
		//    ('aspects' '{'
		//        aspects+=ImportedOperationAspect+
		//    '}')?
		//    ('default' 'values' '{'
		//        // Must not be empty
		//        (
		//            defaultServicePropertyValues+=PropertyValueAssignment+
		//            |
		//            ('basic' 'endpoints' '{'
		//                defaultBasicEndpoints+=BasicEndpoint+
		//            '}')
		//            |
		//            (
		//                defaultServicePropertyValues+=PropertyValueAssignment+
		//                'basic' 'endpoints' '{'
		//                    defaultBasicEndpoints+=BasicEndpoint+
		//                '}'
		//            )
		//        )
		//    '}')?
		//    deploymentSpecifications+=ServiceDeploymentSpecification*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_0_1() { return cTechnologyKeyword_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//technologies+=[service::Import]
		public Assignment getTechnologiesAssignment_0_3() { return cTechnologiesAssignment_0_3; }
		
		//[service::Import]
		public CrossReference getTechnologiesImportCrossReference_0_3_0() { return cTechnologiesImportCrossReference_0_3_0; }
		
		//ID
		public RuleCall getTechnologiesImportIDTerminalRuleCall_0_3_0_1() { return cTechnologiesImportIDTerminalRuleCall_0_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//'container'
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'deployment'
		public Keyword getDeploymentKeyword_3() { return cDeploymentKeyword_3; }
		
		//'technology'
		public Keyword getTechnologyKeyword_4() { return cTechnologyKeyword_4; }
		
		//deploymentTechnology=DeploymentTechnologyReference
		public Assignment getDeploymentTechnologyAssignment_5() { return cDeploymentTechnologyAssignment_5; }
		
		//DeploymentTechnologyReference
		public RuleCall getDeploymentTechnologyDeploymentTechnologyReferenceParserRuleCall_5_0() { return cDeploymentTechnologyDeploymentTechnologyReferenceParserRuleCall_5_0; }
		
		//('with' 'operation' 'environment'
		//    operationEnvironment=[technology::OperationEnvironment|STRING]
		//)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'with'
		public Keyword getWithKeyword_6_0() { return cWithKeyword_6_0; }
		
		//'operation'
		public Keyword getOperationKeyword_6_1() { return cOperationKeyword_6_1; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_6_2() { return cEnvironmentKeyword_6_2; }
		
		//operationEnvironment=[technology::OperationEnvironment|STRING]
		public Assignment getOperationEnvironmentAssignment_6_3() { return cOperationEnvironmentAssignment_6_3; }
		
		//[technology::OperationEnvironment|STRING]
		public CrossReference getOperationEnvironmentOperationEnvironmentCrossReference_6_3_0() { return cOperationEnvironmentOperationEnvironmentCrossReference_6_3_0; }
		
		//STRING
		public RuleCall getOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_6_3_0_1() { return cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_6_3_0_1; }
		
		//'deploys'
		public Keyword getDeploysKeyword_7() { return cDeploysKeyword_7; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_8() { return cDeployedServicesAssignment_8; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_8_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_8_0; }
		
		//(',' deployedServices+=ImportedMicroservice)*
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_9_1() { return cDeployedServicesAssignment_9_1; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_9_1_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_9_1_0; }
		
		//(
		//    'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
		//    (',' dependsOnNodes+=PossiblyImportedOperationNode)*
		//)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'depends'
		public Keyword getDependsKeyword_10_0() { return cDependsKeyword_10_0; }
		
		//'on'
		public Keyword getOnKeyword_10_1() { return cOnKeyword_10_1; }
		
		//'nodes'
		public Keyword getNodesKeyword_10_2() { return cNodesKeyword_10_2; }
		
		//dependsOnNodes+=PossiblyImportedOperationNode
		public Assignment getDependsOnNodesAssignment_10_3() { return cDependsOnNodesAssignment_10_3; }
		
		//PossiblyImportedOperationNode
		public RuleCall getDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_10_3_0() { return cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_10_3_0; }
		
		//(',' dependsOnNodes+=PossiblyImportedOperationNode)*
		public Group getGroup_10_4() { return cGroup_10_4; }
		
		//','
		public Keyword getCommaKeyword_10_4_0() { return cCommaKeyword_10_4_0; }
		
		//dependsOnNodes+=PossiblyImportedOperationNode
		public Assignment getDependsOnNodesAssignment_10_4_1() { return cDependsOnNodesAssignment_10_4_1; }
		
		//PossiblyImportedOperationNode
		public RuleCall getDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_10_4_1_0() { return cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_10_4_1_0; }
		
		//(
		//    'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
		//    (',' usedByNodes+=PossiblyImportedOperationNode)*
		//)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'used'
		public Keyword getUsedKeyword_11_0() { return cUsedKeyword_11_0; }
		
		//'by'
		public Keyword getByKeyword_11_1() { return cByKeyword_11_1; }
		
		//'nodes'
		public Keyword getNodesKeyword_11_2() { return cNodesKeyword_11_2; }
		
		//usedByNodes+=PossiblyImportedOperationNode
		public Assignment getUsedByNodesAssignment_11_3() { return cUsedByNodesAssignment_11_3; }
		
		//PossiblyImportedOperationNode
		public RuleCall getUsedByNodesPossiblyImportedOperationNodeParserRuleCall_11_3_0() { return cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_11_3_0; }
		
		//(',' usedByNodes+=PossiblyImportedOperationNode)*
		public Group getGroup_11_4() { return cGroup_11_4; }
		
		//','
		public Keyword getCommaKeyword_11_4_0() { return cCommaKeyword_11_4_0; }
		
		//usedByNodes+=PossiblyImportedOperationNode
		public Assignment getUsedByNodesAssignment_11_4_1() { return cUsedByNodesAssignment_11_4_1; }
		
		//PossiblyImportedOperationNode
		public RuleCall getUsedByNodesPossiblyImportedOperationNodeParserRuleCall_11_4_1_0() { return cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_11_4_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//('aspects' '{'
		//    aspects+=ImportedOperationAspect+
		//'}')?
		public Group getGroup_13() { return cGroup_13; }
		
		//'aspects'
		public Keyword getAspectsKeyword_13_0() { return cAspectsKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//aspects+=ImportedOperationAspect+
		public Assignment getAspectsAssignment_13_2() { return cAspectsAssignment_13_2; }
		
		//ImportedOperationAspect
		public RuleCall getAspectsImportedOperationAspectParserRuleCall_13_2_0() { return cAspectsImportedOperationAspectParserRuleCall_13_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_3() { return cRightCurlyBracketKeyword_13_3; }
		
		//('default' 'values' '{'
		//    // Must not be empty
		//    (
		//        defaultServicePropertyValues+=PropertyValueAssignment+
		//        |
		//        ('basic' 'endpoints' '{'
		//            defaultBasicEndpoints+=BasicEndpoint+
		//        '}')
		//        |
		//        (
		//            defaultServicePropertyValues+=PropertyValueAssignment+
		//            'basic' 'endpoints' '{'
		//                defaultBasicEndpoints+=BasicEndpoint+
		//            '}'
		//        )
		//    )
		//'}')?
		public Group getGroup_14() { return cGroup_14; }
		
		//'default'
		public Keyword getDefaultKeyword_14_0() { return cDefaultKeyword_14_0; }
		
		//'values'
		public Keyword getValuesKeyword_14_1() { return cValuesKeyword_14_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_2() { return cLeftCurlyBracketKeyword_14_2; }
		
		//// Must not be empty
		//(
		//    defaultServicePropertyValues+=PropertyValueAssignment+
		//    |
		//    ('basic' 'endpoints' '{'
		//        defaultBasicEndpoints+=BasicEndpoint+
		//    '}')
		//    |
		//    (
		//        defaultServicePropertyValues+=PropertyValueAssignment+
		//        'basic' 'endpoints' '{'
		//            defaultBasicEndpoints+=BasicEndpoint+
		//        '}'
		//    )
		//)
		public Alternatives getAlternatives_14_3() { return cAlternatives_14_3; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+
		public Assignment getDefaultServicePropertyValuesAssignment_14_3_0() { return cDefaultServicePropertyValuesAssignment_14_3_0; }
		
		//PropertyValueAssignment
		public RuleCall getDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_14_3_0_0() { return cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_14_3_0_0; }
		
		//('basic' 'endpoints' '{'
		//    defaultBasicEndpoints+=BasicEndpoint+
		//'}')
		public Group getGroup_14_3_1() { return cGroup_14_3_1; }
		
		//'basic'
		public Keyword getBasicKeyword_14_3_1_0() { return cBasicKeyword_14_3_1_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_14_3_1_1() { return cEndpointsKeyword_14_3_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_3_1_2() { return cLeftCurlyBracketKeyword_14_3_1_2; }
		
		//defaultBasicEndpoints+=BasicEndpoint+
		public Assignment getDefaultBasicEndpointsAssignment_14_3_1_3() { return cDefaultBasicEndpointsAssignment_14_3_1_3; }
		
		//BasicEndpoint
		public RuleCall getDefaultBasicEndpointsBasicEndpointParserRuleCall_14_3_1_3_0() { return cDefaultBasicEndpointsBasicEndpointParserRuleCall_14_3_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_3_1_4() { return cRightCurlyBracketKeyword_14_3_1_4; }
		
		//(
		//    defaultServicePropertyValues+=PropertyValueAssignment+
		//    'basic' 'endpoints' '{'
		//        defaultBasicEndpoints+=BasicEndpoint+
		//    '}'
		//)
		public Group getGroup_14_3_2() { return cGroup_14_3_2; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+
		public Assignment getDefaultServicePropertyValuesAssignment_14_3_2_0() { return cDefaultServicePropertyValuesAssignment_14_3_2_0; }
		
		//PropertyValueAssignment
		public RuleCall getDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_14_3_2_0_0() { return cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_14_3_2_0_0; }
		
		//'basic'
		public Keyword getBasicKeyword_14_3_2_1() { return cBasicKeyword_14_3_2_1; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_14_3_2_2() { return cEndpointsKeyword_14_3_2_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_3_2_3() { return cLeftCurlyBracketKeyword_14_3_2_3; }
		
		//defaultBasicEndpoints+=BasicEndpoint+
		public Assignment getDefaultBasicEndpointsAssignment_14_3_2_4() { return cDefaultBasicEndpointsAssignment_14_3_2_4; }
		
		//BasicEndpoint
		public RuleCall getDefaultBasicEndpointsBasicEndpointParserRuleCall_14_3_2_4_0() { return cDefaultBasicEndpointsBasicEndpointParserRuleCall_14_3_2_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_3_2_5() { return cRightCurlyBracketKeyword_14_3_2_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_4() { return cRightCurlyBracketKeyword_14_4; }
		
		//deploymentSpecifications+=ServiceDeploymentSpecification*
		public Assignment getDeploymentSpecificationsAssignment_15() { return cDeploymentSpecificationsAssignment_15; }
		
		//ServiceDeploymentSpecification
		public RuleCall getDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_15_0() { return cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class DeploymentTechnologyReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.DeploymentTechnologyReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDeploymentTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cDeploymentTechnologyDeploymentTechnologyCrossReference_2_0 = (CrossReference)cDeploymentTechnologyAssignment_2.eContents().get(0);
		private final RuleCall cDeploymentTechnologyDeploymentTechnologyQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cDeploymentTechnologyDeploymentTechnologyCrossReference_2_0.eContents().get(1);
		
		//DeploymentTechnologyReference returns DeploymentTechnologyReference:
		//    ^import=[service::Import] '::'
		//    deploymentTechnology=[technology::DeploymentTechnology|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::'
		//deploymentTechnology=[technology::DeploymentTechnology|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//deploymentTechnology=[technology::DeploymentTechnology|QualifiedName]
		public Assignment getDeploymentTechnologyAssignment_2() { return cDeploymentTechnologyAssignment_2; }
		
		//[technology::DeploymentTechnology|QualifiedName]
		public CrossReference getDeploymentTechnologyDeploymentTechnologyCrossReference_2_0() { return cDeploymentTechnologyDeploymentTechnologyCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getDeploymentTechnologyDeploymentTechnologyQualifiedNameParserRuleCall_2_0_1() { return cDeploymentTechnologyDeploymentTechnologyQualifiedNameParserRuleCall_2_0_1; }
	}
	public class InfrastructureNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.InfrastructureNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTechnologyKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cTechnologiesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cTechnologiesImportCrossReference_0_3_0 = (CrossReference)cTechnologiesAssignment_0_3.eContents().get(0);
		private final RuleCall cTechnologiesImportIDTerminalRuleCall_0_3_0_1 = (RuleCall)cTechnologiesImportCrossReference_0_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cIsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInfrastructureTechnologyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInfrastructureTechnologyInfrastructureTechnologyReferenceParserRuleCall_3_0 = (RuleCall)cInfrastructureTechnologyAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWithKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cOperationKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cEnvironmentKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cOperationEnvironmentAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cOperationEnvironmentOperationEnvironmentCrossReference_4_3_0 = (CrossReference)cOperationEnvironmentAssignment_4_3.eContents().get(0);
		private final RuleCall cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_4_3_0_1 = (RuleCall)cOperationEnvironmentOperationEnvironmentCrossReference_4_3_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDependsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cOnKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cNodesKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cDependsOnNodesAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_5_3_0 = (RuleCall)cDependsOnNodesAssignment_5_3.eContents().get(0);
		private final Group cGroup_5_4 = (Group)cGroup_5.eContents().get(4);
		private final Keyword cCommaKeyword_5_4_0 = (Keyword)cGroup_5_4.eContents().get(0);
		private final Assignment cDependsOnNodesAssignment_5_4_1 = (Assignment)cGroup_5_4.eContents().get(1);
		private final RuleCall cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_5_4_1_0 = (RuleCall)cDependsOnNodesAssignment_5_4_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cUsedKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cByKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cServicesKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cDeployedServicesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_6_3_0 = (RuleCall)cDeployedServicesAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cDeployedServicesAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cDeployedServicesImportedMicroserviceParserRuleCall_6_4_1_0 = (RuleCall)cDeployedServicesAssignment_6_4_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsedKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cByKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cNodesKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cUsedByNodesAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_7_3_0 = (RuleCall)cUsedByNodesAssignment_7_3.eContents().get(0);
		private final Group cGroup_7_4 = (Group)cGroup_7.eContents().get(4);
		private final Keyword cCommaKeyword_7_4_0 = (Keyword)cGroup_7_4.eContents().get(0);
		private final Assignment cUsedByNodesAssignment_7_4_1 = (Assignment)cGroup_7_4.eContents().get(1);
		private final RuleCall cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_7_4_1_0 = (RuleCall)cUsedByNodesAssignment_7_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cAspectsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cAspectsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cAspectsImportedOperationAspectParserRuleCall_9_2_0 = (RuleCall)cAspectsAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDefaultKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cValuesKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cDefaultServicePropertyValuesAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_10_3_0 = (RuleCall)cDefaultServicePropertyValuesAssignment_10_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cEndpointsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cEndpointsAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cEndpointsBasicEndpointParserRuleCall_11_2_0 = (RuleCall)cEndpointsAssignment_11_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Assignment cDeploymentSpecificationsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_12_0 = (RuleCall)cDeploymentSpecificationsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//InfrastructureNode returns InfrastructureNode:
		//    ('@' 'technology' '(' technologies+=[service::Import] ')')+
		//    name=ID 'is' infrastructureTechnology=InfrastructureTechnologyReference
		//    ('with' 'operation' 'environment'
		//        operationEnvironment=[technology::OperationEnvironment|STRING]
		//    )?
		//     (
		//        'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
		//        (',' dependsOnNodes+=PossiblyImportedOperationNode)*
		//    )?
		//    (
		//        'used' 'by' 'services' deployedServices+=ImportedMicroservice
		//        (',' deployedServices+=ImportedMicroservice)*
		//    )?
		//    (
		//        'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
		//        (',' usedByNodes+=PossiblyImportedOperationNode)*
		//    )?
		//    '{'
		//        ('aspects' '{'
		//            aspects+=ImportedOperationAspect+
		//        '}')?
		//        ('default' 'values' '{'
		//            defaultServicePropertyValues+=PropertyValueAssignment+
		//        '}')?
		//        ('endpoints' '{'
		//            endpoints+=BasicEndpoint+
		//        '}')?
		//        deploymentSpecifications+=ServiceDeploymentSpecification*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+
		//name=ID 'is' infrastructureTechnology=InfrastructureTechnologyReference
		//('with' 'operation' 'environment'
		//    operationEnvironment=[technology::OperationEnvironment|STRING]
		//)?
		// (
		//    'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
		//    (',' dependsOnNodes+=PossiblyImportedOperationNode)*
		//)?
		//(
		//    'used' 'by' 'services' deployedServices+=ImportedMicroservice
		//    (',' deployedServices+=ImportedMicroservice)*
		//)?
		//(
		//    'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
		//    (',' usedByNodes+=PossiblyImportedOperationNode)*
		//)?
		//'{'
		//    ('aspects' '{'
		//        aspects+=ImportedOperationAspect+
		//    '}')?
		//    ('default' 'values' '{'
		//        defaultServicePropertyValues+=PropertyValueAssignment+
		//    '}')?
		//    ('endpoints' '{'
		//        endpoints+=BasicEndpoint+
		//    '}')?
		//    deploymentSpecifications+=ServiceDeploymentSpecification*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//('@' 'technology' '(' technologies+=[service::Import] ')')+
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//'technology'
		public Keyword getTechnologyKeyword_0_1() { return cTechnologyKeyword_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//technologies+=[service::Import]
		public Assignment getTechnologiesAssignment_0_3() { return cTechnologiesAssignment_0_3; }
		
		//[service::Import]
		public CrossReference getTechnologiesImportCrossReference_0_3_0() { return cTechnologiesImportCrossReference_0_3_0; }
		
		//ID
		public RuleCall getTechnologiesImportIDTerminalRuleCall_0_3_0_1() { return cTechnologiesImportIDTerminalRuleCall_0_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2() { return cIsKeyword_2; }
		
		//infrastructureTechnology=InfrastructureTechnologyReference
		public Assignment getInfrastructureTechnologyAssignment_3() { return cInfrastructureTechnologyAssignment_3; }
		
		//InfrastructureTechnologyReference
		public RuleCall getInfrastructureTechnologyInfrastructureTechnologyReferenceParserRuleCall_3_0() { return cInfrastructureTechnologyInfrastructureTechnologyReferenceParserRuleCall_3_0; }
		
		//('with' 'operation' 'environment'
		//    operationEnvironment=[technology::OperationEnvironment|STRING]
		//)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'with'
		public Keyword getWithKeyword_4_0() { return cWithKeyword_4_0; }
		
		//'operation'
		public Keyword getOperationKeyword_4_1() { return cOperationKeyword_4_1; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_4_2() { return cEnvironmentKeyword_4_2; }
		
		//operationEnvironment=[technology::OperationEnvironment|STRING]
		public Assignment getOperationEnvironmentAssignment_4_3() { return cOperationEnvironmentAssignment_4_3; }
		
		//[technology::OperationEnvironment|STRING]
		public CrossReference getOperationEnvironmentOperationEnvironmentCrossReference_4_3_0() { return cOperationEnvironmentOperationEnvironmentCrossReference_4_3_0; }
		
		//STRING
		public RuleCall getOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_4_3_0_1() { return cOperationEnvironmentOperationEnvironmentSTRINGTerminalRuleCall_4_3_0_1; }
		
		// (
		//    'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
		//    (',' dependsOnNodes+=PossiblyImportedOperationNode)*
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'depends'
		public Keyword getDependsKeyword_5_0() { return cDependsKeyword_5_0; }
		
		//'on'
		public Keyword getOnKeyword_5_1() { return cOnKeyword_5_1; }
		
		//'nodes'
		public Keyword getNodesKeyword_5_2() { return cNodesKeyword_5_2; }
		
		//dependsOnNodes+=PossiblyImportedOperationNode
		public Assignment getDependsOnNodesAssignment_5_3() { return cDependsOnNodesAssignment_5_3; }
		
		//PossiblyImportedOperationNode
		public RuleCall getDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_5_3_0() { return cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_5_3_0; }
		
		//(',' dependsOnNodes+=PossiblyImportedOperationNode)*
		public Group getGroup_5_4() { return cGroup_5_4; }
		
		//','
		public Keyword getCommaKeyword_5_4_0() { return cCommaKeyword_5_4_0; }
		
		//dependsOnNodes+=PossiblyImportedOperationNode
		public Assignment getDependsOnNodesAssignment_5_4_1() { return cDependsOnNodesAssignment_5_4_1; }
		
		//PossiblyImportedOperationNode
		public RuleCall getDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_5_4_1_0() { return cDependsOnNodesPossiblyImportedOperationNodeParserRuleCall_5_4_1_0; }
		
		//(
		//    'used' 'by' 'services' deployedServices+=ImportedMicroservice
		//    (',' deployedServices+=ImportedMicroservice)*
		//)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'used'
		public Keyword getUsedKeyword_6_0() { return cUsedKeyword_6_0; }
		
		//'by'
		public Keyword getByKeyword_6_1() { return cByKeyword_6_1; }
		
		//'services'
		public Keyword getServicesKeyword_6_2() { return cServicesKeyword_6_2; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_6_3() { return cDeployedServicesAssignment_6_3; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_6_3_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_6_3_0; }
		
		//(',' deployedServices+=ImportedMicroservice)*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//','
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//deployedServices+=ImportedMicroservice
		public Assignment getDeployedServicesAssignment_6_4_1() { return cDeployedServicesAssignment_6_4_1; }
		
		//ImportedMicroservice
		public RuleCall getDeployedServicesImportedMicroserviceParserRuleCall_6_4_1_0() { return cDeployedServicesImportedMicroserviceParserRuleCall_6_4_1_0; }
		
		//(
		//    'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
		//    (',' usedByNodes+=PossiblyImportedOperationNode)*
		//)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'used'
		public Keyword getUsedKeyword_7_0() { return cUsedKeyword_7_0; }
		
		//'by'
		public Keyword getByKeyword_7_1() { return cByKeyword_7_1; }
		
		//'nodes'
		public Keyword getNodesKeyword_7_2() { return cNodesKeyword_7_2; }
		
		//usedByNodes+=PossiblyImportedOperationNode
		public Assignment getUsedByNodesAssignment_7_3() { return cUsedByNodesAssignment_7_3; }
		
		//PossiblyImportedOperationNode
		public RuleCall getUsedByNodesPossiblyImportedOperationNodeParserRuleCall_7_3_0() { return cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_7_3_0; }
		
		//(',' usedByNodes+=PossiblyImportedOperationNode)*
		public Group getGroup_7_4() { return cGroup_7_4; }
		
		//','
		public Keyword getCommaKeyword_7_4_0() { return cCommaKeyword_7_4_0; }
		
		//usedByNodes+=PossiblyImportedOperationNode
		public Assignment getUsedByNodesAssignment_7_4_1() { return cUsedByNodesAssignment_7_4_1; }
		
		//PossiblyImportedOperationNode
		public RuleCall getUsedByNodesPossiblyImportedOperationNodeParserRuleCall_7_4_1_0() { return cUsedByNodesPossiblyImportedOperationNodeParserRuleCall_7_4_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//('aspects' '{'
		//    aspects+=ImportedOperationAspect+
		//'}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'aspects'
		public Keyword getAspectsKeyword_9_0() { return cAspectsKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//aspects+=ImportedOperationAspect+
		public Assignment getAspectsAssignment_9_2() { return cAspectsAssignment_9_2; }
		
		//ImportedOperationAspect
		public RuleCall getAspectsImportedOperationAspectParserRuleCall_9_2_0() { return cAspectsImportedOperationAspectParserRuleCall_9_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }
		
		//('default' 'values' '{'
		//    defaultServicePropertyValues+=PropertyValueAssignment+
		//'}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'default'
		public Keyword getDefaultKeyword_10_0() { return cDefaultKeyword_10_0; }
		
		//'values'
		public Keyword getValuesKeyword_10_1() { return cValuesKeyword_10_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_2() { return cLeftCurlyBracketKeyword_10_2; }
		
		//defaultServicePropertyValues+=PropertyValueAssignment+
		public Assignment getDefaultServicePropertyValuesAssignment_10_3() { return cDefaultServicePropertyValuesAssignment_10_3; }
		
		//PropertyValueAssignment
		public RuleCall getDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_10_3_0() { return cDefaultServicePropertyValuesPropertyValueAssignmentParserRuleCall_10_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//('endpoints' '{'
		//    endpoints+=BasicEndpoint+
		//'}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_11_0() { return cEndpointsKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//endpoints+=BasicEndpoint+
		public Assignment getEndpointsAssignment_11_2() { return cEndpointsAssignment_11_2; }
		
		//BasicEndpoint
		public RuleCall getEndpointsBasicEndpointParserRuleCall_11_2_0() { return cEndpointsBasicEndpointParserRuleCall_11_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }
		
		//deploymentSpecifications+=ServiceDeploymentSpecification*
		public Assignment getDeploymentSpecificationsAssignment_12() { return cDeploymentSpecificationsAssignment_12; }
		
		//ServiceDeploymentSpecification
		public RuleCall getDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_12_0() { return cDeploymentSpecificationsServiceDeploymentSpecificationParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class InfrastructureTechnologyReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.InfrastructureTechnologyReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInfrastructureTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0 = (CrossReference)cInfrastructureTechnologyAssignment_2.eContents().get(0);
		private final RuleCall cInfrastructureTechnologyInfrastructureTechnologyQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0.eContents().get(1);
		
		//InfrastructureTechnologyReference returns InfrastructureTechnologyReference:
		//    ^import=[service::Import] '::'
		//    infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::'
		//infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName]
		public Assignment getInfrastructureTechnologyAssignment_2() { return cInfrastructureTechnologyAssignment_2; }
		
		//[technology::InfrastructureTechnology|QualifiedName]
		public CrossReference getInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0() { return cInfrastructureTechnologyInfrastructureTechnologyCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getInfrastructureTechnologyInfrastructureTechnologyQualifiedNameParserRuleCall_2_0_1() { return cInfrastructureTechnologyInfrastructureTechnologyQualifiedNameParserRuleCall_2_0_1; }
	}
	public class ProtocolAndDataFormatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.ProtocolAndDataFormat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTechnologyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTechnologyImportCrossReference_0_0 = (CrossReference)cTechnologyAssignment_0.eContents().get(0);
		private final RuleCall cTechnologyImportIDTerminalRuleCall_0_0_1 = (RuleCall)cTechnologyImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProtocolAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProtocolProtocolCrossReference_2_0 = (CrossReference)cProtocolAssignment_2.eContents().get(0);
		private final RuleCall cProtocolProtocolQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cProtocolProtocolCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDataFormatAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cDataFormatDataFormatCrossReference_3_1_0 = (CrossReference)cDataFormatAssignment_3_1.eContents().get(0);
		private final RuleCall cDataFormatDataFormatSTRINGTerminalRuleCall_3_1_0_1 = (RuleCall)cDataFormatDataFormatCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ProtocolAndDataFormat returns ProtocolAndDataFormat:
		//    technology=[service::Import] '::'
		//    protocol=[technology::Protocol|QualifiedName]
		//    ('(' dataFormat=[technology::DataFormat|STRING] ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//technology=[service::Import] '::'
		//protocol=[technology::Protocol|QualifiedName]
		//('(' dataFormat=[technology::DataFormat|STRING] ')')?
		public Group getGroup() { return cGroup; }
		
		//technology=[service::Import]
		public Assignment getTechnologyAssignment_0() { return cTechnologyAssignment_0; }
		
		//[service::Import]
		public CrossReference getTechnologyImportCrossReference_0_0() { return cTechnologyImportCrossReference_0_0; }
		
		//ID
		public RuleCall getTechnologyImportIDTerminalRuleCall_0_0_1() { return cTechnologyImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//protocol=[technology::Protocol|QualifiedName]
		public Assignment getProtocolAssignment_2() { return cProtocolAssignment_2; }
		
		//[technology::Protocol|QualifiedName]
		public CrossReference getProtocolProtocolCrossReference_2_0() { return cProtocolProtocolCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getProtocolProtocolQualifiedNameParserRuleCall_2_0_1() { return cProtocolProtocolQualifiedNameParserRuleCall_2_0_1; }
		
		//('(' dataFormat=[technology::DataFormat|STRING] ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//dataFormat=[technology::DataFormat|STRING]
		public Assignment getDataFormatAssignment_3_1() { return cDataFormatAssignment_3_1; }
		
		//[technology::DataFormat|STRING]
		public CrossReference getDataFormatDataFormatCrossReference_3_1_0() { return cDataFormatDataFormatCrossReference_3_1_0; }
		
		//STRING
		public RuleCall getDataFormatDataFormatSTRINGTerminalRuleCall_3_1_0_1() { return cDataFormatDataFormatSTRINGTerminalRuleCall_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}
	public class BasicEndpointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.BasicEndpoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProtocolsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProtocolsProtocolAndDataFormatParserRuleCall_0_0 = (RuleCall)cProtocolsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cProtocolsProtocolAndDataFormatParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAddressesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_3_0 = (RuleCall)cAddressesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAddressesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAddressesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cAddressesAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BasicEndpoint returns BasicEndpoint:
		//    protocols+=ProtocolAndDataFormat (',' protocols+=ProtocolAndDataFormat)* ':'
		//    addresses+=STRING (',' addresses+=STRING)* ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//protocols+=ProtocolAndDataFormat (',' protocols+=ProtocolAndDataFormat)* ':'
		//addresses+=STRING (',' addresses+=STRING)* ';'
		public Group getGroup() { return cGroup; }
		
		//protocols+=ProtocolAndDataFormat
		public Assignment getProtocolsAssignment_0() { return cProtocolsAssignment_0; }
		
		//ProtocolAndDataFormat
		public RuleCall getProtocolsProtocolAndDataFormatParserRuleCall_0_0() { return cProtocolsProtocolAndDataFormatParserRuleCall_0_0; }
		
		//(',' protocols+=ProtocolAndDataFormat)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//protocols+=ProtocolAndDataFormat
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//ProtocolAndDataFormat
		public RuleCall getProtocolsProtocolAndDataFormatParserRuleCall_1_1_0() { return cProtocolsProtocolAndDataFormatParserRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_3() { return cAddressesAssignment_3; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_3_0() { return cAddressesSTRINGTerminalRuleCall_3_0; }
		
		//(',' addresses+=STRING)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//addresses+=STRING
		public Assignment getAddressesAssignment_4_1() { return cAddressesAssignment_4_1; }
		
		//STRING
		public RuleCall getAddressesSTRINGTerminalRuleCall_4_1_0() { return cAddressesSTRINGTerminalRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class ServiceDeploymentSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.ServiceDeploymentSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cServiceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cServiceImportedMicroserviceCrossReference_2_0 = (CrossReference)cServiceAssignment_2.eContents().get(0);
		private final RuleCall cServiceImportedMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1 = (RuleCall)cServiceImportedMicroserviceCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cServicePropertyValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cServicePropertyValuesPropertyValueAssignmentParserRuleCall_4_0 = (RuleCall)cServicePropertyValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cBasicKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEndpointsKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cBasicEndpointsAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cBasicEndpointsBasicEndpointParserRuleCall_5_3_0 = (RuleCall)cBasicEndpointsAssignment_5_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ServiceDeploymentSpecification returns ServiceDeploymentSpecification:
		//    ^import=[service::Import] '::' service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		//    '{'
		//        servicePropertyValues+=PropertyValueAssignment*
		//        ('basic' 'endpoints' '{'
		//            basicEndpoints+=BasicEndpoint+
		//        '}')?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::' service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		//'{'
		//    servicePropertyValues+=PropertyValueAssignment*
		//    ('basic' 'endpoints' '{'
		//        basicEndpoints+=BasicEndpoint+
		//    '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		public Assignment getServiceAssignment_2() { return cServiceAssignment_2; }
		
		//[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
		public CrossReference getServiceImportedMicroserviceCrossReference_2_0() { return cServiceImportedMicroserviceCrossReference_2_0; }
		
		//QualifiedNameWithAtLeastOneLevel
		public RuleCall getServiceImportedMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1() { return cServiceImportedMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//servicePropertyValues+=PropertyValueAssignment*
		public Assignment getServicePropertyValuesAssignment_4() { return cServicePropertyValuesAssignment_4; }
		
		//PropertyValueAssignment
		public RuleCall getServicePropertyValuesPropertyValueAssignmentParserRuleCall_4_0() { return cServicePropertyValuesPropertyValueAssignmentParserRuleCall_4_0; }
		
		//('basic' 'endpoints' '{'
		//    basicEndpoints+=BasicEndpoint+
		//'}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'basic'
		public Keyword getBasicKeyword_5_0() { return cBasicKeyword_5_0; }
		
		//'endpoints'
		public Keyword getEndpointsKeyword_5_1() { return cEndpointsKeyword_5_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_2() { return cLeftCurlyBracketKeyword_5_2; }
		
		//basicEndpoints+=BasicEndpoint+
		public Assignment getBasicEndpointsAssignment_5_3() { return cBasicEndpointsAssignment_5_3; }
		
		//BasicEndpoint
		public RuleCall getBasicEndpointsBasicEndpointParserRuleCall_5_3_0() { return cBasicEndpointsBasicEndpointParserRuleCall_5_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ImportedMicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.ImportedMicroservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0 = (CrossReference)cImportAssignment_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_1 = (RuleCall)cImportImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMicroserviceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMicroserviceMicroserviceCrossReference_2_0 = (CrossReference)cMicroserviceAssignment_2.eContents().get(0);
		private final RuleCall cMicroserviceMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1 = (RuleCall)cMicroserviceMicroserviceCrossReference_2_0.eContents().get(1);
		
		//ImportedMicroservice returns ImportedMicroservice:
		//    ^import=[service::Import] '::'
		//    microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=[service::Import] '::'
		//microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		public Group getGroup() { return cGroup; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0() { return cImportImportCrossReference_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		public Assignment getMicroserviceAssignment_2() { return cMicroserviceAssignment_2; }
		
		//[service::Microservice|QualifiedNameWithAtLeastOneLevel]
		public CrossReference getMicroserviceMicroserviceCrossReference_2_0() { return cMicroserviceMicroserviceCrossReference_2_0; }
		
		//QualifiedNameWithAtLeastOneLevel
		public RuleCall getMicroserviceMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1() { return cMicroserviceMicroserviceQualifiedNameWithAtLeastOneLevelParserRuleCall_2_0_1; }
	}
	public class PossiblyImportedOperationNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.PossiblyImportedOperationNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cImportAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cImportImportCrossReference_0_0_0 = (CrossReference)cImportAssignment_0_0.eContents().get(0);
		private final RuleCall cImportImportIDTerminalRuleCall_0_0_0_1 = (RuleCall)cImportImportCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cNodeOperationNodeCrossReference_1_0 = (CrossReference)cNodeAssignment_1.eContents().get(0);
		private final RuleCall cNodeOperationNodeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cNodeOperationNodeCrossReference_1_0.eContents().get(1);
		
		//PossiblyImportedOperationNode returns PossiblyImportedOperationNode:
		//    (^import=[service::Import] '::')? node=[OperationNode|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(^import=[service::Import] '::')? node=[OperationNode|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//(^import=[service::Import] '::')?
		public Group getGroup_0() { return cGroup_0; }
		
		//^import=[service::Import]
		public Assignment getImportAssignment_0_0() { return cImportAssignment_0_0; }
		
		//[service::Import]
		public CrossReference getImportImportCrossReference_0_0_0() { return cImportImportCrossReference_0_0_0; }
		
		//ID
		public RuleCall getImportImportIDTerminalRuleCall_0_0_0_1() { return cImportImportIDTerminalRuleCall_0_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }
		
		//node=[OperationNode|QualifiedName]
		public Assignment getNodeAssignment_1() { return cNodeAssignment_1; }
		
		//[OperationNode|QualifiedName]
		public CrossReference getNodeOperationNodeCrossReference_1_0() { return cNodeOperationNodeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getNodeOperationNodeQualifiedNameParserRuleCall_1_0_1() { return cNodeOperationNodeQualifiedNameParserRuleCall_1_0_1; }
	}
	public class PropertyValueAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.PropertyValueAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cPropertyAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cPropertyTechnologySpecificPropertyCrossReference_0_0_0 = (CrossReference)cPropertyAssignment_0_0.eContents().get(0);
		private final RuleCall cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_0_1 = (RuleCall)cPropertyTechnologySpecificPropertyCrossReference_0_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_0_2_0 = (RuleCall)cValueAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cPropertyAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cPropertyTechnologySpecificPropertyCrossReference_1_0_0 = (CrossReference)cPropertyAssignment_1_0.eContents().get(0);
		private final RuleCall cPropertyTechnologySpecificPropertyIDTerminalRuleCall_1_0_0_1 = (RuleCall)cPropertyTechnologySpecificPropertyCrossReference_1_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_1_2_0 = (RuleCall)cValueAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//@Override
		//PropertyValueAssignment returns technology::TechnologySpecificPropertyValueAssignment:
		//    (property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue) |
		//    (property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue) |
		//(property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue)
		public Group getGroup_0() { return cGroup_0; }
		
		//property=[technology::TechnologySpecificProperty]
		public Assignment getPropertyAssignment_0_0() { return cPropertyAssignment_0_0; }
		
		//[technology::TechnologySpecificProperty]
		public CrossReference getPropertyTechnologySpecificPropertyCrossReference_0_0_0() { return cPropertyTechnologySpecificPropertyCrossReference_0_0_0; }
		
		//ID
		public RuleCall getPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_0_1() { return cPropertyTechnologySpecificPropertyIDTerminalRuleCall_0_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_0_2() { return cValueAssignment_0_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_0_2_0() { return cValuePrimitiveValueParserRuleCall_0_2_0; }
		
		//(property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
		public Group getGroup_1() { return cGroup_1; }
		
		//property=[technology::TechnologySpecificProperty]
		public Assignment getPropertyAssignment_1_0() { return cPropertyAssignment_1_0; }
		
		//[technology::TechnologySpecificProperty]
		public CrossReference getPropertyTechnologySpecificPropertyCrossReference_1_0_0() { return cPropertyTechnologySpecificPropertyCrossReference_1_0_0; }
		
		//ID
		public RuleCall getPropertyTechnologySpecificPropertyIDTerminalRuleCall_1_0_0_1() { return cPropertyTechnologySpecificPropertyIDTerminalRuleCall_1_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_1_2() { return cValueAssignment_1_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_1_2_0() { return cValuePrimitiveValueParserRuleCall_1_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}
	public class ImportedOperationAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.ImportedOperationAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTechnologyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTechnologyImportCrossReference_0_0 = (CrossReference)cTechnologyAssignment_0.eContents().get(0);
		private final RuleCall cTechnologyImportIDTerminalRuleCall_0_0_1 = (RuleCall)cTechnologyImportCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAspectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAspectOperationAspectCrossReference_2_0 = (CrossReference)cAspectAssignment_2.eContents().get(0);
		private final RuleCall cAspectOperationAspectQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cAspectOperationAspectCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Assignment cSinglePropertyValueAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final RuleCall cSinglePropertyValuePrimitiveValueParserRuleCall_3_1_0_0 = (RuleCall)cSinglePropertyValueAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cAlternatives_3_1.eContents().get(1);
		private final Assignment cValuesAssignment_3_1_1_0 = (Assignment)cGroup_3_1_1.eContents().get(0);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_3_1_1_0_0 = (RuleCall)cValuesAssignment_3_1_1_0.eContents().get(0);
		private final Group cGroup_3_1_1_1 = (Group)cGroup_3_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_1_0 = (Keyword)cGroup_3_1_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_3_1_1_1_1 = (Assignment)cGroup_3_1_1_1.eContents().get(1);
		private final RuleCall cValuesPropertyValueAssignmentParserRuleCall_3_1_1_1_1_0 = (RuleCall)cValuesAssignment_3_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ImportedOperationAspect returns ImportedOperationAspect:
		//    technology=[service::Import] '::' aspect=[technology::OperationAspect|QualifiedName]
		//    (
		//        '('
		//            (
		//                singlePropertyValue=PrimitiveValue
		//                    |
		//                (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//            )
		//        ')'
		//    )?
		//    ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//technology=[service::Import] '::' aspect=[technology::OperationAspect|QualifiedName]
		//(
		//    '('
		//        (
		//            singlePropertyValue=PrimitiveValue
		//                |
		//            (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//        )
		//    ')'
		//)?
		//';'
		public Group getGroup() { return cGroup; }
		
		//technology=[service::Import]
		public Assignment getTechnologyAssignment_0() { return cTechnologyAssignment_0; }
		
		//[service::Import]
		public CrossReference getTechnologyImportCrossReference_0_0() { return cTechnologyImportCrossReference_0_0; }
		
		//ID
		public RuleCall getTechnologyImportIDTerminalRuleCall_0_0_1() { return cTechnologyImportIDTerminalRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//aspect=[technology::OperationAspect|QualifiedName]
		public Assignment getAspectAssignment_2() { return cAspectAssignment_2; }
		
		//[technology::OperationAspect|QualifiedName]
		public CrossReference getAspectOperationAspectCrossReference_2_0() { return cAspectOperationAspectCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getAspectOperationAspectQualifiedNameParserRuleCall_2_0_1() { return cAspectOperationAspectQualifiedNameParserRuleCall_2_0_1; }
		
		//(
		//    '('
		//        (
		//            singlePropertyValue=PrimitiveValue
		//                |
		//            (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//        )
		//    ')'
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//(
		//    singlePropertyValue=PrimitiveValue
		//        |
		//    (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		//)
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }
		
		//singlePropertyValue=PrimitiveValue
		public Assignment getSinglePropertyValueAssignment_3_1_0() { return cSinglePropertyValueAssignment_3_1_0; }
		
		//PrimitiveValue
		public RuleCall getSinglePropertyValuePrimitiveValueParserRuleCall_3_1_0_0() { return cSinglePropertyValuePrimitiveValueParserRuleCall_3_1_0_0; }
		
		//(values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_3_1_1_0() { return cValuesAssignment_3_1_1_0; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_3_1_1_0_0() { return cValuesPropertyValueAssignmentParserRuleCall_3_1_1_0_0; }
		
		//(',' values+=PropertyValueAssignment)*
		public Group getGroup_3_1_1_1() { return cGroup_3_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_1_1_0() { return cCommaKeyword_3_1_1_1_0; }
		
		//values+=PropertyValueAssignment
		public Assignment getValuesAssignment_3_1_1_1_1() { return cValuesAssignment_3_1_1_1_1; }
		
		//PropertyValueAssignment
		public RuleCall getValuesPropertyValueAssignmentParserRuleCall_3_1_1_1_1_0() { return cValuesPropertyValueAssignmentParserRuleCall_3_1_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	
	public class ImportTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.ImportType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTECHNOLOGYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTECHNOLOGYTechnologyKeyword_0_0 = (Keyword)cTECHNOLOGYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMICROSERVICESEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMICROSERVICESMicroservicesKeyword_1_0 = (Keyword)cMICROSERVICESEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOPERATION_NODESEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOPERATION_NODESNodesKeyword_2_0 = (Keyword)cOPERATION_NODESEnumLiteralDeclaration_2.eContents().get(0);
		
		//@Override
		//enum ImportType returns service::ImportType:
		//    TECHNOLOGY='technology' | MICROSERVICES='microservices' | OPERATION_NODES='nodes'
		//;
		public EnumRule getRule() { return rule; }
		
		//TECHNOLOGY='technology' | MICROSERVICES='microservices' | OPERATION_NODES='nodes'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TECHNOLOGY='technology'
		public EnumLiteralDeclaration getTECHNOLOGYEnumLiteralDeclaration_0() { return cTECHNOLOGYEnumLiteralDeclaration_0; }
		
		//'technology'
		public Keyword getTECHNOLOGYTechnologyKeyword_0_0() { return cTECHNOLOGYTechnologyKeyword_0_0; }
		
		//MICROSERVICES='microservices'
		public EnumLiteralDeclaration getMICROSERVICESEnumLiteralDeclaration_1() { return cMICROSERVICESEnumLiteralDeclaration_1; }
		
		//'microservices'
		public Keyword getMICROSERVICESMicroservicesKeyword_1_0() { return cMICROSERVICESMicroservicesKeyword_1_0; }
		
		//OPERATION_NODES='nodes'
		public EnumLiteralDeclaration getOPERATION_NODESEnumLiteralDeclaration_2() { return cOPERATION_NODESEnumLiteralDeclaration_2; }
		
		//'nodes'
		public Keyword getOPERATION_NODESNodesKeyword_2_0() { return cOPERATION_NODESNodesKeyword_2_0; }
	}
	
	private final OperationModelElements pOperationModel;
	private final ImportTypeElements eImportType;
	private final ContainerElements pContainer;
	private final DeploymentTechnologyReferenceElements pDeploymentTechnologyReference;
	private final InfrastructureNodeElements pInfrastructureNode;
	private final InfrastructureTechnologyReferenceElements pInfrastructureTechnologyReference;
	private final ProtocolAndDataFormatElements pProtocolAndDataFormat;
	private final BasicEndpointElements pBasicEndpoint;
	private final ServiceDeploymentSpecificationElements pServiceDeploymentSpecification;
	private final ImportedMicroserviceElements pImportedMicroservice;
	private final PossiblyImportedOperationNodeElements pPossiblyImportedOperationNode;
	private final PropertyValueAssignmentElements pPropertyValueAssignment;
	private final ImportedOperationAspectElements pImportedOperationAspect;
	private final TerminalRule tSTRING;
	
	private final Grammar grammar;
	
	private final ServiceDslGrammarAccess gaServiceDsl;
	
	private final TechnologyDslGrammarAccess gaTechnologyDsl;
	
	private final DataDslGrammarAccess gaDataDsl;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OperationDslGrammarAccess(GrammarProvider grammarProvider,
			ServiceDslGrammarAccess gaServiceDsl,
			TechnologyDslGrammarAccess gaTechnologyDsl,
			DataDslGrammarAccess gaDataDsl,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaServiceDsl = gaServiceDsl;
		this.gaTechnologyDsl = gaTechnologyDsl;
		this.gaDataDsl = gaDataDsl;
		this.gaTerminals = gaTerminals;
		this.pOperationModel = new OperationModelElements();
		this.eImportType = new ImportTypeElements();
		this.pContainer = new ContainerElements();
		this.pDeploymentTechnologyReference = new DeploymentTechnologyReferenceElements();
		this.pInfrastructureNode = new InfrastructureNodeElements();
		this.pInfrastructureTechnologyReference = new InfrastructureTechnologyReferenceElements();
		this.pProtocolAndDataFormat = new ProtocolAndDataFormatElements();
		this.pBasicEndpoint = new BasicEndpointElements();
		this.pServiceDeploymentSpecification = new ServiceDeploymentSpecificationElements();
		this.pImportedMicroservice = new ImportedMicroserviceElements();
		this.pPossiblyImportedOperationNode = new PossiblyImportedOperationNodeElements();
		this.pPropertyValueAssignment = new PropertyValueAssignmentElements();
		this.pImportedOperationAspect = new ImportedOperationAspectElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fhdo.lemma.operationdsl.OperationDsl.STRING");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fhdo.lemma.operationdsl.OperationDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public ServiceDslGrammarAccess getServiceDslGrammarAccess() {
		return gaServiceDsl;
	}
	
	public TechnologyDslGrammarAccess getTechnologyDslGrammarAccess() {
		return gaTechnologyDsl;
	}
	
	public DataDslGrammarAccess getDataDslGrammarAccess() {
		return gaDataDsl;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//OperationModel returns OperationModel:
	//    imports+=Import+
	//    containers+=Container*
	//    infrastructureNodes+=InfrastructureNode*
	//;
	public OperationModelElements getOperationModelAccess() {
		return pOperationModel;
	}
	
	public ParserRule getOperationModelRule() {
		return getOperationModelAccess().getRule();
	}
	
	//@Override
	//enum ImportType returns service::ImportType:
	//    TECHNOLOGY='technology' | MICROSERVICES='microservices' | OPERATION_NODES='nodes'
	//;
	public ImportTypeElements getImportTypeAccess() {
		return eImportType;
	}
	
	public EnumRule getImportTypeRule() {
		return getImportTypeAccess().getRule();
	}
	
	//Container returns Container:
	//    ('@' 'technology' '(' technologies+=[service::Import] ')')+
	//    'container' name=ID
	//    'deployment' 'technology' deploymentTechnology=DeploymentTechnologyReference
	//    ('with' 'operation' 'environment'
	//        operationEnvironment=[technology::OperationEnvironment|STRING]
	//    )?
	//    'deploys' deployedServices+=ImportedMicroservice (',' deployedServices+=ImportedMicroservice)*
	//    (
	//        'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
	//        (',' dependsOnNodes+=PossiblyImportedOperationNode)*
	//    )?
	//    (
	//        'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
	//        (',' usedByNodes+=PossiblyImportedOperationNode)*
	//    )?
	//    '{'
	//        ('aspects' '{'
	//            aspects+=ImportedOperationAspect+
	//        '}')?
	//        ('default' 'values' '{'
	//            // Must not be empty
	//            (
	//                defaultServicePropertyValues+=PropertyValueAssignment+
	//                |
	//                ('basic' 'endpoints' '{'
	//                    defaultBasicEndpoints+=BasicEndpoint+
	//                '}')
	//                |
	//                (
	//                    defaultServicePropertyValues+=PropertyValueAssignment+
	//                    'basic' 'endpoints' '{'
	//                        defaultBasicEndpoints+=BasicEndpoint+
	//                    '}'
	//                )
	//            )
	//        '}')?
	//        deploymentSpecifications+=ServiceDeploymentSpecification*
	//    '}'
	//;
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//DeploymentTechnologyReference returns DeploymentTechnologyReference:
	//    ^import=[service::Import] '::'
	//    deploymentTechnology=[technology::DeploymentTechnology|QualifiedName]
	//;
	public DeploymentTechnologyReferenceElements getDeploymentTechnologyReferenceAccess() {
		return pDeploymentTechnologyReference;
	}
	
	public ParserRule getDeploymentTechnologyReferenceRule() {
		return getDeploymentTechnologyReferenceAccess().getRule();
	}
	
	//InfrastructureNode returns InfrastructureNode:
	//    ('@' 'technology' '(' technologies+=[service::Import] ')')+
	//    name=ID 'is' infrastructureTechnology=InfrastructureTechnologyReference
	//    ('with' 'operation' 'environment'
	//        operationEnvironment=[technology::OperationEnvironment|STRING]
	//    )?
	//     (
	//        'depends' 'on' 'nodes' dependsOnNodes+=PossiblyImportedOperationNode
	//        (',' dependsOnNodes+=PossiblyImportedOperationNode)*
	//    )?
	//    (
	//        'used' 'by' 'services' deployedServices+=ImportedMicroservice
	//        (',' deployedServices+=ImportedMicroservice)*
	//    )?
	//    (
	//        'used' 'by' 'nodes' usedByNodes+=PossiblyImportedOperationNode
	//        (',' usedByNodes+=PossiblyImportedOperationNode)*
	//    )?
	//    '{'
	//        ('aspects' '{'
	//            aspects+=ImportedOperationAspect+
	//        '}')?
	//        ('default' 'values' '{'
	//            defaultServicePropertyValues+=PropertyValueAssignment+
	//        '}')?
	//        ('endpoints' '{'
	//            endpoints+=BasicEndpoint+
	//        '}')?
	//        deploymentSpecifications+=ServiceDeploymentSpecification*
	//    '}'
	//;
	public InfrastructureNodeElements getInfrastructureNodeAccess() {
		return pInfrastructureNode;
	}
	
	public ParserRule getInfrastructureNodeRule() {
		return getInfrastructureNodeAccess().getRule();
	}
	
	//InfrastructureTechnologyReference returns InfrastructureTechnologyReference:
	//    ^import=[service::Import] '::'
	//    infrastructureTechnology=[technology::InfrastructureTechnology|QualifiedName]
	//;
	public InfrastructureTechnologyReferenceElements getInfrastructureTechnologyReferenceAccess() {
		return pInfrastructureTechnologyReference;
	}
	
	public ParserRule getInfrastructureTechnologyReferenceRule() {
		return getInfrastructureTechnologyReferenceAccess().getRule();
	}
	
	//ProtocolAndDataFormat returns ProtocolAndDataFormat:
	//    technology=[service::Import] '::'
	//    protocol=[technology::Protocol|QualifiedName]
	//    ('(' dataFormat=[technology::DataFormat|STRING] ')')?
	//;
	public ProtocolAndDataFormatElements getProtocolAndDataFormatAccess() {
		return pProtocolAndDataFormat;
	}
	
	public ParserRule getProtocolAndDataFormatRule() {
		return getProtocolAndDataFormatAccess().getRule();
	}
	
	//BasicEndpoint returns BasicEndpoint:
	//    protocols+=ProtocolAndDataFormat (',' protocols+=ProtocolAndDataFormat)* ':'
	//    addresses+=STRING (',' addresses+=STRING)* ';'
	//;
	public BasicEndpointElements getBasicEndpointAccess() {
		return pBasicEndpoint;
	}
	
	public ParserRule getBasicEndpointRule() {
		return getBasicEndpointAccess().getRule();
	}
	
	//ServiceDeploymentSpecification returns ServiceDeploymentSpecification:
	//    ^import=[service::Import] '::' service=[ImportedMicroservice|QualifiedNameWithAtLeastOneLevel]
	//    '{'
	//        servicePropertyValues+=PropertyValueAssignment*
	//        ('basic' 'endpoints' '{'
	//            basicEndpoints+=BasicEndpoint+
	//        '}')?
	//    '}'
	//;
	public ServiceDeploymentSpecificationElements getServiceDeploymentSpecificationAccess() {
		return pServiceDeploymentSpecification;
	}
	
	public ParserRule getServiceDeploymentSpecificationRule() {
		return getServiceDeploymentSpecificationAccess().getRule();
	}
	
	//ImportedMicroservice returns ImportedMicroservice:
	//    ^import=[service::Import] '::'
	//    microservice=[service::Microservice|QualifiedNameWithAtLeastOneLevel]
	//;
	public ImportedMicroserviceElements getImportedMicroserviceAccess() {
		return pImportedMicroservice;
	}
	
	public ParserRule getImportedMicroserviceRule() {
		return getImportedMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedOperationNode returns PossiblyImportedOperationNode:
	//    (^import=[service::Import] '::')? node=[OperationNode|QualifiedName]
	//;
	public PossiblyImportedOperationNodeElements getPossiblyImportedOperationNodeAccess() {
		return pPossiblyImportedOperationNode;
	}
	
	public ParserRule getPossiblyImportedOperationNodeRule() {
		return getPossiblyImportedOperationNodeAccess().getRule();
	}
	
	//@Override
	//PropertyValueAssignment returns technology::TechnologySpecificPropertyValueAssignment:
	//    (property=[technology::TechnologySpecificProperty] '=' value=PrimitiveValue) |
	//    (property=[technology::TechnologySpecificProperty] '(' value=PrimitiveValue ')')
	//;
	public PropertyValueAssignmentElements getPropertyValueAssignmentAccess() {
		return pPropertyValueAssignment;
	}
	
	public ParserRule getPropertyValueAssignmentRule() {
		return getPropertyValueAssignmentAccess().getRule();
	}
	
	//ImportedOperationAspect returns ImportedOperationAspect:
	//    technology=[service::Import] '::' aspect=[technology::OperationAspect|QualifiedName]
	//    (
	//        '('
	//            (
	//                singlePropertyValue=PrimitiveValue
	//                    |
	//                (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
	//            )
	//        ')'
	//    )?
	//    ';'
	//;
	public ImportedOperationAspectElements getImportedOperationAspectAccess() {
		return pImportedOperationAspect;
	}
	
	public ParserRule getImportedOperationAspectRule() {
		return getImportedOperationAspectAccess().getRule();
	}
	
	//// Change overridden STRING terminal rule back to single-quote support (cf. the grammar of the
	//// Service DSL)
	//@Override
	//terminal STRING:
	//    '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//    "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//;
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//ServiceModel returns ServiceModel:
	//    imports+=Import*
	//    microservices+=Microservice+
	//;
	public ServiceDslGrammarAccess.ServiceModelElements getServiceModelAccess() {
		return gaServiceDsl.getServiceModelAccess();
	}
	
	public ParserRule getServiceModelRule() {
		return getServiceModelAccess().getRule();
	}
	
	//Import returns Import:
	//    'import' importType=ImportType 'from' importURI=STRING 'as' name=ID
	//;
	public ServiceDslGrammarAccess.ImportElements getImportAccess() {
		return gaServiceDsl.getImportAccess();
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//enum Visibility returns Visibility:
	//    INTERNAL='internal' | ARCHITECTURE='architecture' | PUBLIC='public'
	//;
	public ServiceDslGrammarAccess.VisibilityElements getVisibilityAccess() {
		return gaServiceDsl.getVisibilityAccess();
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//Microservice returns Microservice:
	//    (technologyReferences+=TechnologyReference)*
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    visibility=Visibility?
	//    type=MicroserviceType
	//    'microservice' name=QualifiedNameWithAtLeastOneLevel ('version' version=ID)?
	//    // TODO: Inheritance of microservices
	//    //('extends' super=[Microservice|QualifiedNameWithAtLeastOneLevel])?
	//    '{'
	//        ('required' 'microservices' '{'
	//            requiredMicroservices+=PossiblyImportedMicroservice
	//            (',' requiredMicroservices+=PossiblyImportedMicroservice)*
	//        '}')?
	//        ('required' 'interfaces' '{'
	//            requiredInterfaces+=PossiblyImportedInterface
	//            (',' requiredInterfaces+=PossiblyImportedInterface)*
	//        '}')?
	//        ('required' 'operations' '{'
	//            requiredOperations+=PossiblyImportedOperation
	//            (',' requiredOperations+=PossiblyImportedOperation)*
	//        '}')?
	//        interfaces+=Interface+
	//    '}'
	//;
	public ServiceDslGrammarAccess.MicroserviceElements getMicroserviceAccess() {
		return gaServiceDsl.getMicroserviceAccess();
	}
	
	public ParserRule getMicroserviceRule() {
		return getMicroserviceAccess().getRule();
	}
	
	//TechnologyReference returns TechnologyReference:
	//    '@' 'technology'
	//        '('
	//            technology=[Import]
	//            (',' 'typedef' '=' isTypeDefinitionTechnology=BOOLEAN)?
	//        ')'
	//;
	public ServiceDslGrammarAccess.TechnologyReferenceElements getTechnologyReferenceAccess() {
		return gaServiceDsl.getTechnologyReferenceAccess();
	}
	
	public ParserRule getTechnologyReferenceRule() {
		return getTechnologyReferenceAccess().getRule();
	}
	
	//PossiblyImportedMicroservice returns PossiblyImportedMicroservice:
	//    (^import=[Import] '::')? microservice=[Microservice|QualifiedName]
	//;
	public ServiceDslGrammarAccess.PossiblyImportedMicroserviceElements getPossiblyImportedMicroserviceAccess() {
		return gaServiceDsl.getPossiblyImportedMicroserviceAccess();
	}
	
	public ParserRule getPossiblyImportedMicroserviceRule() {
		return getPossiblyImportedMicroserviceAccess().getRule();
	}
	
	//PossiblyImportedInterface returns PossiblyImportedInterface:
	//    (^import=[Import] '::')? interface=[Interface|QualifiedName]
	//;
	public ServiceDslGrammarAccess.PossiblyImportedInterfaceElements getPossiblyImportedInterfaceAccess() {
		return gaServiceDsl.getPossiblyImportedInterfaceAccess();
	}
	
	public ParserRule getPossiblyImportedInterfaceRule() {
		return getPossiblyImportedInterfaceAccess().getRule();
	}
	
	//PossiblyImportedOperation returns PossiblyImportedOperation:
	//    (^import=[Import] '::')? operation=[Operation|QualifiedName]
	//;
	public ServiceDslGrammarAccess.PossiblyImportedOperationElements getPossiblyImportedOperationAccess() {
		return gaServiceDsl.getPossiblyImportedOperationAccess();
	}
	
	public ParserRule getPossiblyImportedOperationRule() {
		return getPossiblyImportedOperationAccess().getRule();
	}
	
	//Interface returns Interface:
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    (notImplemented?='noimpl')? visibility=Visibility? 'interface' name=ID ('version' version=ID)?
	//    '{'
	//        referredOperations+=ReferredOperation*
	//        operations+=Operation*
	//    '}'
	//;
	public ServiceDslGrammarAccess.InterfaceElements getInterfaceAccess() {
		return gaServiceDsl.getInterfaceAccess();
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//ApiOperationComment returns ApiOperationComment:
	//    '---'
	//        comment=Anything
	//        parameterComments+=ApiParameterComment*
	//    '---'
	//;
	public ServiceDslGrammarAccess.ApiOperationCommentElements getApiOperationCommentAccess() {
		return gaServiceDsl.getApiOperationCommentAccess();
	}
	
	public ParserRule getApiOperationCommentRule() {
		return getApiOperationCommentAccess().getRule();
	}
	
	//ApiParameterComment returns ApiParameterComment:
	//    ('@param' | required?='@required' | ^returned?='@returned')
	//    parameter=[Parameter]
	//    comment=Anything
	//;
	public ServiceDslGrammarAccess.ApiParameterCommentElements getApiParameterCommentAccess() {
		return gaServiceDsl.getApiParameterCommentAccess();
	}
	
	public ParserRule getApiParameterCommentRule() {
		return getApiParameterCommentAccess().getRule();
	}
	
	//Operation returns Operation:
	//    (apiOperationComment=ApiOperationComment)?
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    (notImplemented?='noimpl')? visibility=Visibility? name=ID '('
	//        parameters+=Parameter? (',' parameters+=Parameter)*
	//    ')' ';'
	//;
	public ServiceDslGrammarAccess.OperationElements getOperationAccess() {
		return gaServiceDsl.getOperationAccess();
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//ReferredOperation returns ReferredOperation:
	//    (protocols+=ProtocolSpecification (protocols+=ProtocolSpecification)?)?
	//    ('@' 'endpoints' '(' endpoints+=Endpoint+ ')')?
	//    ('@' 'endpoints' '({' endpoints+=Endpoint+ '})')?
	//    aspects+=ImportedServiceAspect*
	//    'refers' operation=[Operation|QualifiedName] ';'
	//;
	public ServiceDslGrammarAccess.ReferredOperationElements getReferredOperationAccess() {
		return gaServiceDsl.getReferredOperationAccess();
	}
	
	public ParserRule getReferredOperationRule() {
		return getReferredOperationAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    aspects+=ImportedServiceAspect*
	//    communicationType=CommunicationType
	//    exchangePattern=ExchangePattern?
	//    (communicatesFault?='fault')?
	//    name=ID
	//    (optional?='?')?
	//    ':'
	//    (primitiveType=PrimitiveType | importedType=ImportedType)
	//    ('=' initializedByOperation=PossiblyImportedOperation)?
	//;
	public ServiceDslGrammarAccess.ParameterElements getParameterAccess() {
		return gaServiceDsl.getParameterAccess();
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ImportedType returns ImportedType:
	//    ^import=[Import] '::' type=[data::Type|QualifiedName]
	//;
	public ServiceDslGrammarAccess.ImportedTypeElements getImportedTypeAccess() {
		return gaServiceDsl.getImportedTypeAccess();
	}
	
	public ParserRule getImportedTypeRule() {
		return getImportedTypeAccess().getRule();
	}
	
	//ProtocolSpecification returns ProtocolSpecification:
	//    '@' communicationType=CommunicationType '('
	//        protocol=ImportedProtocolAndDataFormat
	//    ')'
	//;
	public ServiceDslGrammarAccess.ProtocolSpecificationElements getProtocolSpecificationAccess() {
		return gaServiceDsl.getProtocolSpecificationAccess();
	}
	
	public ParserRule getProtocolSpecificationRule() {
		return getProtocolSpecificationAccess().getRule();
	}
	
	//ImportedProtocolAndDataFormat returns ImportedProtocolAndDataFormat:
	//    ^import=[Import] '::' importedProtocol=[technology::Protocol|QualifiedName]
	//    ('(' dataFormat=[technology::DataFormat|STRING] ')')?
	//;
	public ServiceDslGrammarAccess.ImportedProtocolAndDataFormatElements getImportedProtocolAndDataFormatAccess() {
		return gaServiceDsl.getImportedProtocolAndDataFormatAccess();
	}
	
	public ParserRule getImportedProtocolAndDataFormatRule() {
		return getImportedProtocolAndDataFormatAccess().getRule();
	}
	
	//Endpoint returns Endpoint:
	//    protocols+=ImportedProtocolAndDataFormat (',' protocols+=ImportedProtocolAndDataFormat)* ':'
	//    addresses+=STRING (',' addresses+=STRING)* ';'
	//;
	public ServiceDslGrammarAccess.EndpointElements getEndpointAccess() {
		return gaServiceDsl.getEndpointAccess();
	}
	
	public ParserRule getEndpointRule() {
		return getEndpointAccess().getRule();
	}
	
	//ImportedServiceAspect returns ImportedServiceAspect:
	//    '@' ^import=[Import] '::' importedAspect=[technology::ServiceAspect|QualifiedName]
	//    ('('
	//        (singlePropertyValue=PrimitiveValue
	//            |
	//         (values+=PropertyValueAssignment (',' values+=PropertyValueAssignment)*)
	//        )
	//    ')')?
	//;
	public ServiceDslGrammarAccess.ImportedServiceAspectElements getImportedServiceAspectAccess() {
		return gaServiceDsl.getImportedServiceAspectAccess();
	}
	
	public ParserRule getImportedServiceAspectRule() {
		return getImportedServiceAspectAccess().getRule();
	}
	
	//enum MicroserviceType returns MicroserviceType:
	//    FUNCTIONAL='functional' | UTILITY='utility' | INFRASTRUCTURE = 'infrastructure'
	//;
	public ServiceDslGrammarAccess.MicroserviceTypeElements getMicroserviceTypeAccess() {
		return gaServiceDsl.getMicroserviceTypeAccess();
	}
	
	public EnumRule getMicroserviceTypeRule() {
		return getMicroserviceTypeAccess().getRule();
	}
	
	//QualifiedNameWithAtLeastOneLevel:
	//    ID '.' QualifiedName
	//;
	public ServiceDslGrammarAccess.QualifiedNameWithAtLeastOneLevelElements getQualifiedNameWithAtLeastOneLevelAccess() {
		return gaServiceDsl.getQualifiedNameWithAtLeastOneLevelAccess();
	}
	
	public ParserRule getQualifiedNameWithAtLeastOneLevelRule() {
		return getQualifiedNameWithAtLeastOneLevelAccess().getRule();
	}
	
	//terminal NUMBER_WITH_TRAILING_PERIOD: INT '.';
	public TerminalRule getNUMBER_WITH_TRAILING_PERIODRule() {
		return gaServiceDsl.getNUMBER_WITH_TRAILING_PERIODRule();
	}
	
	//// Rule to consume any character
	//Anything:
	//    (
	//        // All keyword characters of the Service, Technology, and Data DSLs (the Service DSL
	//        // inherits from the latter ones). If we don't specify them here, they will be recognized as
	//        // regular grammar tokens in the Anything string.
	//        '{' | '}' | '<' | '>' | ',' | '(' | ')' | '::' | '.' | '-' | '--' | '/' | '?' | ':' | '@' |
	//        '=' | ';' |
	//        // All keywords of the Technology DSL (from which the Service DSL inherits). If we don't
	//        // specify them here, they will be recognized as regular grammar tokens in the Anything
	//        // string.
	//        'technology' | 'types' | 'compatibility' | 'matrix' | 'protocols' | 'service' | 'aspects' |
	//        'deployment' | 'technologies' | 'infrastructure' | 'operation' | 'import' | 'from' | 'as' |
	//        'data' | 'formats' | 'default' | 'with' | 'format' | 'in' | 'out' | 'inout' | 'sync' |
	//        'async' | 'primitive' | 'type' | 'based' | 'on' | 'collection' | 'structure'| '->' | '<-' |
	//        '<->' | 'environments' | 'properties' | 'mandatory' | 'singleval' | 'microservices' |
	//        'interfaces' | 'operations' | 'parameters' | 'fields' | 'exchange_pattern' |
	//        'communication_type' | 'protocol' | 'data_format' | 'aspect' | 'for' | 'containers' |
	//        'selector'
	//        // All keywords of the Data DSL (from which the Service DSL inherits). If we don't specify
	//        // them here, they will be recognized as regular grammar tokens in the Anything string.
	//        'datatypes' |  'version' | 'context' | 'aggregate'  | 'applicationService' | 'domainEvent' |
	//        'domainService' | 'entity' | 'factory' | 'infrastructureService' | 'repository' |
	//        'specification' | 'valueObject' | 'extends' | 'identifier' | 'neverEmpty' | 'part' |
	//        'hide' | 'immutable' | 'enum' | 'closure' | 'sideEffectFree' | 'validator' | 'function' |
	//        'procedure' | 'boolean' | 'byte' | 'char' | 'date' | 'double' | 'float' | 'int' | 'long' |
	//        'short' | 'string' |
	//        // All keywords of the Service DSL. If we don't specify them here, they will be recognized
	//        // as regular grammar tokens in the Anything string.
	//        'internal' | 'architecture' | 'public' | 'endpoints' | 'microservice' | 'required' |
	//        'returned' | 'typedef' | 'noimpl' | 'interface' | 'param' | 'refers' | 'fault' |
	//        'functional' | 'utility' |
	//        // All other terminal rules of the Service and the Data DSL (from which the Service DSL
	//        // inherits). If we don't specify them here, they will be recognized as regular grammar
	//        // tokens in the Anything string.
	//        BOOLEAN | NUMBER_WITH_TRAILING_PERIOD | BIG_DECIMAL | ID | STRING | ANY_OTHER
	//    )+
	//;
	public ServiceDslGrammarAccess.AnythingElements getAnythingAccess() {
		return gaServiceDsl.getAnythingAccess();
	}
	
	public ParserRule getAnythingRule() {
		return getAnythingAccess().getRule();
	}
	
	//Technology returns Technology:
	//    imports+=TechnologyImport*
	//    'technology' name=ID '{'
	//        ('types' '{'
	//            (primitiveTypes+=TechnologySpecificPrimitiveType |
	//                collectionTypes+=TechnologySpecificCollectionType |
	//                dataStructures+=TechnologySpecificDataStructure
	//            )+
	//            ('compatibility' 'matrix' '{'
	//                compatibilityEntries+=CompatibilityMatrixEntry+
	//            '}')?
	//        '}')?
	//        ('protocols' '{'
	//            protocols+=Protocol+
	//        '}')?
	//        ('service' 'aspects' '{'
	//            serviceAspects+=ServiceAspect+
	//        '}')?
	//        ('deployment' 'technologies' '{'
	//            deploymentTechnologies+=DeploymentTechnology+
	//        '}')?
	//        ('infrastructure' 'technologies' '{'
	//            infrastructureTechnologies+=InfrastructureTechnology+
	//        '}')?
	//        ('operation' 'aspects' '{'
	//            operationAspects+=OperationAspect+
	//        '}')?
	//    '}'
	//;
	public TechnologyDslGrammarAccess.TechnologyElements getTechnologyAccess() {
		return gaTechnologyDsl.getTechnologyAccess();
	}
	
	public ParserRule getTechnologyRule() {
		return getTechnologyAccess().getRule();
	}
	
	//TechnologyImport returns TechnologyImport:
	//    'import' 'technology' 'from' importURI=STRING 'as' name=ID
	//;
	public TechnologyDslGrammarAccess.TechnologyImportElements getTechnologyImportAccess() {
		return gaTechnologyDsl.getTechnologyImportAccess();
	}
	
	public ParserRule getTechnologyImportRule() {
		return getTechnologyImportAccess().getRule();
	}
	
	//Protocol returns Protocol:
	//    communicationType=CommunicationType
	//    name=ID
	//    'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)*
	//    (default?='default' 'with' 'format' defaultFormat=[DataFormat|STRING])?
	//    ';'
	//;
	public TechnologyDslGrammarAccess.ProtocolElements getProtocolAccess() {
		return gaTechnologyDsl.getProtocolAccess();
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//enum ExchangePattern returns ExchangePattern:
	//    IN='in' | OUT='out' | INOUT='inout'
	//;
	public TechnologyDslGrammarAccess.ExchangePatternElements getExchangePatternAccess() {
		return gaTechnologyDsl.getExchangePatternAccess();
	}
	
	public EnumRule getExchangePatternRule() {
		return getExchangePatternAccess().getRule();
	}
	
	//enum CommunicationType returns CommunicationType:
	//    SYNCHRONOUS='sync' | ASYNCHRONOUS='async'
	//;
	public TechnologyDslGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
		return gaTechnologyDsl.getCommunicationTypeAccess();
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}
	
	//DataFormat returns DataFormat:
	//    formatName=STRING
	//;
	public TechnologyDslGrammarAccess.DataFormatElements getDataFormatAccess() {
		return gaTechnologyDsl.getDataFormatAccess();
	}
	
	public ParserRule getDataFormatRule() {
		return getDataFormatAccess().getRule();
	}
	
	//TechnologySpecificPrimitiveType returns TechnologySpecificPrimitiveType:
	//    'primitive' 'type' name=ID
	//    (
	//        'based' 'on' basicBuiltinPrimitiveTypes+=PrimitiveType
	//            (',' basicBuiltinPrimitiveTypes+=PrimitiveType)*
	//        (default?='default')?
	//    )? ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificPrimitiveTypeElements getTechnologySpecificPrimitiveTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificPrimitiveTypeAccess();
	}
	
	public ParserRule getTechnologySpecificPrimitiveTypeRule() {
		return getTechnologySpecificPrimitiveTypeAccess().getRule();
	}
	
	//TechnologySpecificCollectionType returns TechnologySpecificCollectionType:
	//    'collection' 'type' name=ID ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificCollectionTypeElements getTechnologySpecificCollectionTypeAccess() {
		return gaTechnologyDsl.getTechnologySpecificCollectionTypeAccess();
	}
	
	public ParserRule getTechnologySpecificCollectionTypeRule() {
		return getTechnologySpecificCollectionTypeAccess().getRule();
	}
	
	//TechnologySpecificDataStructure returns TechnologySpecificDataStructure:
	//    'structure' 'type' name=ID ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificDataStructureElements getTechnologySpecificDataStructureAccess() {
		return gaTechnologyDsl.getTechnologySpecificDataStructureAccess();
	}
	
	public ParserRule getTechnologySpecificDataStructureRule() {
		return getTechnologySpecificDataStructureAccess().getRule();
	}
	
	//PossiblyImportedTechnologySpecificType returns PossiblyImportedTechnologySpecificType:
	//    (^import=[TechnologyImport] '::')? type=[data::Type|QualifiedName]
	//;
	public TechnologyDslGrammarAccess.PossiblyImportedTechnologySpecificTypeElements getPossiblyImportedTechnologySpecificTypeAccess() {
		return gaTechnologyDsl.getPossiblyImportedTechnologySpecificTypeAccess();
	}
	
	public ParserRule getPossiblyImportedTechnologySpecificTypeRule() {
		return getPossiblyImportedTechnologySpecificTypeAccess().getRule();
	}
	
	//enum CompatibilityDirection returns CompatibilityDirection:
	//    MAPPING_TO_COMPATIBLE_TYPES='<-' |
	//    COMPATIBLE_TYPES_TO_MAPPING='->' |
	//    BIDIRECTIONAL='<->'
	//;
	public TechnologyDslGrammarAccess.CompatibilityDirectionElements getCompatibilityDirectionAccess() {
		return gaTechnologyDsl.getCompatibilityDirectionAccess();
	}
	
	public EnumRule getCompatibilityDirectionRule() {
		return getCompatibilityDirectionAccess().getRule();
	}
	
	//CompatibilityMatrixEntry returns CompatibilityMatrixEntry:
	//    compatibleTypes+=PossiblyImportedTechnologySpecificType
	//    (',' compatibleTypes+=PossiblyImportedTechnologySpecificType)*
	//    direction=CompatibilityDirection
	//    mappingType=PossiblyImportedTechnologySpecificType
	//    ';'
	//;
	public TechnologyDslGrammarAccess.CompatibilityMatrixEntryElements getCompatibilityMatrixEntryAccess() {
		return gaTechnologyDsl.getCompatibilityMatrixEntryAccess();
	}
	
	public ParserRule getCompatibilityMatrixEntryRule() {
		return getCompatibilityMatrixEntryAccess().getRule();
	}
	
	//DeploymentTechnology returns DeploymentTechnology:
	//    name=ID '{'
	//        'operation' 'environments' '=' operationEnvironments+=OperationEnvironment
	//            (',' operationEnvironments+=OperationEnvironment)*
	//            ';'
	//        ('service' 'properties' '{'
	//            serviceProperties+=TechnologySpecificProperty+
	//        '}')?
	//    '}'
	//;
	public TechnologyDslGrammarAccess.DeploymentTechnologyElements getDeploymentTechnologyAccess() {
		return gaTechnologyDsl.getDeploymentTechnologyAccess();
	}
	
	public ParserRule getDeploymentTechnologyRule() {
		return getDeploymentTechnologyAccess().getRule();
	}
	
	//InfrastructureTechnology returns InfrastructureTechnology:
	//    name=ID '{'
	//        'operation' 'environments' '=' operationEnvironments+=OperationEnvironment
	//            (',' operationEnvironments+=OperationEnvironment)*
	//            ';'
	//        ('service' 'properties' '{'
	//            serviceProperties+=TechnologySpecificProperty+
	//        '}')?
	//    '}'
	//;
	public TechnologyDslGrammarAccess.InfrastructureTechnologyElements getInfrastructureTechnologyAccess() {
		return gaTechnologyDsl.getInfrastructureTechnologyAccess();
	}
	
	public ParserRule getInfrastructureTechnologyRule() {
		return getInfrastructureTechnologyAccess().getRule();
	}
	
	//OperationEnvironment returns OperationEnvironment:
	//    environmentName=STRING (default?='default')?
	//;
	public TechnologyDslGrammarAccess.OperationEnvironmentElements getOperationEnvironmentAccess() {
		return gaTechnologyDsl.getOperationEnvironmentAccess();
	}
	
	public ParserRule getOperationEnvironmentRule() {
		return getOperationEnvironmentAccess().getRule();
	}
	
	//enum PropertyFeature returns PropertyFeature:
	//    MANDATORY = 'mandatory' |
	//    SINGLE_VALUED = 'singleval'
	//;
	public TechnologyDslGrammarAccess.PropertyFeatureElements getPropertyFeatureAccess() {
		return gaTechnologyDsl.getPropertyFeatureAccess();
	}
	
	public EnumRule getPropertyFeatureRule() {
		return getPropertyFeatureAccess().getRule();
	}
	
	//TechnologySpecificProperty returns TechnologySpecificProperty:
	//    type=PrimitiveType name=ID
	//    ('=' defaultValue=PrimitiveValue)?
	//    ('<'
	//        features+=PropertyFeature (',' features+=PropertyFeature)*
	//    '>')?
	//    ';'
	//;
	public TechnologyDslGrammarAccess.TechnologySpecificPropertyElements getTechnologySpecificPropertyAccess() {
		return gaTechnologyDsl.getTechnologySpecificPropertyAccess();
	}
	
	public ParserRule getTechnologySpecificPropertyRule() {
		return getTechnologySpecificPropertyAccess().getRule();
	}
	
	//enum ServiceJoinPointType returns JoinPointType:
	//    COMPLEX_TYPES = 'types' |
	//    DATA_FIELDS = 'fields' |
	//    DATA_OPERATIONS = 'domainOperations' |
	//    DATA_OPERATION_PARAMETERS = 'domainParameters' |
	//    MICROSERVICES = 'microservices' |
	//    INTERFACES = 'interfaces' |
	//    OPERATIONS = 'operations' |
	//    PARAMETERS = 'parameters'
	//;
	public TechnologyDslGrammarAccess.ServiceJoinPointTypeElements getServiceJoinPointTypeAccess() {
		return gaTechnologyDsl.getServiceJoinPointTypeAccess();
	}
	
	public EnumRule getServiceJoinPointTypeRule() {
		return getServiceJoinPointTypeAccess().getRule();
	}
	
	//ServiceAspectPointcut returns ServiceAspectPointcut:
	//    forExchangePattern?='exchange_pattern' '=' exchangePattern=ExchangePattern |
	//    forCommunicationType?='communication_type' '=' communicationType=CommunicationType |
	//    forProtocol?='protocol' '=' protocol=[Protocol] |
	//    forDataFormat?='data_format' '=' dataFormat=[DataFormat|STRING]
	//;
	public TechnologyDslGrammarAccess.ServiceAspectPointcutElements getServiceAspectPointcutAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutAccess();
	}
	
	public ParserRule getServiceAspectPointcutRule() {
		return getServiceAspectPointcutAccess().getRule();
	}
	
	//ServiceAspectPointcutSelector returns ServiceAspectPointcutSelector:
	//    'selector' '('
	//        pointcuts+=ServiceAspectPointcut (',' pointcuts+=ServiceAspectPointcut)*
	//    ')' ';'
	//;
	public TechnologyDslGrammarAccess.ServiceAspectPointcutSelectorElements getServiceAspectPointcutSelectorAccess() {
		return gaTechnologyDsl.getServiceAspectPointcutSelectorAccess();
	}
	
	public ParserRule getServiceAspectPointcutSelectorRule() {
		return getServiceAspectPointcutSelectorAccess().getRule();
	}
	
	//enum AspectFeature returns AspectFeature:
	//    SINGLE_VALUED = 'singleval'
	//;
	public TechnologyDslGrammarAccess.AspectFeatureElements getAspectFeatureAccess() {
		return gaTechnologyDsl.getAspectFeatureAccess();
	}
	
	public EnumRule getAspectFeatureRule() {
		return getAspectFeatureAccess().getRule();
	}
	
	//ServiceAspect returns ServiceAspect:
	//    'aspect' name=ID
	//    ('<'
	//        features+=AspectFeature (',' features+=AspectFeature)*
	//    '>')?
	//    'for' joinPoints+=ServiceJoinPointType (',' joinPoints+=ServiceJoinPointType)*
	//    (
	//        ('{'
	//            pointcutSelectors+=ServiceAspectPointcutSelector*
	//            properties+=TechnologySpecificProperty*
	//        '}')
	//        |
	//        ';'
	//    )
	//;
	public TechnologyDslGrammarAccess.ServiceAspectElements getServiceAspectAccess() {
		return gaTechnologyDsl.getServiceAspectAccess();
	}
	
	public ParserRule getServiceAspectRule() {
		return getServiceAspectAccess().getRule();
	}
	
	//enum OperationJoinPointType returns JoinPointType:
	//    CONTAINERS = 'containers' | INFRASTRUCTURE_NODES = 'infrastructure'
	//;
	public TechnologyDslGrammarAccess.OperationJoinPointTypeElements getOperationJoinPointTypeAccess() {
		return gaTechnologyDsl.getOperationJoinPointTypeAccess();
	}
	
	public EnumRule getOperationJoinPointTypeRule() {
		return getOperationJoinPointTypeAccess().getRule();
	}
	
	//OperationAspectPointcut returns OperationAspectPointcut:
	//    forTechnology?='technology' '=' technology=[ecore::EObject|ID]
	//;
	public TechnologyDslGrammarAccess.OperationAspectPointcutElements getOperationAspectPointcutAccess() {
		return gaTechnologyDsl.getOperationAspectPointcutAccess();
	}
	
	public ParserRule getOperationAspectPointcutRule() {
		return getOperationAspectPointcutAccess().getRule();
	}
	
	//OperationAspectPointcutSelector returns OperationAspectPointcutSelector:
	//    'selector' '('
	//        pointcuts+=OperationAspectPointcut (',' pointcuts+=OperationAspectPointcut)*
	//    ')' ';'
	//;
	public TechnologyDslGrammarAccess.OperationAspectPointcutSelectorElements getOperationAspectPointcutSelectorAccess() {
		return gaTechnologyDsl.getOperationAspectPointcutSelectorAccess();
	}
	
	public ParserRule getOperationAspectPointcutSelectorRule() {
		return getOperationAspectPointcutSelectorAccess().getRule();
	}
	
	//OperationAspect returns OperationAspect:
	//    'aspect' name=ID
	//    ('<'
	//        features+=AspectFeature (',' features+=AspectFeature)*
	//    '>')?
	//    'for' joinPoints+=OperationJoinPointType (',' joinPoints+=OperationJoinPointType)*
	//    (
	//        ('{'
	//            pointcutSelectors+=OperationAspectPointcutSelector*
	//            properties+=TechnologySpecificProperty*
	//        '}')
	//        |
	//        ';'
	//    )
	//;
	public TechnologyDslGrammarAccess.OperationAspectElements getOperationAspectAccess() {
		return gaTechnologyDsl.getOperationAspectAccess();
	}
	
	public ParserRule getOperationAspectRule() {
		return getOperationAspectAccess().getRule();
	}
	
	//DataModel returns DataModel:
	//    complexTypeImports+=ComplexTypeImport*
	//    (versions+=Version+ | contexts+=Context+ | complexTypes+=ComplexType+)
	//;
	public DataDslGrammarAccess.DataModelElements getDataModelAccess() {
		return gaDataDsl.getDataModelAccess();
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}
	
	//ComplexTypeImport returns ComplexTypeImport:
	//    'import' 'datatypes' 'from' importURI=STRING 'as' name=ID
	//;
	public DataDslGrammarAccess.ComplexTypeImportElements getComplexTypeImportAccess() {
		return gaDataDsl.getComplexTypeImportAccess();
	}
	
	public ParserRule getComplexTypeImportRule() {
		return getComplexTypeImportAccess().getRule();
	}
	
	//Version returns Version:
	//    'version' name=ID '{'
	//         (complexTypes+=ComplexType+ | contexts+=Context+)?
	//     '}'
	//;
	public DataDslGrammarAccess.VersionElements getVersionAccess() {
		return gaDataDsl.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//Context returns Context:
	//    'context' name=ID '{'
	//        complexTypes+=ComplexType+
	//    '}'
	//;
	public DataDslGrammarAccess.ContextElements getContextAccess() {
		return gaDataDsl.getContextAccess();
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//ComplexType returns ComplexType:
	//    DataStructure | CollectionType | Enumeration
	//;
	public DataDslGrammarAccess.ComplexTypeElements getComplexTypeAccess() {
		return gaDataDsl.getComplexTypeAccess();
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//enum ComplexTypeFeature returns ComplexTypeFeature:
	//    AGGREGATE = 'aggregate' |
	//    APPLICATION_SERVICE = 'applicationService' |
	//    DOMAIN_EVENT = 'domainEvent' |
	//    DOMAIN_SERVICE = 'domainService' |
	//    ENTITY = 'entity' |
	//    FACTORY = 'factory' |
	//    INFRASTRUCTURE_SERVICE = 'infrastructureService' |
	//    REPOSITORY = 'repository' |
	//    SERVICE = 'service' |
	//    SPECIFICATION = 'specification' |
	//    VALUE_OBJECT = 'valueObject'
	//;
	public DataDslGrammarAccess.ComplexTypeFeatureElements getComplexTypeFeatureAccess() {
		return gaDataDsl.getComplexTypeFeatureAccess();
	}
	
	public EnumRule getComplexTypeFeatureRule() {
		return getComplexTypeFeatureAccess().getRule();
	}
	
	//DataStructure returns DataStructure:
	//    'structure' name=ID
	//    ('<' features+=ComplexTypeFeature (',' features+=ComplexTypeFeature)* '>')?
	//    ('extends' super=[DataStructure|QualifiedName])? '{'
	//        (
	//            (dataFields+=DataField | operations+=DataOperation)
	//            (',' (dataFields+=DataField | operations+=DataOperation))*
	//        )?
	//    '}'
	//;
	public DataDslGrammarAccess.DataStructureElements getDataStructureAccess() {
		return gaDataDsl.getDataStructureAccess();
	}
	
	public ParserRule getDataStructureRule() {
		return getDataStructureAccess().getRule();
	}
	
	//CollectionType returns CollectionType:
	//    'collection' name=ID '{'
	//        dataFields+=DataField (',' dataFields+=DataField)*
	//    '}'
	//    |
	//    'collection' name=ID '{'
	//        primitiveType=PrimitiveType
	//    '}'
	//;
	public DataDslGrammarAccess.CollectionTypeElements getCollectionTypeAccess() {
		return gaDataDsl.getCollectionTypeAccess();
	}
	
	public ParserRule getCollectionTypeRule() {
		return getCollectionTypeAccess().getRule();
	}
	
	//enum DataFieldFeature returns DataFieldFeature:
	//    IDENTIFIER = 'identifier' |
	//    NEVER_EMPTY = 'neverEmpty' |
	//    PART = 'part'
	//;
	public DataDslGrammarAccess.DataFieldFeatureElements getDataFieldFeatureAccess() {
		return gaDataDsl.getDataFieldFeatureAccess();
	}
	
	public EnumRule getDataFieldFeatureRule() {
		return getDataFieldFeatureAccess().getRule();
	}
	
	//DataField returns DataField:
	//    ^hidden?='hide'?
	//    immutable?='immutable'?
	//    (
	//        primitiveType=PrimitiveType |
	//        complexType=[ComplexType|QualifiedName] |
	//        importedComplexType=ImportedComplexType
	//    )?
	//    name=ID
	//    ('=' initializationValue=PrimitiveValue)?
	//    ('<' features+=DataFieldFeature (',' features+=DataFieldFeature)* '>')?
	//;
	public DataDslGrammarAccess.DataFieldElements getDataFieldAccess() {
		return gaDataDsl.getDataFieldAccess();
	}
	
	public ParserRule getDataFieldRule() {
		return getDataFieldAccess().getRule();
	}
	
	//Enumeration returns Enumeration:
	//    'enum' name=ID
	//    ('<' features+=ComplexTypeFeature (',' features+=ComplexTypeFeature)* '>')? '{'
	//        fields+=EnumerationField (',' fields+=EnumerationField)*
	//    '}'
	//;
	public DataDslGrammarAccess.EnumerationElements getEnumerationAccess() {
		return gaDataDsl.getEnumerationAccess();
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//EnumerationField returns EnumerationField:
	//    name=ID ('(' initializationValue=PrimitiveValue ')')?
	//;
	public DataDslGrammarAccess.EnumerationFieldElements getEnumerationFieldAccess() {
		return gaDataDsl.getEnumerationFieldAccess();
	}
	
	public ParserRule getEnumerationFieldRule() {
		return getEnumerationFieldAccess().getRule();
	}
	
	//enum DataOperationFeature returns DataOperationFeature:
	//    CLOSURE = 'closure' |
	//    IDENTIFIER = 'identifier' |
	//    SIDE_EFFECT_FREE = 'sideEffectFree' |
	//    VALIDATOR = 'validator'
	//;
	public DataDslGrammarAccess.DataOperationFeatureElements getDataOperationFeatureAccess() {
		return gaDataDsl.getDataOperationFeatureAccess();
	}
	
	public EnumRule getDataOperationFeatureRule() {
		return getDataOperationFeatureAccess().getRule();
	}
	
	//DataOperation returns DataOperation:
	//    ^hidden?='hide'?
	//    (
	//        hasNoReturnType ?= 'procedure' |
	//        'function'
	//            (
	//                primitiveReturnType=PrimitiveType |
	//                complexReturnType=[ComplexType|QualifiedName] |
	//                importedComplexReturnType=ImportedComplexType
	//            )?
	//    )
	//    name=ID
	//    ('(' parameters+=DataOperationParameter? (',' parameters+=DataOperationParameter)* ')')?
	//    ('<' features+=DataOperationFeature (',' features+=DataOperationFeature)* '>')?
	//;
	public DataDslGrammarAccess.DataOperationElements getDataOperationAccess() {
		return gaDataDsl.getDataOperationAccess();
	}
	
	public ParserRule getDataOperationRule() {
		return getDataOperationAccess().getRule();
	}
	
	//DataOperationParameter returns DataOperationParameter:
	//    (
	//        primitiveType=PrimitiveType |
	//        complexType=[ComplexType|QualifiedName] |
	//        importedComplexType=ImportedComplexType
	//    )
	//    name=ID
	//;
	public DataDslGrammarAccess.DataOperationParameterElements getDataOperationParameterAccess() {
		return gaDataDsl.getDataOperationParameterAccess();
	}
	
	public ParserRule getDataOperationParameterRule() {
		return getDataOperationParameterAccess().getRule();
	}
	
	//PrimitiveValue returns PrimitiveValue:
	//    numericValue=BIG_DECIMAL | booleanValue=BOOLEAN | stringValue=STRING
	//;
	public DataDslGrammarAccess.PrimitiveValueElements getPrimitiveValueAccess() {
		return gaDataDsl.getPrimitiveValueAccess();
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//ImportedComplexType returns ImportedComplexType:
	//    ^import=[ComplexTypeImport] '::' importedType=[Type|QualifiedName]
	//;
	public DataDslGrammarAccess.ImportedComplexTypeElements getImportedComplexTypeAccess() {
		return gaDataDsl.getImportedComplexTypeAccess();
	}
	
	public ParserRule getImportedComplexTypeRule() {
		return getImportedComplexTypeAccess().getRule();
	}
	
	//PrimitiveType returns PrimitiveType:
	//    {PrimitiveBoolean} 'boolean' |
	//    {PrimitiveByte} 'byte' |
	//    {PrimitiveCharacter} 'char' |
	//    {PrimitiveDate} 'date' |
	//    {PrimitiveDouble} 'double' |
	//    {PrimitiveFloat} 'float' |
	//    {PrimitiveInteger} 'int' |
	//    {PrimitiveLong} 'long' |
	//    {PrimitiveShort} 'short' |
	//    {PrimitiveString} 'string' |
	//    {PrimitiveUnspecified} 'unspecified'
	//;
	public DataDslGrammarAccess.PrimitiveTypeElements getPrimitiveTypeAccess() {
		return gaDataDsl.getPrimitiveTypeAccess();
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*
	//;
	public DataDslGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaDataDsl.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal BIG_DECIMAL returns ecore::EBigDecimal: '-'?INT ('.' INT)?;
	public TerminalRule getBIG_DECIMALRule() {
		return gaDataDsl.getBIG_DECIMALRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean: 'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return gaDataDsl.getBOOLEANRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
