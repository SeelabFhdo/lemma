"use strict";
/*!--------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See LICENSE in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentSettingsNotification = exports.DocumentSettingsRequest = exports.CRLF = exports.LF = void 0;
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
// TODO: can we get these from @types/vscode instead? It seems there's some type conflict between `Thenable<T>` from @types/vscode and vscode-jsonrpc preventing @types/vscode from working nicely
exports.LF = 1;
exports.CRLF = 2;
// Use the same syntax as the LSP
// eslint-disable-next-line @typescript-eslint/no-namespace
var DocumentSettingsRequest;
(function (DocumentSettingsRequest) {
    DocumentSettingsRequest.method = '$/textDocument/documentSettings';
    DocumentSettingsRequest.type = new vscode_languageserver_protocol_1.RequestType(DocumentSettingsRequest.method);
})(DocumentSettingsRequest = exports.DocumentSettingsRequest || (exports.DocumentSettingsRequest = {}));
// Use the same syntax as the LSP
// eslint-disable-next-line @typescript-eslint/no-namespace
var DocumentSettingsNotification;
(function (DocumentSettingsNotification) {
    DocumentSettingsNotification.method = '$/textDocument/documentSettings/didChange';
    DocumentSettingsNotification.type = new vscode_languageserver_protocol_1.NotificationType(DocumentSettingsNotification.method);
})(DocumentSettingsNotification = exports.DocumentSettingsNotification || (exports.DocumentSettingsNotification = {}));
//# sourceMappingURL=DocumentSettings.js.map